{"version":3,"sources":["node_modules/parseuri/index.js","node_modules/debug/node_modules/ms/index.js","node_modules/debug/src/common.js","node_modules/process/browser.js","node_modules/debug/src/browser.js","node_modules/socket.io-client/lib/url.js","node_modules/ms/index.js","node_modules/socket.io-parser/node_modules/debug/src/debug.js","node_modules/socket.io-parser/node_modules/debug/src/browser.js","node_modules/socket.io-parser/node_modules/component-emitter/index.js","node_modules/socket.io-parser/node_modules/isarray/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/isarray/index.js","node_modules/buffer/index.js","node_modules/socket.io-parser/is-buffer.js","node_modules/socket.io-parser/binary.js","node_modules/socket.io-parser/index.js","node_modules/has-cors/index.js","node_modules/engine.io-client/lib/globalThis.browser.js","node_modules/engine.io-client/lib/xmlhttprequest.js","node_modules/engine.io-parser/lib/keys.js","node_modules/has-binary2/node_modules/isarray/index.js","node_modules/has-binary2/index.js","node_modules/arraybuffer.slice/index.js","node_modules/after/index.js","node_modules/engine.io-parser/lib/utf8.js","node_modules/base64-arraybuffer/lib/base64-arraybuffer.js","node_modules/blob/index.js","node_modules/engine.io-parser/lib/browser.js","node_modules/component-emitter/index.js","node_modules/engine.io-client/lib/transport.js","node_modules/parseqs/index.js","node_modules/component-inherit/index.js","node_modules/yeast/index.js","node_modules/engine.io-client/lib/transports/polling.js","node_modules/engine.io-client/lib/transports/polling-xhr.js","node_modules/engine.io-client/lib/transports/polling-jsonp.js","node_modules/engine.io-client/lib/transports/websocket.js","node_modules/engine.io-client/lib/transports/index.js","node_modules/indexof/index.js","node_modules/engine.io-client/lib/socket.js","node_modules/engine.io-client/lib/index.js","node_modules/socket.io-client/node_modules/component-emitter/index.js","node_modules/to-array/index.js","node_modules/socket.io-client/lib/on.js","node_modules/component-bind/index.js","node_modules/socket.io-client/lib/socket.js","node_modules/backo2/index.js","node_modules/socket.io-client/lib/manager.js","node_modules/socket.io-client/lib/index.js","webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///src/common/services/Services.ts","webpack:///src/common/EventEmitter.ts","webpack:///src/common/Lifecycle.ts","webpack:///src/common/buffer/Constants.ts","webpack:///src/common/buffer/CellData.ts","webpack:///src/browser/services/Services.ts","webpack:///src/common/buffer/AttributeData.ts","webpack:///src/browser/Lifecycle.ts","webpack:///src/common/input/TextDecoder.ts","webpack:///src/browser/renderer/atlas/Constants.ts","webpack:///src/common/Platform.ts","webpack:///src/common/data/EscapeSequences.ts","webpack:///src/browser/renderer/BaseRenderLayer.ts","webpack:///src/common/services/ServiceRegistry.ts","webpack:///src/common/TypedArrayUtils.ts","webpack:///src/common/buffer/BufferLine.ts","webpack:///src/browser/LocalizableStrings.ts","webpack:///src/common/data/Charsets.ts","webpack:///src/common/CharWidth.ts","webpack:///src/common/parser/Params.ts","webpack:///src/common/parser/OscParser.ts","webpack:///src/common/parser/Constants.ts","webpack:///src/common/parser/DcsParser.ts","webpack:///src/browser/renderer/atlas/CharAtlasCache.ts","webpack:///src/browser/renderer/atlas/CharAtlasUtils.ts","webpack:///src/browser/ColorManager.ts","webpack:///src/browser/renderer/RendererUtils.ts","webpack:///src/browser/renderer/CharacterJoinerRegistry.ts","webpack:///src/browser/input/Mouse.ts","webpack:///src/browser/RenderDebouncer.ts","webpack:///src/browser/ScreenDprMonitor.ts","webpack:///src/common/Clone.ts","webpack:///src/public/Terminal.ts","webpack:///src/Terminal.ts","webpack:///src/browser/input/CompositionHelper.ts","webpack:///src/browser/Viewport.ts","webpack:///src/browser/Clipboard.ts","webpack:///src/InputHandler.ts","webpack:///src/common/parser/EscapeSequenceParser.ts","webpack:///src/renderer/Renderer.ts","webpack:///src/browser/renderer/TextRenderLayer.ts","webpack:///src/browser/renderer/GridCache.ts","webpack:///src/browser/renderer/atlas/DynamicCharAtlas.ts","webpack:///src/browser/renderer/atlas/BaseCharAtlas.ts","webpack:///src/browser/renderer/atlas/LRUMap.ts","webpack:///src/browser/renderer/SelectionRenderLayer.ts","webpack:///src/renderer/CursorRenderLayer.ts","webpack:///src/browser/renderer/LinkRenderLayer.ts","webpack:///src/browser/Linkifier.ts","webpack:///src/browser/services/SelectionService.ts","webpack:///src/browser/selection/SelectionModel.ts","webpack:///src/browser/input/MoveToCell.ts","webpack:///src/browser/services/SoundService.ts","webpack:///src/browser/MouseZoneManager.ts","webpack:///src/AccessibilityManager.ts","webpack:///src/renderer/dom/DomRenderer.ts","webpack:///src/browser/renderer/dom/DomRendererRowFactory.ts","webpack:///src/common/input/Keyboard.ts","webpack:///src/WindowsMode.ts","webpack:///src/browser/services/RenderService.ts","webpack:///src/common/services/OptionsService.ts","webpack:///src/browser/services/CharSizeService.ts","webpack:///src/common/services/BufferService.ts","webpack:///src/common/buffer/BufferSet.ts","webpack:///src/common/buffer/Buffer.ts","webpack:///src/common/CircularList.ts","webpack:///src/common/buffer/BufferReflow.ts","webpack:///src/common/buffer/Marker.ts","webpack:///src/browser/services/MouseService.ts","webpack:///src/common/services/CoreService.ts","webpack:///src/common/services/LogService.ts","webpack:///src/common/services/DirtyRowService.ts","webpack:///src/common/services/InstantiationService.ts","webpack:///src/common/services/CoreMouseService.ts","webpack:///src/common/input/WriteBuffer.ts","webpack:///src/public/AddonManager.ts","src/TerminalUI.js","src/index.js","node_modules/parcel-bundler/src/builtins/bundle-url.js","node_modules/parcel-bundler/src/builtins/css-loader.js","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","log","formatArgs","save","load","useColors","storage","localstorage","colors","window","type","__nwjs","navigator","userAgent","toLowerCase","match","document","documentElement","style","WebkitAppearance","console","firebug","exception","table","parseInt","RegExp","$1","namespace","humanize","diff","c","color","splice","index","lastC","replace","namespaces","setItem","removeItem","error","r","getItem","localStorage","require","formatters","j","v","JSON","stringify","message","chrome","local","err","Function","debug","enable","chars","lookup","Uint8Array","charCodeAt","encode","arraybuffer","bytes","base64","substring","decode","bufferLength","p","encoded1","encoded2","encoded3","encoded4","ArrayBuffer","root","factory","define","amd","a","installedModules","__webpack_require__","moduleId","l","modules","m","d","getter","o","Object","defineProperty","enumerable","get","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","hasOwnProperty","s","IBufferService","createDecorator","ICoreMouseService","ICoreService","IDirtyRowService","IInstantiationService","ILogService","IOptionsService","_listeners","this","_event","listener","dispose","fire","data","undefined","EventEmitter","_disposables","_isDisposed","forEach","register","unregister","indexOf","Disposable","DEFAULT_COLOR","DEFAULT_ATTR","CHAR_DATA_ATTR_INDEX","CHAR_DATA_CHAR_INDEX","CHAR_DATA_WIDTH_INDEX","CHAR_DATA_CODE_INDEX","NULL_CELL_CHAR","NULL_CELL_WIDTH","NULL_CELL_CODE","WHITESPACE_CELL_CHAR","WHITESPACE_CELL_WIDTH","WHITESPACE_CELL_CODE","content","fg","bg","combinedData","fromCharData","obj","CellData","setFromCharData","isCombined","getWidth","getChars","stringFromCodePoint","getCode","combined","code","second","getAsCharData","AttributeData","ICharSizeService","IMouseService","IRenderService","ISelectionService","ISoundService","toColorRGB","fromColorRGB","clone","newObj","isInverse","isBold","isUnderline","isBlink","isInvisible","isItalic","isDim","getFgColorMode","getBgColorMode","isFgRGB","isBgRGB","isFgPalette","isBgPalette","isFgDefault","isBgDefault","getFgColor","getBgColor","node","handler","useCapture","addEventListener","removeEventListener","codePoint","String","fromCharCode","start","end","result","codepoint","_interim","clear","input","target","size","startPos","StringToUtf32","interim","fill","byte1","byte2","byte3","byte4","discardInterim","cp","pos","tmp","missing","fourStop","Utf8ToUtf32","INVERTED_DEFAULT_COLOR","DIM_OPACITY","CHAR_ATLAS_CELL_SPACING","isNode","platform","contains","arr","el","isFirefox","isSafari","test","isMac","isIpad","isIphone","isWindows","isLinux","C0","NUL","SOH","STX","ETX","EOT","ENQ","ACK","BEL","BS","HT","LF","VT","FF","CR","SO","SI","DLE","DC1","DC2","DC3","DC4","NAK","SYN","ETB","CAN","EM","SUB","ESC","FS","GS","RS","US","SP","DEL","C1","PAD","HOP","BPH","NBH","IND","NEL","SSA","ESA","HTS","HTJ","VTS","PLD","PLU","RI","SS2","SS3","DCS","PU1","PU2","STS","CCH","MW","SPA","EPA","SOS","SGCI","SCI","CSI","ST","OSC","PM","APC","_container","id","zIndex","_alpha","_colors","_rendererId","_bufferService","_optionsService","_scaledCharWidth","_scaledCharHeight","_scaledCellWidth","_scaledCellHeight","_scaledCharLeft","_scaledCharTop","_currentGlyphIdentifier","bold","dim","italic","_canvas","createElement","classList","add","toString","_initCanvas","appendChild","removeChild","_charAtlas","_ctx","throwIfFalsy","getContext","alpha","_clearAll","onOptionsChanged","onBlur","onFocus","onCursorMove","onGridChanged","startRow","endRow","onSelectionChanged","columnSelectMode","setColors","colorSet","_refreshCharAtlas","_setTransparency","oldCanvas","cloneNode","replaceChild","rows","acquireCharAtlas","options","warmUp","resize","scaledCellWidth","scaledCellHeight","scaledCharWidth","scaledCharHeight","scaledCharLeft","scaledCharTop","width","scaledCanvasWidth","height","scaledCanvasHeight","canvasWidth","canvasHeight","_fillCells","x","y","fillRect","_fillBottomLineAtCells","devicePixelRatio","_fillLeftLineAtCell","_strokeRectAtCell","lineWidth","strokeRect","clearRect","fillStyle","background","css","_clearCells","_fillCharTrueColor","cell","font","_getFont","textBaseline","_clipRow","fillText","_drawChars","_drawUncachedChars","drawBoldTextInBrightColors","draw","join","ansi","foreground","globalAlpha","restore","beginPath","rect","cols","clip","fontWeightBold","fontWeight","fontSize","fontFamily","BaseRenderLayer","DI_TARGET","DI_DEPENDENCIES","storeServiceDependency","serviceRegistry","Map","ctor","has","decorator","set","fillFallback","b","constructor","CELL_SIZE","DEFAULT_ATTR_DATA","freeze","fillCellData","isWrapped","_combined","_data","Uint32Array","setCell","hasWidth","getFg","getBg","hasContent","getCodePoint","getString","loadCell","startIndex","setCellFromCodePoint","addCodepointToCell","insertCells","deleteCells","replaceCells","subarray","keys","copyFrom","line","newLine","BufferLine","getTrimmedLength","copyCellsFrom","src","srcCol","destCol","applyInReverse","srcData","srcCombinedKeys","translateToString","trimRight","startCol","endCol","Math","min","promptLabel","tooMuchOutput","CHARSETS","DEFAULT_CHARSET","wcwidth","opts","COMBINING_BMP","COMBINING_HIGH","control","nul","num","ucs","mid","max","bisearch","MAX_SUBPARAMS","maxLength","maxSubParamsLength","params","Int32Array","_subParams","_subParamsLength","_subParamsIdx","Uint16Array","_rejectDigits","_rejectSubDigits","_digitIsSub","fromArray","values","Params","k","addSubParam","addParam","newParams","toArray","res","slice","reset","hasSubParams","idx","getSubParams","getSubParamsAll","addDigit","store","cur","_state","_id","_handlers","_handlerFb","addHandler","ident","handlerList","handlerIndex","setHandler","clearHandler","setHandlerFallback","_start","handlers","_put","put","utf32ToString","_end","success","OscParser","_handler","_hitLimit","PAYLOAD_LIMIT","ret","OscHandler","EMPTY_HANDLERS","_active","_ident","unhook","hook","DcsParser","_params","DcsHandler","charAtlasCache","rendererId","newConfig","generateConfig","ownedByIndex","entry","ownedBy","configEquals","config","atlas","newEntry","DynamicCharAtlas","clonedColors","cursor","cursorAccent","selection","allowTransparency","rgba","colorCode","DEFAULT_FOREGROUND","fromHex","DEFAULT_BACKGROUND","DEFAULT_CURSOR","DEFAULT_CURSOR_ACCENT","DEFAULT_SELECTION","toPaddedHex","DEFAULT_ANSI_COLORS","g","ch","canvas","ctx","globalCompositeOperation","_litmusColor","createLinearGradient","setTheme","theme","_parseColor","black","red","green","yellow","blue","magenta","cyan","white","brightBlack","brightRed","brightGreen","brightYellow","brightBlue","brightMagenta","brightCyan","brightWhite","fallback","warn","getImageData","ColorManager","firstCell","_width","JoinedCellData","_characterJoiners","_nextCharacterJoinerId","_workCell","registerCharacterJoiner","joiner","deregisterCharacterJoiner","joinerId","getJoinedCharacters","row","buffer","lines","ranges","lineStr","rangeStartColumn","currentStringIndex","rangeStartStringIndex","rangeAttrFG","rangeAttrBG","joinedRanges","_getJoinedRanges","endIndex","lineData","text","joinerRanges","CharacterJoinerRegistry","_mergeRanges","_stringRangesToCellRanges","currentRangeIndex","currentRangeStarted","currentRange","newRange","inRange","range","getCoordsRelativeToElement","event","element","getBoundingClientRect","clientX","left","clientY","top","colCount","rowCount","hasValidCharSize","actualCellWidth","actualCellHeight","isSelection","coords","ceil","_renderCallback","_animationFrame","cancelAnimationFrame","refresh","rowStart","rowEnd","_rowCount","_rowStart","_rowEnd","requestAnimationFrame","_innerRefresh","RenderDebouncer","_currentDevicePixelRatio","setListener","_listener","clearListener","_outerListener","_updateDpr","_resolutionMediaMatchList","matchMedia","ScreenDprMonitor","val","depth","clonedObject","isArray","_core","Terminal","_addonManager","AddonManager","onLineFeed","onSelectionChange","onData","onTitleChange","onScroll","onKey","onRender","onResize","_parser","ParserApi","textarea","BufferApiView","markers","blur","focus","columns","_verifyIntegers","open","parent","attachCustomKeyEventHandler","customKeyEventHandler","registerLinkMatcher","regex","deregisterLinkMatcher","matcherId","addMarker","cursorYOffset","hasSelection","select","column","getSelection","getSelectionPosition","clearSelection","selectAll","selectLines","scrollLines","amount","scrollPages","pageCount","scrollToTop","scrollToBottom","scrollToLine","write","callback","writeUtf8","writeln","paste","getOption","optionsService","setOption","loadAddon","addon","Strings","Infinity","isNaN","_buffer","ydisp","ybase","getLine","BufferLineApiView","_line","getCell","BufferCellApiView","startColumn","endColumn","_x","addCsiHandler","addDcsHandler","addEscHandler","addOscHandler","browser","Browser","mouseEvents","_keyDownHandled","_blankLine","_onCursorMove","_onData","_onKey","_onLineFeed","_onRender","_onResize","_onScroll","_onSelectionChange","_onTitleChange","_onFocus","_onBlur","onA11yCharEmitter","onA11yTabEmitter","_instantiationService","InstantiationService","OptionsService","setService","createInstance","BufferService","_logService","LogService","_coreService","CoreService","_coreMouseService","CoreMouseService","_dirtyRowService","DirtyRowService","_setupOptionsListeners","_setup","_writeBuffer","WriteBuffer","_inputHandler","parse","_windowsMode","_renderService","_customKeyEventHandler","parentNode","_parent","body","cursorState","cursorHidden","applicationKeypad","originMode","insertMode","wraparoundMode","bracketedPasteMode","charset","gcharset","glevel","charsets","curAttrData","_eraseAttrData","currentParam","_userScrolling","InputHandler","linkifier","Linkifier","windowsMode","applyWindowsMode","buffers","active","eraseAttrData","preventScroll","activeElement","hasFocus","onOptionChange","_charSizeService","measure","setRenderer","_createRenderer","viewport","syncScrollArea","screenReaderMode","_accessibilityManager","AccessibilityManager","setupTabStops","_setTheme","_onTextAreaFocus","ev","sendFocus","triggerDataEvent","updateCursorStyle","showCursor","_onTextAreaBlur","remove","_initGlobal","_bindKeys","addDisposableDomListener","copyHandler","_selectionService","pasteHandlerWrapper","handlePasteEvent","button","rightClickHandler","screenElement","rightClickSelectsWord","moveTextAreaUnderMouseCursor","_keyUp","_keyDown","_keyPress","_compositionHelper","compositionstart","compositionupdate","compositionend","updateCompositionElements","_queueLinkification","_document","ownerDocument","setAttribute","fragment","createDocumentFragment","_viewportElement","_viewportScrollArea","_helperContainer","tabIndex","CharSizeService","_compositionView","CompositionHelper","_theme","_colorManager","renderer","RenderService","_soundService","SoundService","_mouseService","MouseService","Viewport","suppressEvent","onThemeChange","onDimensionsChange","SelectionService","onRedrawRequest","onLinuxMouseSelection","_mouseZoneManager","MouseZoneManager","clearAll","attachToDom","onMouseDown","disable","bindMouse","rendererType","Renderer","DomRenderer","self","sendEvent","but","action","getRawByteCoords","overrideType","buttons","deltaY","triggerMouseEvent","col","ctrl","ctrlKey","alt","altKey","shift","shiftKey","requestedEvents","mouseup","wheel","mousedrag","mousemove","eventListeners","cancel","preventDefault","onProtocolChange","events","logLevel","explainEvents","activeProtocol","shouldForceSelection","hasScrollback","getLinesScrolled","sequence","decPrivateModes","applicationCursorKeys","abs","onWheel","onTouchStart","onTouchMove","refreshRows","linkifyRows","shouldColumnSelect","scroll","eraseAttr","getBlankLine","topRow","scrollTop","bottomRow","scrollBottom","willBufferBeTrimmed","isFull","recycle","scrollRegionHeight","shiftElements","markRangeDirty","disp","suppressScrollEvent","oldYdisp","scrollAmount","normal","setSelection","selectionText","selectionStart","selectionEnd","keydown","evaluateKeyboardEvent","macOptionIsMeta","scrollCount","_isThirdLevelShift","domEvent","thirdLevelKey","metaKey","keyCode","setgLevel","setgCharset","wasModifierKeyOnlyEvent","charCode","which","bell","_soundBell","playBellSound","_visualBell","_visualBellTimer","MINIMUM_COLS","MINIMUM_ROWS","hasValidSize","is","term","termName","handleTitle","inputHandler","userScrolling","force","cancelEvents","stopPropagation","bellStyle","writeSync","_textarea","_isComposing","_isSendingComposition","_compositionPosition","textContent","_finalizeComposition","_handleAnyTextareaChanges","waitForPropagation","_clearTextareaPosition","oldValue","dontRecurse","isCursorInViewport","cellHeight","lineHeight","cursorTop","cursorLeft","compositionViewBounds","FALLBACK_SCROLL_BAR_WIDTH","_scrollLines","_scrollArea","scrollBarWidth","_currentRowHeight","_lastRecordedBufferLength","_lastRecordedViewportHeight","_lastRecordedBufferHeight","_lastTouchY","_lastScrollTop","_wheelPartialScroll","_refreshAnimationFrame","_ignoreNextScrollEvent","offsetWidth","backgroundColor","_refresh","immediate","dimensions","offsetHeight","newBufferHeight","round","newScrollTop","offsetParent","_bubbleScroll","scrollPosFromTop","cancelable","_getPixelsScrolled","_applyScrollModifier","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","DOM_DELTA_PIXEL","floor","modifier","fastScrollModifier","fastScrollSensitivity","scrollSensitivity","touches","pageY","prepareTextForTerminal","bracketTextForPaste","coreService","position","selectionService","clipboardData","setData","getData","shouldSelectWord","isClickInSelection","selectWordAtCursor","GLEVEL","pt","cursorStyle","cursorBlink","_terminal","EscapeSequenceParser","_parseBuffer","_stringDecoder","_utf8Decoder","setCsiHandlerFallback","identifier","identToString","setEscHandlerFallback","setExecuteHandlerFallback","setOscHandlerFallback","setDcsHandlerFallback","payload","setPrintHandler","print","setCsiHandler","final","insertChars","intermediates","scrollLeft","cursorUp","scrollRight","cursorDown","cursorForward","cursorBackward","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","cursorPosition","cursorForwardTab","eraseInDisplay","prefix","eraseInLine","insertLines","deleteLines","deleteChars","scrollUp","scrollDown","eraseChars","cursorBackwardTab","charPosAbsolute","hPositionRelative","repeatPrecedingCharacter","sendDeviceAttributesPrimary","sendDeviceAttributesSecondary","linePosAbsolute","vPositionRelative","hVPosition","tabClear","setMode","setModePrivate","resetMode","resetModePrivate","charAttributes","deviceStatus","deviceStatusPrivate","softReset","setCursorStyle","setScrollRegion","saveCursor","restoreCursor","insertColumns","deleteColumns","setExecuteHandler","lineFeed","carriageReturn","backspace","tab","shiftOut","shiftIn","nextLine","tabSet","setOscHandler","setTitle","setEscHandler","reverseIndex","keypadApplicationMode","keypadNumericMode","selectDefaultCharset","flag","selectCharset","screenAlignmentPattern","setErrorHandler","state","setDcsHandler","DECRQSS","cursorStartX","cursorStartY","chWidth","curAttr","bufferRow","markDirty","getNullCell","precedingCodepoint","convertEol","_restrictCursor","originalX","nextStop","_setCursor","_moveCursor","diffToTop","diffToBottom","param","tabs","prevStop","_eraseInBufferLine","clearWrap","_resetBufferLine","scrollBackSize","trimStart","scrollBottomRowsOffset","scrollBottomAbsolute","savedCols","activeEncoding","activateAltBuffer","activateNormalBuffer","_extractColor","attr","accu","cSpace","advance","subparams","isBlinking","bottom","savedX","savedY","savedCurAttrData","savedCharset","_savedCharset","collectAndFlag","level","yOffset","markAllDirty","setDefault","next","addMany","codes","TransitionTable","VT500_TRANSITION_TABLE","blueprint","map","unused","PRINTABLES","EXECUTABLES","states","TRANSITIONS","initialState","currentState","_collect","_printHandlerFb","_executeHandlerFb","_csiHandlerFb","_escHandlerFb","_errorHandlerFb","_printHandler","_executeHandlers","_csiHandlers","_escHandlers","_oscParser","_dcsParser","_errorHandler","_identifier","finalRange","intermediate","finalCode","reverse","clearPrintHandler","clearEscHandler","clearExecuteHandler","clearCsiHandler","clearDcsHandler","clearOscHandler","clearErrorHandler","transition","osc","dcs","collect","abort","handlersEsc","jj","nextRendererId","bufferService","_characterJoinerRegistry","_renderLayers","TextRenderLayer","SelectionRenderLayer","LinkRenderLayer","CursorRenderLayer","_devicePixelRatio","_updateDimensions","removeTerminalFromCache","onDevicePixelRatioChange","onCharSizeChanged","_runOperation","operation","renderRows","letterSpacing","container","characterJoinerRegistry","_characterWidth","_characterFont","_characterOverlapCache","GridCache","terminalFont","_forEachCell","firstRow","lastRow","joinerRegistry","isJoined","lastCharX","_isOverlapping","_drawBackground","startX","startY","prevFillStyle","nextFillStyle","_drawForeground","cache","beginFrame","overlaps","measureText","TEXTURE_WIDTH","TEXTURE_HEIGHT","TRANSPARENT_COLOR","getGlyphCacheKey","glyph","_config","_drawToCacheCount","_glyphsWaitingOnBitmap","_bitmapCommitTimeout","_bitmap","_cacheCanvas","_cacheCtx","tmpCanvas","_tmpCtx","_height","capacity","_cacheMap","LRUMap","prealloc","_canCache","glyphKey","cacheValue","_drawFromCache","peek","_drawToCache","_toCoordinateX","_toCoordinateY","isEmpty","cacheX","cacheY","drawImage","inBitmap","_getColorFromAnsiIndex","_getBackgroundColor","_getForegroundColor","fontStyle","imageData","offset","clearColor","putImageData","_addGlyphToBitmap","_generateBitmap","glyphsMovingToBitmap","createImageBitmap","then","bitmap","BaseCharAtlas","NoneCharAtlas","_didWarmUp","_doWarmUp","_map","_head","_tail","_nodePool","_unlinkNode","prev","_appendNode","tail","count","nodePool","peekValue","head","pop","_clearState","_didStateChange","viewportStartRow","viewportEndRow","viewportCappedStartRow","viewportCappedEndRow","startRowEndCol","middleRowsCount","_areCoordinatesEqual","coord1","coord2","_cell","isFocused","_cursorRenderers","_renderBarCursor","_renderBlockCursor","_renderUnderlineCursor","_clearCursor","_cursorBlinkStateManager","pause","resume","CursorBlinkStateManager","_render","restartBlinkAnimation","isPaused","triggeredByAnimationFrame","cursorY","viewportRelativeCursorY","_renderBlurCursor","isCursorVisible","strokeStyle","_restartInterval","_blinkStartTimeout","_blinkInterval","clearInterval","_animationTimeRestarted","Date","now","timeToStart","time","setInterval","onLinkHover","_onLinkHover","onLinkLeave","_onLinkLeave","_clearCurrentLink","x1","y1","middleRowCount","y2","x2","is256Color","_linkMatchers","_nextLinkMatcherId","_onLinkTooltip","_rowsToLinkify","mouseZoneManager","_element","_rowsTimeoutId","_linkifyRows","_timeBeforeLatency","absoluteRowIndexStart","absoluteRowIndexEnd","overscanLineLimit","iterator","hasNext","_doLinkifyRow","first","matcher","matchIndex","validationCallback","hoverTooltipCallback","tooltipCallback","hoverLeaveCallback","leaveCallback","willLinkActivate","priority","_addLinkMatcherToList","rowIndex","rex","source","flags","stringIndex","uri","lastIndex","bufferIndex","stringIndexToBufferIndex","isValid","_addLink","exec","getStringCellWidth","MouseZone","_createLinkHoverEvent","clickCallback","hoverCallback","NON_BREAKING_SPACE_CHAR","ALL_NON_BREAKING_SPACE_REGEX","_screenElement","_dragScrollAmount","_enabled","_mouseDownTimeStamp","_onLinuxMouseSelection","_onRedrawRequest","_mouseMoveListener","_onMouseMove","_mouseUpListener","_onMouseUp","onUserInput","_trimListener","onTrim","_onTrim","onBufferActivate","_onBufferActivate","_model","SelectionModel","_activeSelectionMode","_removeMouseDownListeners","finalSelectionStart","finalSelectionEnd","lineText","translateBufferLineToString","bufferLine","isLinuxMouseSelection","_getMouseBufferCoords","_areCoordsInSelection","_selectWordAt","isSelectAllActive","getCoords","_getMouseEventScrollAmount","terminalHeight","macOptionClickForcesSelection","timeStamp","_onIncrementalClick","detail","_onSingleClick","_onDoubleClick","_onTripleClick","_addMouseDownListeners","_dragScrollIntervalTimer","_dragScroll","selectionStartLength","_selectLineAt","stopImmediatePropagation","previousSelectionEnd","_selectToWordAt","timeElapsed","coordinates","moveToCellSequence","activeBuffer","_convertViewportColToCharacterIndex","charIndex","_getWordAt","allowWhitespaceOnlySelection","followWrappedLinesAbove","followWrappedLinesBelow","charOffset","leftWideCharCount","rightWideCharCount","leftLongCharOffset","rightLongCharOffset","charAt","_isCharWordSeparator","trim","previousBufferLine","previousLineWordPosition","nextBufferLine","nextLineWordPosition","wordPosition","areSelectionValuesReversed","wordSeparator","wrappedRange","getWrappedRangeForLine","last","startPlusLength","moveToRequestedRow","targetY","applicationCursor","wrappedRowsForRow","repeat","wrappedRows","direction","verticalDirection","wrappedRowsCount","currentRow","lineWraps","horizontalDirection","targetX","forward","currentCol","bufferStr","mod","str","rpt","moveHorizontallyOnly","resetStartingRow","moveToRequestedCol","_audioContext","audioContextCtor","AudioContext","webkitAudioContext","audioContext","bellAudioSource","createBufferSource","decodeAudioData","_base64ToArrayBuffer","_removeMimeType","bellSound","connect","destination","binaryString","atob","dataURI","split","_zones","_areZonesActive","_lastHoverCoords","_initialSelectionLength","_onMouseDown","_mouseLeaveListener","_onMouseLeave","_clickListener","_onClick","_deactivate","zone","_activate","_currentZone","pageX","_onHover","_findZoneEventAt","_tooltipTimeout","_onTooltip","_getSelectionLength","currentSelectionLength","_liveRegionLineCount","_charsToConsume","_charsToAnnounce","_accessibilityTreeRoot","_rowContainer","_rowElements","_createAccessibilityTreeNode","_topBoundaryFocusListener","_onBoundaryFocus","_bottomBoundaryFocusListener","_refreshRowsDimensions","_renderRowsDebouncer","_renderRows","_refreshRows","_liveRegion","insertAdjacentElement","onA11yChar","char","_onChar","onA11yTab","spaceCount","_onTab","_clearLiveRegion","_screenDprMonitor","boundaryElement","beforeBoundaryElement","getAttribute","relatedTarget","topBoundaryElement","bottomBoundaryElement","newElement","unshift","children","_refreshRowDimensions","MAX_ROWS_TO_READ","keyChar","setSize","posInSet","innerHTML","_announceCharacters","TERMINAL_CLASS_PREFIX","ROW_CONTAINER_CLASS","SELECTION_CLASS","nextTerminalId","_terminalClass","_refreshRowElements","_selectionContainer","_injectCss","_rowFactory","DomRendererRowFactory","_themeStyleElement","_dimensionsStyleElement","overflow","styles","_terminalSelector","BOLD_CLASS","ITALIC_CLASS","CURSOR_CLASS","CURSOR_STYLE_BLOCK_CLASS","CURSOR_BLINK_CLASS","CURSOR_STYLE_BAR_CLASS","CURSOR_STYLE_UNDERLINE_CLASS","documentFragment","_createSelectionElement","colStart","colEnd","terminal","cursorAbsoluteY","cursorX","rowElement","createRow","_setCellUnderline","enabled","span","textDecoration","DIM_CLASS","UNDERLINE_CLASS","isCursorRow","cellWidth","lineLength","charElement","swapColor","KEYCODE_KEY_MAPPINGS","48","49","50","51","52","53","54","55","56","57","186","187","188","189","190","191","192","219","220","221","222","applicationCursorMode","modifiers","keyMapping","lastChar","_renderer","charSizeService","_isPaused","_needsFullRefresh","_canvasWidth","_canvasHeight","_onDimensionsChange","_onRefreshRequest","_renderDebouncer","onCharSizeChange","IntersectionObserver","_onIntersectionChange","threshold","observe","disconnect","intersectionRatio","_fireOnCanvasResize","changeOptions","_fullRefresh","DEFAULT_BELL_SOUND","DEFAULT_OPTIONS","scrollback","disableStdin","tabStopWidth","screenKeys","useFlowControl","CONSTRUCTOR_ONLY_OPTIONS","_onOptionChange","newValue","_sanitizeAndValidateOption","parentElement","_onCharSizeChange","_measureStrategy","DomMeasureStrategy","_parentElement","_result","_measureElement","geometry","BufferSet","_normal","Buffer","fillViewportRows","_alt","_activeBuffer","inactiveBuffer","fillAttr","newCols","newRows","MAX_BUFFER_SIZE","_hasScrollback","_nullCell","_whitespaceCell","_cols","_rows","CircularList","_getCorrectBufferLength","getWhitespaceCell","relativeY","correctBufferLength","nullCell","newMaxLength","addToY","amountToTrim","_isReflowEnabled","_reflow","_reflowLarger","_reflowSmaller","toRemove","reflowLargerGetLinesToRemove","newLayoutResult","reflowLargerCreateNewLayout","reflowLargerApplyNewLayout","layout","_reflowLargerAdjustViewport","countRemoved","viewportAdjustments","toInsert","countToInsert","wrappedLines","absoluteY","lastLineLength","destLineLengths","reflowSmallerGetNewLineLengths","linesToAdd","trimmedLines","newLines","destLineIndex","srcLineIndex","cellsToCopy","wrappedLinesIndex","getWrappedLineTrimmedLength","insertEvents","originalLines","originalLinesLength","originalLineIndex","nextToInsertIndex","nextToInsert","countInsertedSoFar","nextI","insertCountEmitted","onInsertEmitter","onTrimEmitter","lineIndex","Marker","onInsert","onDelete","onDispose","_removeMarker","startOverscan","endOverscan","BufferStringIterator","_trimRight","_startIndex","_endIndex","_startOverscan","_endOverscan","_current","_maxLength","onDeleteEmitter","_array","_length","newArray","_getCyclicIndex","newLength","deleteCount","items","countToTrim","expandListBy","endsInNull","followingLineStartsWithWide","oldCols","bufferAbsoluteY","srcTrimmedTineLength","srcRemainingCells","destRemainingCells","countToRemove","nextToRemoveIndex","nextToRemoveStart","countRemovedSoFar","newLayout","newLayoutLines","newLineLengths","cellsNeeded","reduce","srcLine","cellsAvailable","oldTrimmedLength","endsWithWide","_nextId","isDisposed","_onDispose","DEFAULT_DEC_PRIVATE_MODES","_scrollToBottom","_onUserInput","wasUserInput","LogLevel","optionsKeyToLogLevel","DEBUG","info","INFO","WARN","ERROR","OFF","_updateLogLevel","_logLevel","_evalLazyOptionalParams","optionalParams","_log","clearRange","temp","_entries","entries","service","instance","ServiceCollection","_services","serviceDependencies","getServiceDependencies","sort","serviceArgs","dependency","firstServiceArgPos","DEFAULT_PROTOCOLS","NONE","restrict","X10","VT200","DRAG","ANY","eventCode","isSGR","S","DEFAULT_ENCODINGS","DEFAULT","SGR","_protocols","_encodings","_activeProtocol","_activeEncoding","_onProtocolChange","_lastEvent","addProtocol","addEncoding","protocol","encoding","_compareEvents","report","DOWN","UP","MOVE","WHEEL","e1","e2","_action","_callbacks","_pendingData","_bufferOffset","cb","_innerWrite","startTime","_addons","loadedAddon","_wrappedAddonDispose","activate","TerminalUI","socket","sendInput","prompt","serverAddress","startTerminal","attachTo","startListening","connectToSocket","Promise","getElementById","bundleURL","getBundleURLCached","getBundleURL","matches","stack","getBaseURL","url","bundle","updateLink","link","newLink","onload","href","insertBefore","nextSibling","cssTimeout","reloadCSS","links","querySelectorAll","OVERLAY_ID","OldModule","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","location","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","close","onclose","removeErrorOverlay","overlay","createErrorOverlay","stackTrace","innerText","getParents","parents","dep","deps","cached","some"],"mappings":"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AED,SAAOA,CAAP;AACD;AAED;;;;;AAIAhG,OAAO,CAAC+G,MAAR,CAAenD,IAAI,EAAnB;AAEA;;;;;;;;;;;AAWA,SAASG,YAAT,GAAwB;AACtB,MAAI;AACF,WAAOE,MAAM,CAACiC,YAAd;AACD,GAFD,CAEE,OAAO3F,CAAP,EAAU,CAAE;AACf;;AClnxJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpFA;AACA;AACA;AACA;AACA;AACA;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AC7vDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChlNA;;;;;;;AAOA,CAAC,YAAU;AACT;;AAEA,MAAIyG,KAAK,GAAG,kEAAZ,CAHS,CAKT;;AACA,MAAIC,MAAM,GAAG,IAAIC,UAAJ,CAAe,GAAf,CAAb;;AACA,OAAK,IAAIrF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGmF,KAAK,CAAC7F,MAA1B,EAAkCU,CAAC,EAAnC,EAAuC;AACrCoF,IAAAA,MAAM,CAACD,KAAK,CAACG,UAAN,CAAiBtF,CAAjB,CAAD,CAAN,GAA8BA,CAA9B;AACD;;AAED7B,EAAAA,OAAO,CAACoH,MAAR,GAAiB,UAASC,WAAT,EAAsB;AACrC,QAAIC,KAAK,GAAG,IAAI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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpljKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACprlatvSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrunKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvtbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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AAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAC7C,CAAC,KAAQ,MAAS,CAAC,KAAQ,MAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAAS,CAAC,MAAQ,OAC7C,CAAC,MAAQ,OAAS,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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["/**\r\n * Parses an URI\r\n *\r\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\r\n * @api private\r\n */\r\n\r\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\r\n\r\nvar parts = [\r\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\r\n];\r\n\r\nmodule.exports = function parseuri(str) {\r\n    var src = str,\r\n        b = str.indexOf('['),\r\n        e = str.indexOf(']');\r\n\r\n    if (b != -1 && e != -1) {\r\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\r\n    }\r\n\r\n    var m = re.exec(str || ''),\r\n        uri = {},\r\n        i = 14;\r\n\r\n    while (i--) {\r\n        uri[parts[i]] = m[i] || '';\r\n    }\r\n\r\n    if (b != -1 && e != -1) {\r\n        uri.source = src;\r\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\r\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\r\n        uri.ipv6uri = true;\r\n    }\r\n\r\n    return uri;\r\n};\r\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* Active `debug` instances.\n\t*/\n\tcreateDebug.instances = [];\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.enabled = createDebug.enabled(namespace);\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = selectColor(namespace);\n\t\tdebug.destroy = destroy;\n\t\tdebug.extend = extend;\n\t\t// Debug.formatArgs = formatArgs;\n\t\t// debug.rawLog = rawLog;\n\n\t\t// env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\tcreateDebug.instances.push(debug);\n\n\t\treturn debug;\n\t}\n\n\tfunction destroy() {\n\t\tconst index = createDebug.instances.indexOf(this);\n\t\tif (index !== -1) {\n\t\t\tcreateDebug.instances.splice(index, 1);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0; i < createDebug.instances.length; i++) {\n\t\t\tconst instance = createDebug.instances[i];\n\t\t\tinstance.enabled = createDebug.enabled(instance.namespace);\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\nfunction log(...args) {\n\t// This hackery is required for IE8/9, where\n\t// the `console.log` function doesn't have 'apply'\n\treturn typeof console === 'object' &&\n\t\tconsole.log &&\n\t\tconsole.log(...args);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parseuri = require('parseuri');\nvar debug = require('debug')('socket.io-client:url');\n\n/**\n * Module exports.\n */\n\nmodule.exports = url;\n\n/**\n * URL parser.\n *\n * @param {String} url\n * @param {Object} An object meant to mimic window.location.\n *                 Defaults to window.location.\n * @api public\n */\n\nfunction url (uri, loc) {\n  var obj = uri;\n\n  // default to window.location\n  loc = loc || (typeof location !== 'undefined' && location);\n  if (null == uri) uri = loc.protocol + '//' + loc.host;\n\n  // relative path support\n  if ('string' === typeof uri) {\n    if ('/' === uri.charAt(0)) {\n      if ('/' === uri.charAt(1)) {\n        uri = loc.protocol + uri;\n      } else {\n        uri = loc.host + uri;\n      }\n    }\n\n    if (!/^(https?|wss?):\\/\\//.test(uri)) {\n      debug('protocol-less url %s', uri);\n      if ('undefined' !== typeof loc) {\n        uri = loc.protocol + '//' + uri;\n      } else {\n        uri = 'https://' + uri;\n      }\n    }\n\n    // parse\n    debug('parse %s', uri);\n    obj = parseuri(uri);\n  }\n\n  // make sure we treat `localhost:80` and `localhost` equally\n  if (!obj.port) {\n    if (/^(http|ws)$/.test(obj.protocol)) {\n      obj.port = '80';\n    } else if (/^(http|ws)s$/.test(obj.protocol)) {\n      obj.port = '443';\n    }\n  }\n\n  obj.path = obj.path || '/';\n\n  var ipv6 = obj.host.indexOf(':') !== -1;\n  var host = ipv6 ? '[' + obj.host + ']' : obj.host;\n\n  // define unique id\n  obj.id = obj.protocol + '://' + host + ':' + obj.port;\n  // define href\n  obj.href = obj.protocol + '://' + host + (loc && loc.port === obj.port ? '' : (':' + obj.port));\n\n  return obj;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * Active `debug` instances.\n */\nexports.instances = [];\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  var prevTime;\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n  debug.destroy = destroy;\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  exports.instances.push(debug);\n\n  return debug;\n}\n\nfunction destroy () {\n  var index = exports.instances.indexOf(this);\n  if (index !== -1) {\n    exports.instances.splice(index, 1);\n    return true;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var i;\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n\n  for (i = 0; i < exports.instances.length; i++) {\n    var instance = exports.instances[i];\n    instance.enabled = exports.enabled(instance.namespace);\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  if (name[name.length - 1] === '*') {\n    return true;\n  }\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  '#0000CC', '#0000FF', '#0033CC', '#0033FF', '#0066CC', '#0066FF', '#0099CC',\n  '#0099FF', '#00CC00', '#00CC33', '#00CC66', '#00CC99', '#00CCCC', '#00CCFF',\n  '#3300CC', '#3300FF', '#3333CC', '#3333FF', '#3366CC', '#3366FF', '#3399CC',\n  '#3399FF', '#33CC00', '#33CC33', '#33CC66', '#33CC99', '#33CCCC', '#33CCFF',\n  '#6600CC', '#6600FF', '#6633CC', '#6633FF', '#66CC00', '#66CC33', '#9900CC',\n  '#9900FF', '#9933CC', '#9933FF', '#99CC00', '#99CC33', '#CC0000', '#CC0033',\n  '#CC0066', '#CC0099', '#CC00CC', '#CC00FF', '#CC3300', '#CC3333', '#CC3366',\n  '#CC3399', '#CC33CC', '#CC33FF', '#CC6600', '#CC6633', '#CC9900', '#CC9933',\n  '#CCCC00', '#CCCC33', '#FF0000', '#FF0033', '#FF0066', '#FF0099', '#FF00CC',\n  '#FF00FF', '#FF3300', '#FF3333', '#FF3366', '#FF3399', '#FF33CC', '#FF33FF',\n  '#FF6600', '#FF6633', '#FF9900', '#FF9933', '#FFCC00', '#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // Internet Explorer and Edge do not support colors.\n  if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n    return false;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","\nmodule.exports = isBuf;\n\nvar withNativeBuffer = typeof Buffer === 'function' && typeof Buffer.isBuffer === 'function';\nvar withNativeArrayBuffer = typeof ArrayBuffer === 'function';\n\nvar isView = function (obj) {\n  return typeof ArrayBuffer.isView === 'function' ? ArrayBuffer.isView(obj) : (obj.buffer instanceof ArrayBuffer);\n};\n\n/**\n * Returns true if obj is a buffer or an arraybuffer.\n *\n * @api private\n */\n\nfunction isBuf(obj) {\n  return (withNativeBuffer && Buffer.isBuffer(obj)) ||\n          (withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj)));\n}\n","/*global Blob,File*/\n\n/**\n * Module requirements\n */\n\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' || (typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]');\nvar withNativeFile = typeof File === 'function' || (typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]');\n\n/**\n * Replaces every Buffer | ArrayBuffer in packet with a numbered placeholder.\n * Anything with blobs or files should be fed through removeBlobs before coming\n * here.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @api public\n */\n\nexports.deconstructPacket = function(packet) {\n  var buffers = [];\n  var packetData = packet.data;\n  var pack = packet;\n  pack.data = _deconstructPacket(packetData, buffers);\n  pack.attachments = buffers.length; // number of binary 'attachments'\n  return {packet: pack, buffers: buffers};\n};\n\nfunction _deconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (isBuf(data)) {\n    var placeholder = { _placeholder: true, num: buffers.length };\n    buffers.push(data);\n    return placeholder;\n  } else if (isArray(data)) {\n    var newData = new Array(data.length);\n    for (var i = 0; i < data.length; i++) {\n      newData[i] = _deconstructPacket(data[i], buffers);\n    }\n    return newData;\n  } else if (typeof data === 'object' && !(data instanceof Date)) {\n    var newData = {};\n    for (var key in data) {\n      newData[key] = _deconstructPacket(data[key], buffers);\n    }\n    return newData;\n  }\n  return data;\n}\n\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @api public\n */\n\nexports.reconstructPacket = function(packet, buffers) {\n  packet.data = _reconstructPacket(packet.data, buffers);\n  packet.attachments = undefined; // no longer useful\n  return packet;\n};\n\nfunction _reconstructPacket(data, buffers) {\n  if (!data) return data;\n\n  if (data && data._placeholder) {\n    return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n  } else if (isArray(data)) {\n    for (var i = 0; i < data.length; i++) {\n      data[i] = _reconstructPacket(data[i], buffers);\n    }\n  } else if (typeof data === 'object') {\n    for (var key in data) {\n      data[key] = _reconstructPacket(data[key], buffers);\n    }\n  }\n\n  return data;\n}\n\n/**\n * Asynchronously removes Blobs or Files from data via\n * FileReader's readAsArrayBuffer method. Used before encoding\n * data as msgpack. Calls callback with the blobless data.\n *\n * @param {Object} data\n * @param {Function} callback\n * @api private\n */\n\nexports.removeBlobs = function(data, callback) {\n  function _removeBlobs(obj, curKey, containingObject) {\n    if (!obj) return obj;\n\n    // convert any blob\n    if ((withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File)) {\n      pendingBlobs++;\n\n      // async filereader\n      var fileReader = new FileReader();\n      fileReader.onload = function() { // this.result == arraybuffer\n        if (containingObject) {\n          containingObject[curKey] = this.result;\n        }\n        else {\n          bloblessData = this.result;\n        }\n\n        // if nothing pending its callback time\n        if(! --pendingBlobs) {\n          callback(bloblessData);\n        }\n      };\n\n      fileReader.readAsArrayBuffer(obj); // blob -> arraybuffer\n    } else if (isArray(obj)) { // handle array\n      for (var i = 0; i < obj.length; i++) {\n        _removeBlobs(obj[i], i, obj);\n      }\n    } else if (typeof obj === 'object' && !isBuf(obj)) { // and object\n      for (var key in obj) {\n        _removeBlobs(obj[key], key, obj);\n      }\n    }\n  }\n\n  var pendingBlobs = 0;\n  var bloblessData = data;\n  _removeBlobs(bloblessData);\n  if (!pendingBlobs) {\n    callback(bloblessData);\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar debug = require('debug')('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar binary = require('./binary');\nvar isArray = require('isarray');\nvar isBuf = require('./is-buffer');\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = 4;\n\n/**\n * Packet types.\n *\n * @api public\n */\n\nexports.types = [\n  'CONNECT',\n  'DISCONNECT',\n  'EVENT',\n  'ACK',\n  'ERROR',\n  'BINARY_EVENT',\n  'BINARY_ACK'\n];\n\n/**\n * Packet type `connect`.\n *\n * @api public\n */\n\nexports.CONNECT = 0;\n\n/**\n * Packet type `disconnect`.\n *\n * @api public\n */\n\nexports.DISCONNECT = 1;\n\n/**\n * Packet type `event`.\n *\n * @api public\n */\n\nexports.EVENT = 2;\n\n/**\n * Packet type `ack`.\n *\n * @api public\n */\n\nexports.ACK = 3;\n\n/**\n * Packet type `error`.\n *\n * @api public\n */\n\nexports.ERROR = 4;\n\n/**\n * Packet type 'binary event'\n *\n * @api public\n */\n\nexports.BINARY_EVENT = 5;\n\n/**\n * Packet type `binary ack`. For acks with binary arguments.\n *\n * @api public\n */\n\nexports.BINARY_ACK = 6;\n\n/**\n * Encoder constructor.\n *\n * @api public\n */\n\nexports.Encoder = Encoder;\n\n/**\n * Decoder constructor.\n *\n * @api public\n */\n\nexports.Decoder = Decoder;\n\n/**\n * A socket.io Encoder instance\n *\n * @api public\n */\n\nfunction Encoder() {}\n\nvar ERROR_PACKET = exports.ERROR + '\"encode error\"';\n\n/**\n * Encode a packet as a single string if non-binary, or as a\n * buffer sequence, depending on packet type.\n *\n * @param {Object} obj - packet object\n * @param {Function} callback - function to handle encodings (likely engine.write)\n * @return Calls callback with Array of encodings\n * @api public\n */\n\nEncoder.prototype.encode = function(obj, callback){\n  debug('encoding packet %j', obj);\n\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    encodeAsBinary(obj, callback);\n  } else {\n    var encoding = encodeAsString(obj);\n    callback([encoding]);\n  }\n};\n\n/**\n * Encode packet as string.\n *\n * @param {Object} packet\n * @return {String} encoded\n * @api private\n */\n\nfunction encodeAsString(obj) {\n\n  // first is type\n  var str = '' + obj.type;\n\n  // attachments if we have them\n  if (exports.BINARY_EVENT === obj.type || exports.BINARY_ACK === obj.type) {\n    str += obj.attachments + '-';\n  }\n\n  // if we have a namespace other than `/`\n  // we append it followed by a comma `,`\n  if (obj.nsp && '/' !== obj.nsp) {\n    str += obj.nsp + ',';\n  }\n\n  // immediately followed by the id\n  if (null != obj.id) {\n    str += obj.id;\n  }\n\n  // json data\n  if (null != obj.data) {\n    var payload = tryStringify(obj.data);\n    if (payload !== false) {\n      str += payload;\n    } else {\n      return ERROR_PACKET;\n    }\n  }\n\n  debug('encoded %j as %s', obj, str);\n  return str;\n}\n\nfunction tryStringify(str) {\n  try {\n    return JSON.stringify(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Encode packet as 'buffer sequence' by removing blobs, and\n * deconstructing packet into object with placeholders and\n * a list of buffers.\n *\n * @param {Object} packet\n * @return {Buffer} encoded\n * @api private\n */\n\nfunction encodeAsBinary(obj, callback) {\n\n  function writeEncoding(bloblessData) {\n    var deconstruction = binary.deconstructPacket(bloblessData);\n    var pack = encodeAsString(deconstruction.packet);\n    var buffers = deconstruction.buffers;\n\n    buffers.unshift(pack); // add packet info to beginning of data list\n    callback(buffers); // write all the buffers\n  }\n\n  binary.removeBlobs(obj, writeEncoding);\n}\n\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n * @api public\n */\n\nfunction Decoder() {\n  this.reconstructor = null;\n}\n\n/**\n * Mix in `Emitter` with Decoder.\n */\n\nEmitter(Decoder.prototype);\n\n/**\n * Decodes an encoded packet string into packet JSON.\n *\n * @param {String} obj - encoded packet\n * @return {Object} packet\n * @api public\n */\n\nDecoder.prototype.add = function(obj) {\n  var packet;\n  if (typeof obj === 'string') {\n    packet = decodeString(obj);\n    if (exports.BINARY_EVENT === packet.type || exports.BINARY_ACK === packet.type) { // binary packet's json\n      this.reconstructor = new BinaryReconstructor(packet);\n\n      // no attachments, labeled binary but no binary data to follow\n      if (this.reconstructor.reconPack.attachments === 0) {\n        this.emit('decoded', packet);\n      }\n    } else { // non-binary full packet\n      this.emit('decoded', packet);\n    }\n  } else if (isBuf(obj) || obj.base64) { // raw binary data\n    if (!this.reconstructor) {\n      throw new Error('got binary data when not reconstructing a packet');\n    } else {\n      packet = this.reconstructor.takeBinaryData(obj);\n      if (packet) { // received final buffer\n        this.reconstructor = null;\n        this.emit('decoded', packet);\n      }\n    }\n  } else {\n    throw new Error('Unknown type: ' + obj);\n  }\n};\n\n/**\n * Decode a packet String (JSON data)\n *\n * @param {String} str\n * @return {Object} packet\n * @api private\n */\n\nfunction decodeString(str) {\n  var i = 0;\n  // look up type\n  var p = {\n    type: Number(str.charAt(0))\n  };\n\n  if (null == exports.types[p.type]) {\n    return error('unknown packet type ' + p.type);\n  }\n\n  // look up attachments if type binary\n  if (exports.BINARY_EVENT === p.type || exports.BINARY_ACK === p.type) {\n    var buf = '';\n    while (str.charAt(++i) !== '-') {\n      buf += str.charAt(i);\n      if (i == str.length) break;\n    }\n    if (buf != Number(buf) || str.charAt(i) !== '-') {\n      throw new Error('Illegal attachments');\n    }\n    p.attachments = Number(buf);\n  }\n\n  // look up namespace (if any)\n  if ('/' === str.charAt(i + 1)) {\n    p.nsp = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (',' === c) break;\n      p.nsp += c;\n      if (i === str.length) break;\n    }\n  } else {\n    p.nsp = '/';\n  }\n\n  // look up id\n  var next = str.charAt(i + 1);\n  if ('' !== next && Number(next) == next) {\n    p.id = '';\n    while (++i) {\n      var c = str.charAt(i);\n      if (null == c || Number(c) != c) {\n        --i;\n        break;\n      }\n      p.id += str.charAt(i);\n      if (i === str.length) break;\n    }\n    p.id = Number(p.id);\n  }\n\n  // look up json data\n  if (str.charAt(++i)) {\n    var payload = tryParse(str.substr(i));\n    var isPayloadValid = payload !== false && (p.type === exports.ERROR || isArray(payload));\n    if (isPayloadValid) {\n      p.data = payload;\n    } else {\n      return error('invalid payload');\n    }\n  }\n\n  debug('decoded %s as %j', str, p);\n  return p;\n}\n\nfunction tryParse(str) {\n  try {\n    return JSON.parse(str);\n  } catch(e){\n    return false;\n  }\n}\n\n/**\n * Deallocates a parser's resources\n *\n * @api public\n */\n\nDecoder.prototype.destroy = function() {\n  if (this.reconstructor) {\n    this.reconstructor.finishedReconstruction();\n  }\n};\n\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n * @api private\n */\n\nfunction BinaryReconstructor(packet) {\n  this.reconPack = packet;\n  this.buffers = [];\n}\n\n/**\n * Method to be called when binary data received from connection\n * after a BINARY_EVENT packet.\n *\n * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n * @return {null | Object} returns null if more binary data is expected or\n *   a reconstructed packet object if all buffers have been received.\n * @api private\n */\n\nBinaryReconstructor.prototype.takeBinaryData = function(binData) {\n  this.buffers.push(binData);\n  if (this.buffers.length === this.reconPack.attachments) { // done with buffer list\n    var packet = binary.reconstructPacket(this.reconPack, this.buffers);\n    this.finishedReconstruction();\n    return packet;\n  }\n  return null;\n};\n\n/**\n * Cleans up binary packet reconstruction variables.\n *\n * @api private\n */\n\nBinaryReconstructor.prototype.finishedReconstruction = function() {\n  this.reconPack = null;\n  this.buffers = [];\n};\n\nfunction error(msg) {\n  return {\n    type: exports.ERROR,\n    data: 'parser error: ' + msg\n  };\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","module.exports = (function () {\n  if (typeof self !== 'undefined') {\n    return self;\n  } else if (typeof window !== 'undefined') {\n    return window;\n  } else {\n    return Function('return this')(); // eslint-disable-line no-new-func\n  }\n})();\n","// browser shim for xmlhttprequest module\n\nvar hasCORS = require('has-cors');\nvar globalThis = require('./globalThis');\n\nmodule.exports = function (opts) {\n  var xdomain = opts.xdomain;\n\n  // scheme must be same when usign XDomainRequest\n  // http://blogs.msdn.com/b/ieinternals/archive/2010/05/13/xdomainrequest-restrictions-limitations-and-workarounds.aspx\n  var xscheme = opts.xscheme;\n\n  // XDomainRequest has a flow of not sending cookie, therefore it should be disabled as a default.\n  // https://github.com/Automattic/engine.io-client/pull/217\n  var enablesXDR = opts.enablesXDR;\n\n  // XMLHttpRequest can be disabled on IE\n  try {\n    if ('undefined' !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n      return new XMLHttpRequest();\n    }\n  } catch (e) { }\n\n  // Use XDomainRequest for IE8 if enablesXDR is true\n  // because loading bar keeps flashing when using jsonp-polling\n  // https://github.com/yujiosaka/socke.io-ie8-loading-example\n  try {\n    if ('undefined' !== typeof XDomainRequest && !xscheme && enablesXDR) {\n      return new XDomainRequest();\n    }\n  } catch (e) { }\n\n  if (!xdomain) {\n    try {\n      return new globalThis[['Active'].concat('Object').join('X')]('Microsoft.XMLHTTP');\n    } catch (e) { }\n  }\n};\n","\n/**\n * Gets the keys for an object.\n *\n * @return {Array} keys\n * @api private\n */\n\nmodule.exports = Object.keys || function keys (obj){\n  var arr = [];\n  var has = Object.prototype.hasOwnProperty;\n\n  for (var i in obj) {\n    if (has.call(obj, i)) {\n      arr.push(i);\n    }\n  }\n  return arr;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/* global Blob File */\n\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\nvar toString = Object.prototype.toString;\nvar withNativeBlob = typeof Blob === 'function' ||\n                        typeof Blob !== 'undefined' && toString.call(Blob) === '[object BlobConstructor]';\nvar withNativeFile = typeof File === 'function' ||\n                        typeof File !== 'undefined' && toString.call(File) === '[object FileConstructor]';\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Supports Buffer, ArrayBuffer, Blob and File.\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary (obj) {\n  if (!obj || typeof obj !== 'object') {\n    return false;\n  }\n\n  if (isArray(obj)) {\n    for (var i = 0, l = obj.length; i < l; i++) {\n      if (hasBinary(obj[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  if ((typeof Buffer === 'function' && Buffer.isBuffer && Buffer.isBuffer(obj)) ||\n    (typeof ArrayBuffer === 'function' && obj instanceof ArrayBuffer) ||\n    (withNativeBlob && obj instanceof Blob) ||\n    (withNativeFile && obj instanceof File)\n  ) {\n    return true;\n  }\n\n  // see: https://github.com/Automattic/has-binary/pull/4\n  if (obj.toJSON && typeof obj.toJSON === 'function' && arguments.length === 1) {\n    return hasBinary(obj.toJSON(), true);\n  }\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * An abstraction for slicing an arraybuffer even when\n * ArrayBuffer.prototype.slice is not supported\n *\n * @api public\n */\n\nmodule.exports = function(arraybuffer, start, end) {\n  var bytes = arraybuffer.byteLength;\n  start = start || 0;\n  end = end || bytes;\n\n  if (arraybuffer.slice) { return arraybuffer.slice(start, end); }\n\n  if (start < 0) { start += bytes; }\n  if (end < 0) { end += bytes; }\n  if (end > bytes) { end = bytes; }\n\n  if (start >= bytes || start >= end || bytes === 0) {\n    return new ArrayBuffer(0);\n  }\n\n  var abv = new Uint8Array(arraybuffer);\n  var result = new Uint8Array(end - start);\n  for (var i = start, ii = 0; i < end; i++, ii++) {\n    result[ii] = abv[i];\n  }\n  return result.buffer;\n};\n","module.exports = after\n\nfunction after(count, callback, err_cb) {\n    var bail = false\n    err_cb = err_cb || noop\n    proxy.count = count\n\n    return (count === 0) ? callback() : proxy\n\n    function proxy(err, result) {\n        if (proxy.count <= 0) {\n            throw new Error('after called too many times')\n        }\n        --proxy.count\n\n        // after first error, rest are passed to err_cb\n        if (err) {\n            bail = true\n            callback(err)\n            // future error callbacks will go to error handler\n            callback = err_cb\n        } else if (proxy.count === 0 && !bail) {\n            callback(null, result)\n        }\n    }\n}\n\nfunction noop() {}\n","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\nvar stringFromCharCode = String.fromCharCode;\n\n// Taken from https://mths.be/punycode\nfunction ucs2decode(string) {\n\tvar output = [];\n\tvar counter = 0;\n\tvar length = string.length;\n\tvar value;\n\tvar extra;\n\twhile (counter < length) {\n\t\tvalue = string.charCodeAt(counter++);\n\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t// high surrogate, and there is a next character\n\t\t\textra = string.charCodeAt(counter++);\n\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t} else {\n\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\toutput.push(value);\n\t\t\t\tcounter--;\n\t\t\t}\n\t\t} else {\n\t\t\toutput.push(value);\n\t\t}\n\t}\n\treturn output;\n}\n\n// Taken from https://mths.be/punycode\nfunction ucs2encode(array) {\n\tvar length = array.length;\n\tvar index = -1;\n\tvar value;\n\tvar output = '';\n\twhile (++index < length) {\n\t\tvalue = array[index];\n\t\tif (value > 0xFFFF) {\n\t\t\tvalue -= 0x10000;\n\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t}\n\t\toutput += stringFromCharCode(value);\n\t}\n\treturn output;\n}\n\nfunction checkScalarValue(codePoint, strict) {\n\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\tif (strict) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t\treturn false;\n\t}\n\treturn true;\n}\n/*--------------------------------------------------------------------------*/\n\nfunction createByte(codePoint, shift) {\n\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n}\n\nfunction encodeCodePoint(codePoint, strict) {\n\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\treturn stringFromCharCode(codePoint);\n\t}\n\tvar symbol = '';\n\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t}\n\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\tif (!checkScalarValue(codePoint, strict)) {\n\t\t\tcodePoint = 0xFFFD;\n\t\t}\n\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\tsymbol += createByte(codePoint, 12);\n\t\tsymbol += createByte(codePoint, 6);\n\t}\n\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\treturn symbol;\n}\n\nfunction utf8encode(string, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tvar codePoints = ucs2decode(string);\n\tvar length = codePoints.length;\n\tvar index = -1;\n\tvar codePoint;\n\tvar byteString = '';\n\twhile (++index < length) {\n\t\tcodePoint = codePoints[index];\n\t\tbyteString += encodeCodePoint(codePoint, strict);\n\t}\n\treturn byteString;\n}\n\n/*--------------------------------------------------------------------------*/\n\nfunction readContinuationByte() {\n\tif (byteIndex >= byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\tif ((continuationByte & 0xC0) == 0x80) {\n\t\treturn continuationByte & 0x3F;\n\t}\n\n\t// If we end up here, it’s not a continuation byte\n\tthrow Error('Invalid continuation byte');\n}\n\nfunction decodeSymbol(strict) {\n\tvar byte1;\n\tvar byte2;\n\tvar byte3;\n\tvar byte4;\n\tvar codePoint;\n\n\tif (byteIndex > byteCount) {\n\t\tthrow Error('Invalid byte index');\n\t}\n\n\tif (byteIndex == byteCount) {\n\t\treturn false;\n\t}\n\n\t// Read first byte\n\tbyte1 = byteArray[byteIndex] & 0xFF;\n\tbyteIndex++;\n\n\t// 1-byte sequence (no continuation bytes)\n\tif ((byte1 & 0x80) == 0) {\n\t\treturn byte1;\n\t}\n\n\t// 2-byte sequence\n\tif ((byte1 & 0xE0) == 0xC0) {\n\t\tbyte2 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\tif (codePoint >= 0x80) {\n\t\t\treturn codePoint;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 3-byte sequence (may include unpaired surrogates)\n\tif ((byte1 & 0xF0) == 0xE0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\tif (codePoint >= 0x0800) {\n\t\t\treturn checkScalarValue(codePoint, strict) ? codePoint : 0xFFFD;\n\t\t} else {\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t}\n\n\t// 4-byte sequence\n\tif ((byte1 & 0xF8) == 0xF0) {\n\t\tbyte2 = readContinuationByte();\n\t\tbyte3 = readContinuationByte();\n\t\tbyte4 = readContinuationByte();\n\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t(byte3 << 0x06) | byte4;\n\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\treturn codePoint;\n\t\t}\n\t}\n\n\tthrow Error('Invalid UTF-8 detected');\n}\n\nvar byteArray;\nvar byteCount;\nvar byteIndex;\nfunction utf8decode(byteString, opts) {\n\topts = opts || {};\n\tvar strict = false !== opts.strict;\n\n\tbyteArray = ucs2decode(byteString);\n\tbyteCount = byteArray.length;\n\tbyteIndex = 0;\n\tvar codePoints = [];\n\tvar tmp;\n\twhile ((tmp = decodeSymbol(strict)) !== false) {\n\t\tcodePoints.push(tmp);\n\t}\n\treturn ucs2encode(codePoints);\n}\n\nmodule.exports = {\n\tversion: '2.1.2',\n\tencode: utf8encode,\n\tdecode: utf8decode\n};\n","/*\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n(function(){\n  \"use strict\";\n\n  var chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n\n  // Use a lookup table to find the index.\n  var lookup = new Uint8Array(256);\n  for (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n  }\n\n  exports.encode = function(arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer),\n    i, len = bytes.length, base64 = \"\";\n\n    for (i = 0; i < len; i+=3) {\n      base64 += chars[bytes[i] >> 2];\n      base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n      base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n      base64 += chars[bytes[i + 2] & 63];\n    }\n\n    if ((len % 3) === 2) {\n      base64 = base64.substring(0, base64.length - 1) + \"=\";\n    } else if (len % 3 === 1) {\n      base64 = base64.substring(0, base64.length - 2) + \"==\";\n    }\n\n    return base64;\n  };\n\n  exports.decode =  function(base64) {\n    var bufferLength = base64.length * 0.75,\n    len = base64.length, i, p = 0,\n    encoded1, encoded2, encoded3, encoded4;\n\n    if (base64[base64.length - 1] === \"=\") {\n      bufferLength--;\n      if (base64[base64.length - 2] === \"=\") {\n        bufferLength--;\n      }\n    }\n\n    var arraybuffer = new ArrayBuffer(bufferLength),\n    bytes = new Uint8Array(arraybuffer);\n\n    for (i = 0; i < len; i+=4) {\n      encoded1 = lookup[base64.charCodeAt(i)];\n      encoded2 = lookup[base64.charCodeAt(i+1)];\n      encoded3 = lookup[base64.charCodeAt(i+2)];\n      encoded4 = lookup[base64.charCodeAt(i+3)];\n\n      bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n      bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n      bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n\n    return arraybuffer;\n  };\n})();\n","/**\r\n * Create a blob builder even when vendor prefixes exist\r\n */\r\n\r\nvar BlobBuilder = typeof BlobBuilder !== 'undefined' ? BlobBuilder :\r\n  typeof WebKitBlobBuilder !== 'undefined' ? WebKitBlobBuilder :\r\n  typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder :\r\n  typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : \r\n  false;\r\n\r\n/**\r\n * Check if Blob constructor is supported\r\n */\r\n\r\nvar blobSupported = (function() {\r\n  try {\r\n    var a = new Blob(['hi']);\r\n    return a.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if Blob constructor supports ArrayBufferViews\r\n * Fails in Safari 6, so we need to map to ArrayBuffers there.\r\n */\r\n\r\nvar blobSupportsArrayBufferView = blobSupported && (function() {\r\n  try {\r\n    var b = new Blob([new Uint8Array([1,2])]);\r\n    return b.size === 2;\r\n  } catch(e) {\r\n    return false;\r\n  }\r\n})();\r\n\r\n/**\r\n * Check if BlobBuilder is supported\r\n */\r\n\r\nvar blobBuilderSupported = BlobBuilder\r\n  && BlobBuilder.prototype.append\r\n  && BlobBuilder.prototype.getBlob;\r\n\r\n/**\r\n * Helper function that maps ArrayBufferViews to ArrayBuffers\r\n * Used by BlobBuilder constructor and old browsers that didn't\r\n * support it in the Blob constructor.\r\n */\r\n\r\nfunction mapArrayBufferViews(ary) {\r\n  return ary.map(function(chunk) {\r\n    if (chunk.buffer instanceof ArrayBuffer) {\r\n      var buf = chunk.buffer;\r\n\r\n      // if this is a subarray, make a copy so we only\r\n      // include the subarray region from the underlying buffer\r\n      if (chunk.byteLength !== buf.byteLength) {\r\n        var copy = new Uint8Array(chunk.byteLength);\r\n        copy.set(new Uint8Array(buf, chunk.byteOffset, chunk.byteLength));\r\n        buf = copy.buffer;\r\n      }\r\n\r\n      return buf;\r\n    }\r\n\r\n    return chunk;\r\n  });\r\n}\r\n\r\nfunction BlobBuilderConstructor(ary, options) {\r\n  options = options || {};\r\n\r\n  var bb = new BlobBuilder();\r\n  mapArrayBufferViews(ary).forEach(function(part) {\r\n    bb.append(part);\r\n  });\r\n\r\n  return (options.type) ? bb.getBlob(options.type) : bb.getBlob();\r\n};\r\n\r\nfunction BlobConstructor(ary, options) {\r\n  return new Blob(mapArrayBufferViews(ary), options || {});\r\n};\r\n\r\nif (typeof Blob !== 'undefined') {\r\n  BlobBuilderConstructor.prototype = Blob.prototype;\r\n  BlobConstructor.prototype = Blob.prototype;\r\n}\r\n\r\nmodule.exports = (function() {\r\n  if (blobSupported) {\r\n    return blobSupportsArrayBufferView ? Blob : BlobConstructor;\r\n  } else if (blobBuilderSupported) {\r\n    return BlobBuilderConstructor;\r\n  } else {\r\n    return undefined;\r\n  }\r\n})();\r\n","/**\n * Module dependencies.\n */\n\nvar keys = require('./keys');\nvar hasBinary = require('has-binary2');\nvar sliceBuffer = require('arraybuffer.slice');\nvar after = require('after');\nvar utf8 = require('./utf8');\n\nvar base64encoder;\nif (typeof ArrayBuffer !== 'undefined') {\n  base64encoder = require('base64-arraybuffer');\n}\n\n/**\n * Check if we are running an android browser. That requires us to use\n * ArrayBuffer with polling transports...\n *\n * http://ghinda.net/jpeg-blob-ajax-android/\n */\n\nvar isAndroid = typeof navigator !== 'undefined' && /Android/i.test(navigator.userAgent);\n\n/**\n * Check if we are running in PhantomJS.\n * Uploading a Blob with PhantomJS does not work correctly, as reported here:\n * https://github.com/ariya/phantomjs/issues/11395\n * @type boolean\n */\nvar isPhantomJS = typeof navigator !== 'undefined' && /PhantomJS/i.test(navigator.userAgent);\n\n/**\n * When true, avoids using Blobs to encode payloads.\n * @type boolean\n */\nvar dontSendBlobs = isAndroid || isPhantomJS;\n\n/**\n * Current protocol version.\n */\n\nexports.protocol = 3;\n\n/**\n * Packet types.\n */\n\nvar packets = exports.packets = {\n    open:     0    // non-ws\n  , close:    1    // non-ws\n  , ping:     2\n  , pong:     3\n  , message:  4\n  , upgrade:  5\n  , noop:     6\n};\n\nvar packetslist = keys(packets);\n\n/**\n * Premade error packet.\n */\n\nvar err = { type: 'error', data: 'parser error' };\n\n/**\n * Create a blob api even for blob builder when vendor prefixes exist\n */\n\nvar Blob = require('blob');\n\n/**\n * Encodes a packet.\n *\n *     <packet type id> [ <data> ]\n *\n * Example:\n *\n *     5hello world\n *     3\n *     4\n *\n * Binary is encoded in an identical principle\n *\n * @api private\n */\n\nexports.encodePacket = function (packet, supportsBinary, utf8encode, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = false;\n  }\n\n  if (typeof utf8encode === 'function') {\n    callback = utf8encode;\n    utf8encode = null;\n  }\n\n  var data = (packet.data === undefined)\n    ? undefined\n    : packet.data.buffer || packet.data;\n\n  if (typeof ArrayBuffer !== 'undefined' && data instanceof ArrayBuffer) {\n    return encodeArrayBuffer(packet, supportsBinary, callback);\n  } else if (typeof Blob !== 'undefined' && data instanceof Blob) {\n    return encodeBlob(packet, supportsBinary, callback);\n  }\n\n  // might be an object with { base64: true, data: dataAsBase64String }\n  if (data && data.base64) {\n    return encodeBase64Object(packet, callback);\n  }\n\n  // Sending data as a utf-8 string\n  var encoded = packets[packet.type];\n\n  // data fragment is optional\n  if (undefined !== packet.data) {\n    encoded += utf8encode ? utf8.encode(String(packet.data), { strict: false }) : String(packet.data);\n  }\n\n  return callback('' + encoded);\n\n};\n\nfunction encodeBase64Object(packet, callback) {\n  // packet data is an object { base64: true, data: dataAsBase64String }\n  var message = 'b' + exports.packets[packet.type] + packet.data.data;\n  return callback(message);\n}\n\n/**\n * Encode packet helpers for binary types\n */\n\nfunction encodeArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var data = packet.data;\n  var contentArray = new Uint8Array(data);\n  var resultBuffer = new Uint8Array(1 + data.byteLength);\n\n  resultBuffer[0] = packets[packet.type];\n  for (var i = 0; i < contentArray.length; i++) {\n    resultBuffer[i+1] = contentArray[i];\n  }\n\n  return callback(resultBuffer.buffer);\n}\n\nfunction encodeBlobAsArrayBuffer(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  var fr = new FileReader();\n  fr.onload = function() {\n    exports.encodePacket({ type: packet.type, data: fr.result }, supportsBinary, true, callback);\n  };\n  return fr.readAsArrayBuffer(packet.data);\n}\n\nfunction encodeBlob(packet, supportsBinary, callback) {\n  if (!supportsBinary) {\n    return exports.encodeBase64Packet(packet, callback);\n  }\n\n  if (dontSendBlobs) {\n    return encodeBlobAsArrayBuffer(packet, supportsBinary, callback);\n  }\n\n  var length = new Uint8Array(1);\n  length[0] = packets[packet.type];\n  var blob = new Blob([length.buffer, packet.data]);\n\n  return callback(blob);\n}\n\n/**\n * Encodes a packet with binary data in a base64 string\n *\n * @param {Object} packet, has `type` and `data`\n * @return {String} base64 encoded message\n */\n\nexports.encodeBase64Packet = function(packet, callback) {\n  var message = 'b' + exports.packets[packet.type];\n  if (typeof Blob !== 'undefined' && packet.data instanceof Blob) {\n    var fr = new FileReader();\n    fr.onload = function() {\n      var b64 = fr.result.split(',')[1];\n      callback(message + b64);\n    };\n    return fr.readAsDataURL(packet.data);\n  }\n\n  var b64data;\n  try {\n    b64data = String.fromCharCode.apply(null, new Uint8Array(packet.data));\n  } catch (e) {\n    // iPhone Safari doesn't let you apply with typed arrays\n    var typed = new Uint8Array(packet.data);\n    var basic = new Array(typed.length);\n    for (var i = 0; i < typed.length; i++) {\n      basic[i] = typed[i];\n    }\n    b64data = String.fromCharCode.apply(null, basic);\n  }\n  message += btoa(b64data);\n  return callback(message);\n};\n\n/**\n * Decodes a packet. Changes format to Blob if requested.\n *\n * @return {Object} with `type` and `data` (if any)\n * @api private\n */\n\nexports.decodePacket = function (data, binaryType, utf8decode) {\n  if (data === undefined) {\n    return err;\n  }\n  // String data\n  if (typeof data === 'string') {\n    if (data.charAt(0) === 'b') {\n      return exports.decodeBase64Packet(data.substr(1), binaryType);\n    }\n\n    if (utf8decode) {\n      data = tryDecode(data);\n      if (data === false) {\n        return err;\n      }\n    }\n    var type = data.charAt(0);\n\n    if (Number(type) != type || !packetslist[type]) {\n      return err;\n    }\n\n    if (data.length > 1) {\n      return { type: packetslist[type], data: data.substring(1) };\n    } else {\n      return { type: packetslist[type] };\n    }\n  }\n\n  var asArray = new Uint8Array(data);\n  var type = asArray[0];\n  var rest = sliceBuffer(data, 1);\n  if (Blob && binaryType === 'blob') {\n    rest = new Blob([rest]);\n  }\n  return { type: packetslist[type], data: rest };\n};\n\nfunction tryDecode(data) {\n  try {\n    data = utf8.decode(data, { strict: false });\n  } catch (e) {\n    return false;\n  }\n  return data;\n}\n\n/**\n * Decodes a packet encoded in a base64 string\n *\n * @param {String} base64 encoded message\n * @return {Object} with `type` and `data` (if any)\n */\n\nexports.decodeBase64Packet = function(msg, binaryType) {\n  var type = packetslist[msg.charAt(0)];\n  if (!base64encoder) {\n    return { type: type, data: { base64: true, data: msg.substr(1) } };\n  }\n\n  var data = base64encoder.decode(msg.substr(1));\n\n  if (binaryType === 'blob' && Blob) {\n    data = new Blob([data]);\n  }\n\n  return { type: type, data: data };\n};\n\n/**\n * Encodes multiple messages (payload).\n *\n *     <length>:data\n *\n * Example:\n *\n *     11:hello world2:hi\n *\n * If any contents are binary, they will be encoded as base64 strings. Base64\n * encoded strings are marked with a b before the length specifier\n *\n * @param {Array} packets\n * @api private\n */\n\nexports.encodePayload = function (packets, supportsBinary, callback) {\n  if (typeof supportsBinary === 'function') {\n    callback = supportsBinary;\n    supportsBinary = null;\n  }\n\n  var isBinary = hasBinary(packets);\n\n  if (supportsBinary && isBinary) {\n    if (Blob && !dontSendBlobs) {\n      return exports.encodePayloadAsBlob(packets, callback);\n    }\n\n    return exports.encodePayloadAsArrayBuffer(packets, callback);\n  }\n\n  if (!packets.length) {\n    return callback('0:');\n  }\n\n  function setLengthHeader(message) {\n    return message.length + ':' + message;\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, !isBinary ? false : supportsBinary, false, function(message) {\n      doneCallback(null, setLengthHeader(message));\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(results.join(''));\n  });\n};\n\n/**\n * Async array map using after\n */\n\nfunction map(ary, each, done) {\n  var result = new Array(ary.length);\n  var next = after(ary.length, done);\n\n  var eachWithIndex = function(i, el, cb) {\n    each(el, function(error, msg) {\n      result[i] = msg;\n      cb(error, result);\n    });\n  };\n\n  for (var i = 0; i < ary.length; i++) {\n    eachWithIndex(i, ary[i], next);\n  }\n}\n\n/*\n * Decodes data when a payload is maybe expected. Possible binary contents are\n * decoded from their base64 representation\n *\n * @param {String} data, callback method\n * @api public\n */\n\nexports.decodePayload = function (data, binaryType, callback) {\n  if (typeof data !== 'string') {\n    return exports.decodePayloadAsBinary(data, binaryType, callback);\n  }\n\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var packet;\n  if (data === '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n  var length = '', n, msg;\n\n  for (var i = 0, l = data.length; i < l; i++) {\n    var chr = data.charAt(i);\n\n    if (chr !== ':') {\n      length += chr;\n      continue;\n    }\n\n    if (length === '' || (length != (n = Number(length)))) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    msg = data.substr(i + 1, n);\n\n    if (length != msg.length) {\n      // parser error - ignoring payload\n      return callback(err, 0, 1);\n    }\n\n    if (msg.length) {\n      packet = exports.decodePacket(msg, binaryType, false);\n\n      if (err.type === packet.type && err.data === packet.data) {\n        // parser error in individual packet - ignoring payload\n        return callback(err, 0, 1);\n      }\n\n      var ret = callback(packet, i + n, l);\n      if (false === ret) return;\n    }\n\n    // advance cursor\n    i += n;\n    length = '';\n  }\n\n  if (length !== '') {\n    // parser error - ignoring payload\n    return callback(err, 0, 1);\n  }\n\n};\n\n/**\n * Encodes multiple messages (payload) as binary.\n *\n * <1 = binary, 0 = string><number from 0-9><number from 0-9>[...]<number\n * 255><data>\n *\n * Example:\n * 1 3 255 1 2 3, if the binary contents are interpreted as 8 bit integers\n *\n * @param {Array} packets\n * @return {ArrayBuffer} encoded payload\n * @api private\n */\n\nexports.encodePayloadAsArrayBuffer = function(packets, callback) {\n  if (!packets.length) {\n    return callback(new ArrayBuffer(0));\n  }\n\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(data) {\n      return doneCallback(null, data);\n    });\n  }\n\n  map(packets, encodeOne, function(err, encodedPackets) {\n    var totalLength = encodedPackets.reduce(function(acc, p) {\n      var len;\n      if (typeof p === 'string'){\n        len = p.length;\n      } else {\n        len = p.byteLength;\n      }\n      return acc + len.toString().length + len + 2; // string/binary identifier + separator = 2\n    }, 0);\n\n    var resultArray = new Uint8Array(totalLength);\n\n    var bufferIndex = 0;\n    encodedPackets.forEach(function(p) {\n      var isString = typeof p === 'string';\n      var ab = p;\n      if (isString) {\n        var view = new Uint8Array(p.length);\n        for (var i = 0; i < p.length; i++) {\n          view[i] = p.charCodeAt(i);\n        }\n        ab = view.buffer;\n      }\n\n      if (isString) { // not true binary\n        resultArray[bufferIndex++] = 0;\n      } else { // true binary\n        resultArray[bufferIndex++] = 1;\n      }\n\n      var lenStr = ab.byteLength.toString();\n      for (var i = 0; i < lenStr.length; i++) {\n        resultArray[bufferIndex++] = parseInt(lenStr[i]);\n      }\n      resultArray[bufferIndex++] = 255;\n\n      var view = new Uint8Array(ab);\n      for (var i = 0; i < view.length; i++) {\n        resultArray[bufferIndex++] = view[i];\n      }\n    });\n\n    return callback(resultArray.buffer);\n  });\n};\n\n/**\n * Encode as Blob\n */\n\nexports.encodePayloadAsBlob = function(packets, callback) {\n  function encodeOne(packet, doneCallback) {\n    exports.encodePacket(packet, true, true, function(encoded) {\n      var binaryIdentifier = new Uint8Array(1);\n      binaryIdentifier[0] = 1;\n      if (typeof encoded === 'string') {\n        var view = new Uint8Array(encoded.length);\n        for (var i = 0; i < encoded.length; i++) {\n          view[i] = encoded.charCodeAt(i);\n        }\n        encoded = view.buffer;\n        binaryIdentifier[0] = 0;\n      }\n\n      var len = (encoded instanceof ArrayBuffer)\n        ? encoded.byteLength\n        : encoded.size;\n\n      var lenStr = len.toString();\n      var lengthAry = new Uint8Array(lenStr.length + 1);\n      for (var i = 0; i < lenStr.length; i++) {\n        lengthAry[i] = parseInt(lenStr[i]);\n      }\n      lengthAry[lenStr.length] = 255;\n\n      if (Blob) {\n        var blob = new Blob([binaryIdentifier.buffer, lengthAry.buffer, encoded]);\n        doneCallback(null, blob);\n      }\n    });\n  }\n\n  map(packets, encodeOne, function(err, results) {\n    return callback(new Blob(results));\n  });\n};\n\n/*\n * Decodes data when a payload is maybe expected. Strings are decoded by\n * interpreting each byte as a key code for entries marked to start with 0. See\n * description of encodePayloadAsBinary\n *\n * @param {ArrayBuffer} data, callback method\n * @api public\n */\n\nexports.decodePayloadAsBinary = function (data, binaryType, callback) {\n  if (typeof binaryType === 'function') {\n    callback = binaryType;\n    binaryType = null;\n  }\n\n  var bufferTail = data;\n  var buffers = [];\n\n  while (bufferTail.byteLength > 0) {\n    var tailArray = new Uint8Array(bufferTail);\n    var isString = tailArray[0] === 0;\n    var msgLength = '';\n\n    for (var i = 1; ; i++) {\n      if (tailArray[i] === 255) break;\n\n      // 310 = char length of Number.MAX_VALUE\n      if (msgLength.length > 310) {\n        return callback(err, 0, 1);\n      }\n\n      msgLength += tailArray[i];\n    }\n\n    bufferTail = sliceBuffer(bufferTail, 2 + msgLength.length);\n    msgLength = parseInt(msgLength);\n\n    var msg = sliceBuffer(bufferTail, 0, msgLength);\n    if (isString) {\n      try {\n        msg = String.fromCharCode.apply(null, new Uint8Array(msg));\n      } catch (e) {\n        // iPhone Safari doesn't let you apply to typed arrays\n        var typed = new Uint8Array(msg);\n        msg = '';\n        for (var i = 0; i < typed.length; i++) {\n          msg += String.fromCharCode(typed[i]);\n        }\n      }\n    }\n\n    buffers.push(msg);\n    bufferTail = sliceBuffer(bufferTail, msgLength);\n  }\n\n  var total = buffers.length;\n  buffers.forEach(function(buffer, i) {\n    callback(exports.decodePacket(buffer, binaryType, true), i, total);\n  });\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n\r\n  // Remove event specific arrays for event types that no\r\n  // one is subscribed for to avoid memory leak.\r\n  if (callbacks.length === 0) {\r\n    delete this._callbacks['$' + event];\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  var args = new Array(arguments.length - 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    args[i - 1] = arguments[i];\r\n  }\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","/**\n * Module dependencies.\n */\n\nvar parser = require('engine.io-parser');\nvar Emitter = require('component-emitter');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Transport;\n\n/**\n * Transport abstract constructor.\n *\n * @param {Object} options.\n * @api private\n */\n\nfunction Transport (opts) {\n  this.path = opts.path;\n  this.hostname = opts.hostname;\n  this.port = opts.port;\n  this.secure = opts.secure;\n  this.query = opts.query;\n  this.timestampParam = opts.timestampParam;\n  this.timestampRequests = opts.timestampRequests;\n  this.readyState = '';\n  this.agent = opts.agent || false;\n  this.socket = opts.socket;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n  this.forceNode = opts.forceNode;\n\n  // results of ReactNative environment detection\n  this.isReactNative = opts.isReactNative;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n  this.localAddress = opts.localAddress;\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Transport.prototype);\n\n/**\n * Emits an error.\n *\n * @param {String} str\n * @return {Transport} for chaining\n * @api public\n */\n\nTransport.prototype.onError = function (msg, desc) {\n  var err = new Error(msg);\n  err.type = 'TransportError';\n  err.description = desc;\n  this.emit('error', err);\n  return this;\n};\n\n/**\n * Opens the transport.\n *\n * @api public\n */\n\nTransport.prototype.open = function () {\n  if ('closed' === this.readyState || '' === this.readyState) {\n    this.readyState = 'opening';\n    this.doOpen();\n  }\n\n  return this;\n};\n\n/**\n * Closes the transport.\n *\n * @api private\n */\n\nTransport.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.doClose();\n    this.onClose();\n  }\n\n  return this;\n};\n\n/**\n * Sends multiple packets.\n *\n * @param {Array} packets\n * @api private\n */\n\nTransport.prototype.send = function (packets) {\n  if ('open' === this.readyState) {\n    this.write(packets);\n  } else {\n    throw new Error('Transport not open');\n  }\n};\n\n/**\n * Called upon open\n *\n * @api private\n */\n\nTransport.prototype.onOpen = function () {\n  this.readyState = 'open';\n  this.writable = true;\n  this.emit('open');\n};\n\n/**\n * Called with data.\n *\n * @param {String} data\n * @api private\n */\n\nTransport.prototype.onData = function (data) {\n  var packet = parser.decodePacket(data, this.socket.binaryType);\n  this.onPacket(packet);\n};\n\n/**\n * Called with a decoded packet.\n */\n\nTransport.prototype.onPacket = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon close.\n *\n * @api private\n */\n\nTransport.prototype.onClose = function () {\n  this.readyState = 'closed';\n  this.emit('close');\n};\n","/**\r\n * Compiles a querystring\r\n * Returns string representation of the object\r\n *\r\n * @param {Object}\r\n * @api private\r\n */\r\n\r\nexports.encode = function (obj) {\r\n  var str = '';\r\n\r\n  for (var i in obj) {\r\n    if (obj.hasOwnProperty(i)) {\r\n      if (str.length) str += '&';\r\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\r\n    }\r\n  }\r\n\r\n  return str;\r\n};\r\n\r\n/**\r\n * Parses a simple querystring into an object\r\n *\r\n * @param {String} qs\r\n * @api private\r\n */\r\n\r\nexports.decode = function(qs){\r\n  var qry = {};\r\n  var pairs = qs.split('&');\r\n  for (var i = 0, l = pairs.length; i < l; i++) {\r\n    var pair = pairs[i].split('=');\r\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\r\n  }\r\n  return qry;\r\n};\r\n","\nmodule.exports = function(a, b){\n  var fn = function(){};\n  fn.prototype = b.prototype;\n  a.prototype = new fn;\n  a.prototype.constructor = a;\n};","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parseqs = require('parseqs');\nvar parser = require('engine.io-parser');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:polling');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Polling;\n\n/**\n * Is XHR2 supported?\n */\n\nvar hasXHR2 = (function () {\n  var XMLHttpRequest = require('xmlhttprequest-ssl');\n  var xhr = new XMLHttpRequest({ xdomain: false });\n  return null != xhr.responseType;\n})();\n\n/**\n * Polling interface.\n *\n * @param {Object} opts\n * @api private\n */\n\nfunction Polling (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (!hasXHR2 || forceBase64) {\n    this.supportsBinary = false;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(Polling, Transport);\n\n/**\n * Transport name.\n */\n\nPolling.prototype.name = 'polling';\n\n/**\n * Opens the socket (triggers polling). We write a PING message to determine\n * when the transport is open.\n *\n * @api private\n */\n\nPolling.prototype.doOpen = function () {\n  this.poll();\n};\n\n/**\n * Pauses polling.\n *\n * @param {Function} callback upon buffers are flushed and transport is paused\n * @api private\n */\n\nPolling.prototype.pause = function (onPause) {\n  var self = this;\n\n  this.readyState = 'pausing';\n\n  function pause () {\n    debug('paused');\n    self.readyState = 'paused';\n    onPause();\n  }\n\n  if (this.polling || !this.writable) {\n    var total = 0;\n\n    if (this.polling) {\n      debug('we are currently polling - waiting to pause');\n      total++;\n      this.once('pollComplete', function () {\n        debug('pre-pause polling complete');\n        --total || pause();\n      });\n    }\n\n    if (!this.writable) {\n      debug('we are currently writing - waiting to pause');\n      total++;\n      this.once('drain', function () {\n        debug('pre-pause writing complete');\n        --total || pause();\n      });\n    }\n  } else {\n    pause();\n  }\n};\n\n/**\n * Starts polling cycle.\n *\n * @api public\n */\n\nPolling.prototype.poll = function () {\n  debug('polling');\n  this.polling = true;\n  this.doPoll();\n  this.emit('poll');\n};\n\n/**\n * Overloads onData to detect payloads.\n *\n * @api private\n */\n\nPolling.prototype.onData = function (data) {\n  var self = this;\n  debug('polling got data %s', data);\n  var callback = function (packet, index, total) {\n    // if its the first message we consider the transport open\n    if ('opening' === self.readyState) {\n      self.onOpen();\n    }\n\n    // if its a close packet, we close the ongoing requests\n    if ('close' === packet.type) {\n      self.onClose();\n      return false;\n    }\n\n    // otherwise bypass onData and handle the message\n    self.onPacket(packet);\n  };\n\n  // decode payload\n  parser.decodePayload(data, this.socket.binaryType, callback);\n\n  // if an event did not trigger closing\n  if ('closed' !== this.readyState) {\n    // if we got data we're not polling\n    this.polling = false;\n    this.emit('pollComplete');\n\n    if ('open' === this.readyState) {\n      this.poll();\n    } else {\n      debug('ignoring poll - transport state \"%s\"', this.readyState);\n    }\n  }\n};\n\n/**\n * For polling, send a close packet.\n *\n * @api private\n */\n\nPolling.prototype.doClose = function () {\n  var self = this;\n\n  function close () {\n    debug('writing close packet');\n    self.write([{ type: 'close' }]);\n  }\n\n  if ('open' === this.readyState) {\n    debug('transport open - closing');\n    close();\n  } else {\n    // in case we're trying to close while\n    // handshaking is in progress (GH-164)\n    debug('transport not open - deferring close');\n    this.once('open', close);\n  }\n};\n\n/**\n * Writes a packets payload.\n *\n * @param {Array} data packets\n * @param {Function} drain callback\n * @api private\n */\n\nPolling.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n  var callbackfn = function () {\n    self.writable = true;\n    self.emit('drain');\n  };\n\n  parser.encodePayload(packets, this.supportsBinary, function (data) {\n    self.doWrite(data, callbackfn);\n  });\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nPolling.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'https' : 'http';\n  var port = '';\n\n  // cache busting is forced\n  if (false !== this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  if (!this.supportsBinary && !query.sid) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // avoid port if default for schema\n  if (this.port && (('https' === schema && Number(this.port) !== 443) ||\n     ('http' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n","/* global attachEvent */\n\n/**\n * Module requirements.\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar Polling = require('./polling');\nvar Emitter = require('component-emitter');\nvar inherit = require('component-inherit');\nvar debug = require('debug')('engine.io-client:polling-xhr');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = XHR;\nmodule.exports.Request = Request;\n\n/**\n * Empty function\n */\n\nfunction empty () {}\n\n/**\n * XHR Polling constructor.\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction XHR (opts) {\n  Polling.call(this, opts);\n  this.requestTimeout = opts.requestTimeout;\n  this.extraHeaders = opts.extraHeaders;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    this.xd = (typeof location !== 'undefined' && opts.hostname !== location.hostname) ||\n      port !== opts.port;\n    this.xs = opts.secure !== isSSL;\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(XHR, Polling);\n\n/**\n * XHR supports binary\n */\n\nXHR.prototype.supportsBinary = true;\n\n/**\n * Creates a request.\n *\n * @param {String} method\n * @api private\n */\n\nXHR.prototype.request = function (opts) {\n  opts = opts || {};\n  opts.uri = this.uri();\n  opts.xd = this.xd;\n  opts.xs = this.xs;\n  opts.agent = this.agent || false;\n  opts.supportsBinary = this.supportsBinary;\n  opts.enablesXDR = this.enablesXDR;\n  opts.withCredentials = this.withCredentials;\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  opts.requestTimeout = this.requestTimeout;\n\n  // other options for Node.js client\n  opts.extraHeaders = this.extraHeaders;\n\n  return new Request(opts);\n};\n\n/**\n * Sends data.\n *\n * @param {String} data to send.\n * @param {Function} called upon flush.\n * @api private\n */\n\nXHR.prototype.doWrite = function (data, fn) {\n  var isBinary = typeof data !== 'string' && data !== undefined;\n  var req = this.request({ method: 'POST', data: data, isBinary: isBinary });\n  var self = this;\n  req.on('success', fn);\n  req.on('error', function (err) {\n    self.onError('xhr post error', err);\n  });\n  this.sendXhr = req;\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nXHR.prototype.doPoll = function () {\n  debug('xhr poll');\n  var req = this.request();\n  var self = this;\n  req.on('data', function (data) {\n    self.onData(data);\n  });\n  req.on('error', function (err) {\n    self.onError('xhr poll error', err);\n  });\n  this.pollXhr = req;\n};\n\n/**\n * Request constructor\n *\n * @param {Object} options\n * @api public\n */\n\nfunction Request (opts) {\n  this.method = opts.method || 'GET';\n  this.uri = opts.uri;\n  this.xd = !!opts.xd;\n  this.xs = !!opts.xs;\n  this.async = false !== opts.async;\n  this.data = undefined !== opts.data ? opts.data : null;\n  this.agent = opts.agent;\n  this.isBinary = opts.isBinary;\n  this.supportsBinary = opts.supportsBinary;\n  this.enablesXDR = opts.enablesXDR;\n  this.withCredentials = opts.withCredentials;\n  this.requestTimeout = opts.requestTimeout;\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx;\n  this.key = opts.key;\n  this.passphrase = opts.passphrase;\n  this.cert = opts.cert;\n  this.ca = opts.ca;\n  this.ciphers = opts.ciphers;\n  this.rejectUnauthorized = opts.rejectUnauthorized;\n\n  // other options for Node.js client\n  this.extraHeaders = opts.extraHeaders;\n\n  this.create();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Creates the XHR object and sends the request.\n *\n * @api private\n */\n\nRequest.prototype.create = function () {\n  var opts = { agent: this.agent, xdomain: this.xd, xscheme: this.xs, enablesXDR: this.enablesXDR };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n\n  var xhr = this.xhr = new XMLHttpRequest(opts);\n  var self = this;\n\n  try {\n    debug('xhr open %s: %s', this.method, this.uri);\n    xhr.open(this.method, this.uri, this.async);\n    try {\n      if (this.extraHeaders) {\n        xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n        for (var i in this.extraHeaders) {\n          if (this.extraHeaders.hasOwnProperty(i)) {\n            xhr.setRequestHeader(i, this.extraHeaders[i]);\n          }\n        }\n      }\n    } catch (e) {}\n\n    if ('POST' === this.method) {\n      try {\n        if (this.isBinary) {\n          xhr.setRequestHeader('Content-type', 'application/octet-stream');\n        } else {\n          xhr.setRequestHeader('Content-type', 'text/plain;charset=UTF-8');\n        }\n      } catch (e) {}\n    }\n\n    try {\n      xhr.setRequestHeader('Accept', '*/*');\n    } catch (e) {}\n\n    // ie6 check\n    if ('withCredentials' in xhr) {\n      xhr.withCredentials = this.withCredentials;\n    }\n\n    if (this.requestTimeout) {\n      xhr.timeout = this.requestTimeout;\n    }\n\n    if (this.hasXDR()) {\n      xhr.onload = function () {\n        self.onLoad();\n      };\n      xhr.onerror = function () {\n        self.onError(xhr.responseText);\n      };\n    } else {\n      xhr.onreadystatechange = function () {\n        if (xhr.readyState === 2) {\n          try {\n            var contentType = xhr.getResponseHeader('Content-Type');\n            if (self.supportsBinary && contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n              xhr.responseType = 'arraybuffer';\n            }\n          } catch (e) {}\n        }\n        if (4 !== xhr.readyState) return;\n        if (200 === xhr.status || 1223 === xhr.status) {\n          self.onLoad();\n        } else {\n          // make sure the `error` event handler that's user-set\n          // does not throw in the same tick and gets caught here\n          setTimeout(function () {\n            self.onError(typeof xhr.status === 'number' ? xhr.status : 0);\n          }, 0);\n        }\n      };\n    }\n\n    debug('xhr data %s', this.data);\n    xhr.send(this.data);\n  } catch (e) {\n    // Need to defer since .create() is called directly fhrom the constructor\n    // and thus the 'error' event can only be only bound *after* this exception\n    // occurs.  Therefore, also, we cannot throw here at all.\n    setTimeout(function () {\n      self.onError(e);\n    }, 0);\n    return;\n  }\n\n  if (typeof document !== 'undefined') {\n    this.index = Request.requestsCount++;\n    Request.requests[this.index] = this;\n  }\n};\n\n/**\n * Called upon successful response.\n *\n * @api private\n */\n\nRequest.prototype.onSuccess = function () {\n  this.emit('success');\n  this.cleanup();\n};\n\n/**\n * Called if we have data.\n *\n * @api private\n */\n\nRequest.prototype.onData = function (data) {\n  this.emit('data', data);\n  this.onSuccess();\n};\n\n/**\n * Called upon error.\n *\n * @api private\n */\n\nRequest.prototype.onError = function (err) {\n  this.emit('error', err);\n  this.cleanup(true);\n};\n\n/**\n * Cleans up house.\n *\n * @api private\n */\n\nRequest.prototype.cleanup = function (fromError) {\n  if ('undefined' === typeof this.xhr || null === this.xhr) {\n    return;\n  }\n  // xmlhttprequest\n  if (this.hasXDR()) {\n    this.xhr.onload = this.xhr.onerror = empty;\n  } else {\n    this.xhr.onreadystatechange = empty;\n  }\n\n  if (fromError) {\n    try {\n      this.xhr.abort();\n    } catch (e) {}\n  }\n\n  if (typeof document !== 'undefined') {\n    delete Request.requests[this.index];\n  }\n\n  this.xhr = null;\n};\n\n/**\n * Called upon load.\n *\n * @api private\n */\n\nRequest.prototype.onLoad = function () {\n  var data;\n  try {\n    var contentType;\n    try {\n      contentType = this.xhr.getResponseHeader('Content-Type');\n    } catch (e) {}\n    if (contentType === 'application/octet-stream' || contentType === 'application/octet-stream; charset=UTF-8') {\n      data = this.xhr.response || this.xhr.responseText;\n    } else {\n      data = this.xhr.responseText;\n    }\n  } catch (e) {\n    this.onError(e);\n  }\n  if (null != data) {\n    this.onData(data);\n  }\n};\n\n/**\n * Check if it has XDomainRequest.\n *\n * @api private\n */\n\nRequest.prototype.hasXDR = function () {\n  return typeof XDomainRequest !== 'undefined' && !this.xs && this.enablesXDR;\n};\n\n/**\n * Aborts the request.\n *\n * @api public\n */\n\nRequest.prototype.abort = function () {\n  this.cleanup();\n};\n\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\n\nRequest.requestsCount = 0;\nRequest.requests = {};\n\nif (typeof document !== 'undefined') {\n  if (typeof attachEvent === 'function') {\n    attachEvent('onunload', unloadHandler);\n  } else if (typeof addEventListener === 'function') {\n    var terminationEvent = 'onpagehide' in globalThis ? 'pagehide' : 'unload';\n    addEventListener(terminationEvent, unloadHandler, false);\n  }\n}\n\nfunction unloadHandler () {\n  for (var i in Request.requests) {\n    if (Request.requests.hasOwnProperty(i)) {\n      Request.requests[i].abort();\n    }\n  }\n}\n","/**\n * Module requirements.\n */\n\nvar Polling = require('./polling');\nvar inherit = require('component-inherit');\nvar globalThis = require('../globalThis');\n\n/**\n * Module exports.\n */\n\nmodule.exports = JSONPPolling;\n\n/**\n * Cached regular expressions.\n */\n\nvar rNewline = /\\n/g;\nvar rEscapedNewline = /\\\\n/g;\n\n/**\n * Global JSONP callbacks.\n */\n\nvar callbacks;\n\n/**\n * Noop.\n */\n\nfunction empty () { }\n\n/**\n * JSONP Polling constructor.\n *\n * @param {Object} opts.\n * @api public\n */\n\nfunction JSONPPolling (opts) {\n  Polling.call(this, opts);\n\n  this.query = this.query || {};\n\n  // define global callbacks array if not present\n  // we do this here (lazily) to avoid unneeded global pollution\n  if (!callbacks) {\n    // we need to consider multiple engines in the same page\n    callbacks = globalThis.___eio = (globalThis.___eio || []);\n  }\n\n  // callback identifier\n  this.index = callbacks.length;\n\n  // add callback to jsonp global\n  var self = this;\n  callbacks.push(function (msg) {\n    self.onData(msg);\n  });\n\n  // append to query string\n  this.query.j = this.index;\n\n  // prevent spurious errors from being emitted when the window is unloaded\n  if (typeof addEventListener === 'function') {\n    addEventListener('beforeunload', function () {\n      if (self.script) self.script.onerror = empty;\n    }, false);\n  }\n}\n\n/**\n * Inherits from Polling.\n */\n\ninherit(JSONPPolling, Polling);\n\n/*\n * JSONP only supports binary as base64 encoded strings\n */\n\nJSONPPolling.prototype.supportsBinary = false;\n\n/**\n * Closes the socket.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doClose = function () {\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  if (this.form) {\n    this.form.parentNode.removeChild(this.form);\n    this.form = null;\n    this.iframe = null;\n  }\n\n  Polling.prototype.doClose.call(this);\n};\n\n/**\n * Starts a poll cycle.\n *\n * @api private\n */\n\nJSONPPolling.prototype.doPoll = function () {\n  var self = this;\n  var script = document.createElement('script');\n\n  if (this.script) {\n    this.script.parentNode.removeChild(this.script);\n    this.script = null;\n  }\n\n  script.async = true;\n  script.src = this.uri();\n  script.onerror = function (e) {\n    self.onError('jsonp poll error', e);\n  };\n\n  var insertAt = document.getElementsByTagName('script')[0];\n  if (insertAt) {\n    insertAt.parentNode.insertBefore(script, insertAt);\n  } else {\n    (document.head || document.body).appendChild(script);\n  }\n  this.script = script;\n\n  var isUAgecko = 'undefined' !== typeof navigator && /gecko/i.test(navigator.userAgent);\n\n  if (isUAgecko) {\n    setTimeout(function () {\n      var iframe = document.createElement('iframe');\n      document.body.appendChild(iframe);\n      document.body.removeChild(iframe);\n    }, 100);\n  }\n};\n\n/**\n * Writes with a hidden iframe.\n *\n * @param {String} data to send\n * @param {Function} called upon flush.\n * @api private\n */\n\nJSONPPolling.prototype.doWrite = function (data, fn) {\n  var self = this;\n\n  if (!this.form) {\n    var form = document.createElement('form');\n    var area = document.createElement('textarea');\n    var id = this.iframeId = 'eio_iframe_' + this.index;\n    var iframe;\n\n    form.className = 'socketio';\n    form.style.position = 'absolute';\n    form.style.top = '-1000px';\n    form.style.left = '-1000px';\n    form.target = id;\n    form.method = 'POST';\n    form.setAttribute('accept-charset', 'utf-8');\n    area.name = 'd';\n    form.appendChild(area);\n    document.body.appendChild(form);\n\n    this.form = form;\n    this.area = area;\n  }\n\n  this.form.action = this.uri();\n\n  function complete () {\n    initIframe();\n    fn();\n  }\n\n  function initIframe () {\n    if (self.iframe) {\n      try {\n        self.form.removeChild(self.iframe);\n      } catch (e) {\n        self.onError('jsonp polling iframe removal error', e);\n      }\n    }\n\n    try {\n      // ie6 dynamic iframes with target=\"\" support (thanks Chris Lambacher)\n      var html = '<iframe src=\"javascript:0\" name=\"' + self.iframeId + '\">';\n      iframe = document.createElement(html);\n    } catch (e) {\n      iframe = document.createElement('iframe');\n      iframe.name = self.iframeId;\n      iframe.src = 'javascript:0';\n    }\n\n    iframe.id = self.iframeId;\n\n    self.form.appendChild(iframe);\n    self.iframe = iframe;\n  }\n\n  initIframe();\n\n  // escape \\n to prevent it from being converted into \\r\\n by some UAs\n  // double escaping is required for escaped new lines because unescaping of new lines can be done safely on server-side\n  data = data.replace(rEscapedNewline, '\\\\\\n');\n  this.area.value = data.replace(rNewline, '\\\\n');\n\n  try {\n    this.form.submit();\n  } catch (e) {}\n\n  if (this.iframe.attachEvent) {\n    this.iframe.onreadystatechange = function () {\n      if (self.iframe.readyState === 'complete') {\n        complete();\n      }\n    };\n  } else {\n    this.iframe.onload = complete;\n  }\n};\n","/**\n * Module dependencies.\n */\n\nvar Transport = require('../transport');\nvar parser = require('engine.io-parser');\nvar parseqs = require('parseqs');\nvar inherit = require('component-inherit');\nvar yeast = require('yeast');\nvar debug = require('debug')('engine.io-client:websocket');\n\nvar BrowserWebSocket, NodeWebSocket;\n\nif (typeof WebSocket !== 'undefined') {\n  BrowserWebSocket = WebSocket;\n} else if (typeof self !== 'undefined') {\n  BrowserWebSocket = self.WebSocket || self.MozWebSocket;\n}\n\nif (typeof window === 'undefined') {\n  try {\n    NodeWebSocket = require('ws');\n  } catch (e) { }\n}\n\n/**\n * Get either the `WebSocket` or `MozWebSocket` globals\n * in the browser or try to resolve WebSocket-compatible\n * interface exposed by `ws` for Node-like environment.\n */\n\nvar WebSocketImpl = BrowserWebSocket || NodeWebSocket;\n\n/**\n * Module exports.\n */\n\nmodule.exports = WS;\n\n/**\n * WebSocket transport constructor.\n *\n * @api {Object} connection options\n * @api public\n */\n\nfunction WS (opts) {\n  var forceBase64 = (opts && opts.forceBase64);\n  if (forceBase64) {\n    this.supportsBinary = false;\n  }\n  this.perMessageDeflate = opts.perMessageDeflate;\n  this.usingBrowserWebSocket = BrowserWebSocket && !opts.forceNode;\n  this.protocols = opts.protocols;\n  if (!this.usingBrowserWebSocket) {\n    WebSocketImpl = NodeWebSocket;\n  }\n  Transport.call(this, opts);\n}\n\n/**\n * Inherits from Transport.\n */\n\ninherit(WS, Transport);\n\n/**\n * Transport name.\n *\n * @api public\n */\n\nWS.prototype.name = 'websocket';\n\n/*\n * WebSockets support binary\n */\n\nWS.prototype.supportsBinary = true;\n\n/**\n * Opens socket.\n *\n * @api private\n */\n\nWS.prototype.doOpen = function () {\n  if (!this.check()) {\n    // let probe timeout\n    return;\n  }\n\n  var uri = this.uri();\n  var protocols = this.protocols;\n  var opts = {\n    agent: this.agent,\n    perMessageDeflate: this.perMessageDeflate\n  };\n\n  // SSL options for Node.js client\n  opts.pfx = this.pfx;\n  opts.key = this.key;\n  opts.passphrase = this.passphrase;\n  opts.cert = this.cert;\n  opts.ca = this.ca;\n  opts.ciphers = this.ciphers;\n  opts.rejectUnauthorized = this.rejectUnauthorized;\n  if (this.extraHeaders) {\n    opts.headers = this.extraHeaders;\n  }\n  if (this.localAddress) {\n    opts.localAddress = this.localAddress;\n  }\n\n  try {\n    this.ws =\n      this.usingBrowserWebSocket && !this.isReactNative\n        ? protocols\n          ? new WebSocketImpl(uri, protocols)\n          : new WebSocketImpl(uri)\n        : new WebSocketImpl(uri, protocols, opts);\n  } catch (err) {\n    return this.emit('error', err);\n  }\n\n  if (this.ws.binaryType === undefined) {\n    this.supportsBinary = false;\n  }\n\n  if (this.ws.supports && this.ws.supports.binary) {\n    this.supportsBinary = true;\n    this.ws.binaryType = 'nodebuffer';\n  } else {\n    this.ws.binaryType = 'arraybuffer';\n  }\n\n  this.addEventListeners();\n};\n\n/**\n * Adds event listeners to the socket\n *\n * @api private\n */\n\nWS.prototype.addEventListeners = function () {\n  var self = this;\n\n  this.ws.onopen = function () {\n    self.onOpen();\n  };\n  this.ws.onclose = function () {\n    self.onClose();\n  };\n  this.ws.onmessage = function (ev) {\n    self.onData(ev.data);\n  };\n  this.ws.onerror = function (e) {\n    self.onError('websocket error', e);\n  };\n};\n\n/**\n * Writes data to socket.\n *\n * @param {Array} array of packets.\n * @api private\n */\n\nWS.prototype.write = function (packets) {\n  var self = this;\n  this.writable = false;\n\n  // encodePacket efficient as it uses WS framing\n  // no need for encodePayload\n  var total = packets.length;\n  for (var i = 0, l = total; i < l; i++) {\n    (function (packet) {\n      parser.encodePacket(packet, self.supportsBinary, function (data) {\n        if (!self.usingBrowserWebSocket) {\n          // always create a new object (GH-437)\n          var opts = {};\n          if (packet.options) {\n            opts.compress = packet.options.compress;\n          }\n\n          if (self.perMessageDeflate) {\n            var len = 'string' === typeof data ? Buffer.byteLength(data) : data.length;\n            if (len < self.perMessageDeflate.threshold) {\n              opts.compress = false;\n            }\n          }\n        }\n\n        // Sometimes the websocket has already been closed but the browser didn't\n        // have a chance of informing us about it yet, in that case send will\n        // throw an error\n        try {\n          if (self.usingBrowserWebSocket) {\n            // TypeError is thrown when passing the second argument on Safari\n            self.ws.send(data);\n          } else {\n            self.ws.send(data, opts);\n          }\n        } catch (e) {\n          debug('websocket closed before onclose event');\n        }\n\n        --total || done();\n      });\n    })(packets[i]);\n  }\n\n  function done () {\n    self.emit('flush');\n\n    // fake drain\n    // defer to next tick to allow Socket to clear writeBuffer\n    setTimeout(function () {\n      self.writable = true;\n      self.emit('drain');\n    }, 0);\n  }\n};\n\n/**\n * Called upon close\n *\n * @api private\n */\n\nWS.prototype.onClose = function () {\n  Transport.prototype.onClose.call(this);\n};\n\n/**\n * Closes socket.\n *\n * @api private\n */\n\nWS.prototype.doClose = function () {\n  if (typeof this.ws !== 'undefined') {\n    this.ws.close();\n  }\n};\n\n/**\n * Generates uri for connection.\n *\n * @api private\n */\n\nWS.prototype.uri = function () {\n  var query = this.query || {};\n  var schema = this.secure ? 'wss' : 'ws';\n  var port = '';\n\n  // avoid port if default for schema\n  if (this.port && (('wss' === schema && Number(this.port) !== 443) ||\n    ('ws' === schema && Number(this.port) !== 80))) {\n    port = ':' + this.port;\n  }\n\n  // append timestamp to URI\n  if (this.timestampRequests) {\n    query[this.timestampParam] = yeast();\n  }\n\n  // communicate binary support capabilities\n  if (!this.supportsBinary) {\n    query.b64 = 1;\n  }\n\n  query = parseqs.encode(query);\n\n  // prepend ? to query\n  if (query.length) {\n    query = '?' + query;\n  }\n\n  var ipv6 = this.hostname.indexOf(':') !== -1;\n  return schema + '://' + (ipv6 ? '[' + this.hostname + ']' : this.hostname) + port + this.path + query;\n};\n\n/**\n * Feature detection for WebSocket.\n *\n * @return {Boolean} whether this transport is available.\n * @api public\n */\n\nWS.prototype.check = function () {\n  return !!WebSocketImpl && !('__initialize' in WebSocketImpl && this.name === WS.prototype.name);\n};\n","/**\n * Module dependencies\n */\n\nvar XMLHttpRequest = require('xmlhttprequest-ssl');\nvar XHR = require('./polling-xhr');\nvar JSONP = require('./polling-jsonp');\nvar websocket = require('./websocket');\n\n/**\n * Export transports.\n */\n\nexports.polling = polling;\nexports.websocket = websocket;\n\n/**\n * Polling transport polymorphic constructor.\n * Decides on xhr vs jsonp based on feature detection.\n *\n * @api private\n */\n\nfunction polling (opts) {\n  var xhr;\n  var xd = false;\n  var xs = false;\n  var jsonp = false !== opts.jsonp;\n\n  if (typeof location !== 'undefined') {\n    var isSSL = 'https:' === location.protocol;\n    var port = location.port;\n\n    // some user agents have empty `location.port`\n    if (!port) {\n      port = isSSL ? 443 : 80;\n    }\n\n    xd = opts.hostname !== location.hostname || port !== opts.port;\n    xs = opts.secure !== isSSL;\n  }\n\n  opts.xdomain = xd;\n  opts.xscheme = xs;\n  xhr = new XMLHttpRequest(opts);\n\n  if ('open' in xhr && !opts.forceJSONP) {\n    return new XHR(opts);\n  } else {\n    if (!jsonp) throw new Error('JSONP disabled');\n    return new JSONP(opts);\n  }\n}\n","\nvar indexOf = [].indexOf;\n\nmodule.exports = function(arr, obj){\n  if (indexOf) return arr.indexOf(obj);\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n};","/**\n * Module dependencies.\n */\n\nvar transports = require('./transports/index');\nvar Emitter = require('component-emitter');\nvar debug = require('debug')('engine.io-client:socket');\nvar index = require('indexof');\nvar parser = require('engine.io-parser');\nvar parseuri = require('parseuri');\nvar parseqs = require('parseqs');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Socket;\n\n/**\n * Socket constructor.\n *\n * @param {String|Object} uri or options\n * @param {Object} options\n * @api public\n */\n\nfunction Socket (uri, opts) {\n  if (!(this instanceof Socket)) return new Socket(uri, opts);\n\n  opts = opts || {};\n\n  if (uri && 'object' === typeof uri) {\n    opts = uri;\n    uri = null;\n  }\n\n  if (uri) {\n    uri = parseuri(uri);\n    opts.hostname = uri.host;\n    opts.secure = uri.protocol === 'https' || uri.protocol === 'wss';\n    opts.port = uri.port;\n    if (uri.query) opts.query = uri.query;\n  } else if (opts.host) {\n    opts.hostname = parseuri(opts.host).host;\n  }\n\n  this.secure = null != opts.secure ? opts.secure\n    : (typeof location !== 'undefined' && 'https:' === location.protocol);\n\n  if (opts.hostname && !opts.port) {\n    // if no port is specified manually, use the protocol default\n    opts.port = this.secure ? '443' : '80';\n  }\n\n  this.agent = opts.agent || false;\n  this.hostname = opts.hostname ||\n    (typeof location !== 'undefined' ? location.hostname : 'localhost');\n  this.port = opts.port || (typeof location !== 'undefined' && location.port\n      ? location.port\n      : (this.secure ? 443 : 80));\n  this.query = opts.query || {};\n  if ('string' === typeof this.query) this.query = parseqs.decode(this.query);\n  this.upgrade = false !== opts.upgrade;\n  this.path = (opts.path || '/engine.io').replace(/\\/$/, '') + '/';\n  this.forceJSONP = !!opts.forceJSONP;\n  this.jsonp = false !== opts.jsonp;\n  this.forceBase64 = !!opts.forceBase64;\n  this.enablesXDR = !!opts.enablesXDR;\n  this.withCredentials = false !== opts.withCredentials;\n  this.timestampParam = opts.timestampParam || 't';\n  this.timestampRequests = opts.timestampRequests;\n  this.transports = opts.transports || ['polling', 'websocket'];\n  this.transportOptions = opts.transportOptions || {};\n  this.readyState = '';\n  this.writeBuffer = [];\n  this.prevBufferLen = 0;\n  this.policyPort = opts.policyPort || 843;\n  this.rememberUpgrade = opts.rememberUpgrade || false;\n  this.binaryType = null;\n  this.onlyBinaryUpgrades = opts.onlyBinaryUpgrades;\n  this.perMessageDeflate = false !== opts.perMessageDeflate ? (opts.perMessageDeflate || {}) : false;\n\n  if (true === this.perMessageDeflate) this.perMessageDeflate = {};\n  if (this.perMessageDeflate && null == this.perMessageDeflate.threshold) {\n    this.perMessageDeflate.threshold = 1024;\n  }\n\n  // SSL options for Node.js client\n  this.pfx = opts.pfx || null;\n  this.key = opts.key || null;\n  this.passphrase = opts.passphrase || null;\n  this.cert = opts.cert || null;\n  this.ca = opts.ca || null;\n  this.ciphers = opts.ciphers || null;\n  this.rejectUnauthorized = opts.rejectUnauthorized === undefined ? true : opts.rejectUnauthorized;\n  this.forceNode = !!opts.forceNode;\n\n  // detect ReactNative environment\n  this.isReactNative = (typeof navigator !== 'undefined' && typeof navigator.product === 'string' && navigator.product.toLowerCase() === 'reactnative');\n\n  // other options for Node.js or ReactNative client\n  if (typeof self === 'undefined' || this.isReactNative) {\n    if (opts.extraHeaders && Object.keys(opts.extraHeaders).length > 0) {\n      this.extraHeaders = opts.extraHeaders;\n    }\n\n    if (opts.localAddress) {\n      this.localAddress = opts.localAddress;\n    }\n  }\n\n  // set on handshake\n  this.id = null;\n  this.upgrades = null;\n  this.pingInterval = null;\n  this.pingTimeout = null;\n\n  // set on heartbeat\n  this.pingIntervalTimer = null;\n  this.pingTimeoutTimer = null;\n\n  this.open();\n}\n\nSocket.priorWebsocketSuccess = false;\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nSocket.protocol = parser.protocol; // this is an int\n\n/**\n * Expose deps for legacy compatibility\n * and standalone browser access.\n */\n\nSocket.Socket = Socket;\nSocket.Transport = require('./transport');\nSocket.transports = require('./transports/index');\nSocket.parser = require('engine.io-parser');\n\n/**\n * Creates transport of the given type.\n *\n * @param {String} transport name\n * @return {Transport}\n * @api private\n */\n\nSocket.prototype.createTransport = function (name) {\n  debug('creating transport \"%s\"', name);\n  var query = clone(this.query);\n\n  // append engine.io protocol identifier\n  query.EIO = parser.protocol;\n\n  // transport name\n  query.transport = name;\n\n  // per-transport options\n  var options = this.transportOptions[name] || {};\n\n  // session id if we already have one\n  if (this.id) query.sid = this.id;\n\n  var transport = new transports[name]({\n    query: query,\n    socket: this,\n    agent: options.agent || this.agent,\n    hostname: options.hostname || this.hostname,\n    port: options.port || this.port,\n    secure: options.secure || this.secure,\n    path: options.path || this.path,\n    forceJSONP: options.forceJSONP || this.forceJSONP,\n    jsonp: options.jsonp || this.jsonp,\n    forceBase64: options.forceBase64 || this.forceBase64,\n    enablesXDR: options.enablesXDR || this.enablesXDR,\n    withCredentials: options.withCredentials || this.withCredentials,\n    timestampRequests: options.timestampRequests || this.timestampRequests,\n    timestampParam: options.timestampParam || this.timestampParam,\n    policyPort: options.policyPort || this.policyPort,\n    pfx: options.pfx || this.pfx,\n    key: options.key || this.key,\n    passphrase: options.passphrase || this.passphrase,\n    cert: options.cert || this.cert,\n    ca: options.ca || this.ca,\n    ciphers: options.ciphers || this.ciphers,\n    rejectUnauthorized: options.rejectUnauthorized || this.rejectUnauthorized,\n    perMessageDeflate: options.perMessageDeflate || this.perMessageDeflate,\n    extraHeaders: options.extraHeaders || this.extraHeaders,\n    forceNode: options.forceNode || this.forceNode,\n    localAddress: options.localAddress || this.localAddress,\n    requestTimeout: options.requestTimeout || this.requestTimeout,\n    protocols: options.protocols || void (0),\n    isReactNative: this.isReactNative\n  });\n\n  return transport;\n};\n\nfunction clone (obj) {\n  var o = {};\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      o[i] = obj[i];\n    }\n  }\n  return o;\n}\n\n/**\n * Initializes transport to use and starts probe.\n *\n * @api private\n */\nSocket.prototype.open = function () {\n  var transport;\n  if (this.rememberUpgrade && Socket.priorWebsocketSuccess && this.transports.indexOf('websocket') !== -1) {\n    transport = 'websocket';\n  } else if (0 === this.transports.length) {\n    // Emit error on next tick so it can be listened to\n    var self = this;\n    setTimeout(function () {\n      self.emit('error', 'No transports available');\n    }, 0);\n    return;\n  } else {\n    transport = this.transports[0];\n  }\n  this.readyState = 'opening';\n\n  // Retry with the next transport if the transport is disabled (jsonp: false)\n  try {\n    transport = this.createTransport(transport);\n  } catch (e) {\n    this.transports.shift();\n    this.open();\n    return;\n  }\n\n  transport.open();\n  this.setTransport(transport);\n};\n\n/**\n * Sets the current transport. Disables the existing one (if any).\n *\n * @api private\n */\n\nSocket.prototype.setTransport = function (transport) {\n  debug('setting transport %s', transport.name);\n  var self = this;\n\n  if (this.transport) {\n    debug('clearing existing transport %s', this.transport.name);\n    this.transport.removeAllListeners();\n  }\n\n  // set up transport\n  this.transport = transport;\n\n  // set up transport listeners\n  transport\n  .on('drain', function () {\n    self.onDrain();\n  })\n  .on('packet', function (packet) {\n    self.onPacket(packet);\n  })\n  .on('error', function (e) {\n    self.onError(e);\n  })\n  .on('close', function () {\n    self.onClose('transport close');\n  });\n};\n\n/**\n * Probes a transport.\n *\n * @param {String} transport name\n * @api private\n */\n\nSocket.prototype.probe = function (name) {\n  debug('probing transport \"%s\"', name);\n  var transport = this.createTransport(name, { probe: 1 });\n  var failed = false;\n  var self = this;\n\n  Socket.priorWebsocketSuccess = false;\n\n  function onTransportOpen () {\n    if (self.onlyBinaryUpgrades) {\n      var upgradeLosesBinary = !this.supportsBinary && self.transport.supportsBinary;\n      failed = failed || upgradeLosesBinary;\n    }\n    if (failed) return;\n\n    debug('probe transport \"%s\" opened', name);\n    transport.send([{ type: 'ping', data: 'probe' }]);\n    transport.once('packet', function (msg) {\n      if (failed) return;\n      if ('pong' === msg.type && 'probe' === msg.data) {\n        debug('probe transport \"%s\" pong', name);\n        self.upgrading = true;\n        self.emit('upgrading', transport);\n        if (!transport) return;\n        Socket.priorWebsocketSuccess = 'websocket' === transport.name;\n\n        debug('pausing current transport \"%s\"', self.transport.name);\n        self.transport.pause(function () {\n          if (failed) return;\n          if ('closed' === self.readyState) return;\n          debug('changing transport and sending upgrade packet');\n\n          cleanup();\n\n          self.setTransport(transport);\n          transport.send([{ type: 'upgrade' }]);\n          self.emit('upgrade', transport);\n          transport = null;\n          self.upgrading = false;\n          self.flush();\n        });\n      } else {\n        debug('probe transport \"%s\" failed', name);\n        var err = new Error('probe error');\n        err.transport = transport.name;\n        self.emit('upgradeError', err);\n      }\n    });\n  }\n\n  function freezeTransport () {\n    if (failed) return;\n\n    // Any callback called by transport should be ignored since now\n    failed = true;\n\n    cleanup();\n\n    transport.close();\n    transport = null;\n  }\n\n  // Handle any error that happens while probing\n  function onerror (err) {\n    var error = new Error('probe error: ' + err);\n    error.transport = transport.name;\n\n    freezeTransport();\n\n    debug('probe transport \"%s\" failed because of error: %s', name, err);\n\n    self.emit('upgradeError', error);\n  }\n\n  function onTransportClose () {\n    onerror('transport closed');\n  }\n\n  // When the socket is closed while we're probing\n  function onclose () {\n    onerror('socket closed');\n  }\n\n  // When the socket is upgraded while we're probing\n  function onupgrade (to) {\n    if (transport && to.name !== transport.name) {\n      debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n      freezeTransport();\n    }\n  }\n\n  // Remove all listeners on the transport and on self\n  function cleanup () {\n    transport.removeListener('open', onTransportOpen);\n    transport.removeListener('error', onerror);\n    transport.removeListener('close', onTransportClose);\n    self.removeListener('close', onclose);\n    self.removeListener('upgrading', onupgrade);\n  }\n\n  transport.once('open', onTransportOpen);\n  transport.once('error', onerror);\n  transport.once('close', onTransportClose);\n\n  this.once('close', onclose);\n  this.once('upgrading', onupgrade);\n\n  transport.open();\n};\n\n/**\n * Called when connection is deemed open.\n *\n * @api public\n */\n\nSocket.prototype.onOpen = function () {\n  debug('socket open');\n  this.readyState = 'open';\n  Socket.priorWebsocketSuccess = 'websocket' === this.transport.name;\n  this.emit('open');\n  this.flush();\n\n  // we check for `readyState` in case an `open`\n  // listener already closed the socket\n  if ('open' === this.readyState && this.upgrade && this.transport.pause) {\n    debug('starting upgrade probes');\n    for (var i = 0, l = this.upgrades.length; i < l; i++) {\n      this.probe(this.upgrades[i]);\n    }\n  }\n};\n\n/**\n * Handles a packet.\n *\n * @api private\n */\n\nSocket.prototype.onPacket = function (packet) {\n  if ('opening' === this.readyState || 'open' === this.readyState ||\n      'closing' === this.readyState) {\n    debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n\n    this.emit('packet', packet);\n\n    // Socket is live - any packet counts\n    this.emit('heartbeat');\n\n    switch (packet.type) {\n      case 'open':\n        this.onHandshake(JSON.parse(packet.data));\n        break;\n\n      case 'pong':\n        this.setPing();\n        this.emit('pong');\n        break;\n\n      case 'error':\n        var err = new Error('server error');\n        err.code = packet.data;\n        this.onError(err);\n        break;\n\n      case 'message':\n        this.emit('data', packet.data);\n        this.emit('message', packet.data);\n        break;\n    }\n  } else {\n    debug('packet received with socket readyState \"%s\"', this.readyState);\n  }\n};\n\n/**\n * Called upon handshake completion.\n *\n * @param {Object} handshake obj\n * @api private\n */\n\nSocket.prototype.onHandshake = function (data) {\n  this.emit('handshake', data);\n  this.id = data.sid;\n  this.transport.query.sid = data.sid;\n  this.upgrades = this.filterUpgrades(data.upgrades);\n  this.pingInterval = data.pingInterval;\n  this.pingTimeout = data.pingTimeout;\n  this.onOpen();\n  // In case open handler closes socket\n  if ('closed' === this.readyState) return;\n  this.setPing();\n\n  // Prolong liveness of socket on heartbeat\n  this.removeListener('heartbeat', this.onHeartbeat);\n  this.on('heartbeat', this.onHeartbeat);\n};\n\n/**\n * Resets ping timeout.\n *\n * @api private\n */\n\nSocket.prototype.onHeartbeat = function (timeout) {\n  clearTimeout(this.pingTimeoutTimer);\n  var self = this;\n  self.pingTimeoutTimer = setTimeout(function () {\n    if ('closed' === self.readyState) return;\n    self.onClose('ping timeout');\n  }, timeout || (self.pingInterval + self.pingTimeout));\n};\n\n/**\n * Pings server every `this.pingInterval` and expects response\n * within `this.pingTimeout` or closes connection.\n *\n * @api private\n */\n\nSocket.prototype.setPing = function () {\n  var self = this;\n  clearTimeout(self.pingIntervalTimer);\n  self.pingIntervalTimer = setTimeout(function () {\n    debug('writing ping packet - expecting pong within %sms', self.pingTimeout);\n    self.ping();\n    self.onHeartbeat(self.pingTimeout);\n  }, self.pingInterval);\n};\n\n/**\n* Sends a ping packet.\n*\n* @api private\n*/\n\nSocket.prototype.ping = function () {\n  var self = this;\n  this.sendPacket('ping', function () {\n    self.emit('ping');\n  });\n};\n\n/**\n * Called on `drain` event\n *\n * @api private\n */\n\nSocket.prototype.onDrain = function () {\n  this.writeBuffer.splice(0, this.prevBufferLen);\n\n  // setting prevBufferLen = 0 is very important\n  // for example, when upgrading, upgrade packet is sent over,\n  // and a nonzero prevBufferLen could cause problems on `drain`\n  this.prevBufferLen = 0;\n\n  if (0 === this.writeBuffer.length) {\n    this.emit('drain');\n  } else {\n    this.flush();\n  }\n};\n\n/**\n * Flush write buffers.\n *\n * @api private\n */\n\nSocket.prototype.flush = function () {\n  if ('closed' !== this.readyState && this.transport.writable &&\n    !this.upgrading && this.writeBuffer.length) {\n    debug('flushing %d packets in socket', this.writeBuffer.length);\n    this.transport.send(this.writeBuffer);\n    // keep track of current length of writeBuffer\n    // splice writeBuffer and callbackBuffer on `drain`\n    this.prevBufferLen = this.writeBuffer.length;\n    this.emit('flush');\n  }\n};\n\n/**\n * Sends a message.\n *\n * @param {String} message.\n * @param {Function} callback function.\n * @param {Object} options.\n * @return {Socket} for chaining.\n * @api public\n */\n\nSocket.prototype.write =\nSocket.prototype.send = function (msg, options, fn) {\n  this.sendPacket('message', msg, options, fn);\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {String} packet type.\n * @param {String} data.\n * @param {Object} options.\n * @param {Function} callback function.\n * @api private\n */\n\nSocket.prototype.sendPacket = function (type, data, options, fn) {\n  if ('function' === typeof data) {\n    fn = data;\n    data = undefined;\n  }\n\n  if ('function' === typeof options) {\n    fn = options;\n    options = null;\n  }\n\n  if ('closing' === this.readyState || 'closed' === this.readyState) {\n    return;\n  }\n\n  options = options || {};\n  options.compress = false !== options.compress;\n\n  var packet = {\n    type: type,\n    data: data,\n    options: options\n  };\n  this.emit('packetCreate', packet);\n  this.writeBuffer.push(packet);\n  if (fn) this.once('flush', fn);\n  this.flush();\n};\n\n/**\n * Closes the connection.\n *\n * @api private\n */\n\nSocket.prototype.close = function () {\n  if ('opening' === this.readyState || 'open' === this.readyState) {\n    this.readyState = 'closing';\n\n    var self = this;\n\n    if (this.writeBuffer.length) {\n      this.once('drain', function () {\n        if (this.upgrading) {\n          waitForUpgrade();\n        } else {\n          close();\n        }\n      });\n    } else if (this.upgrading) {\n      waitForUpgrade();\n    } else {\n      close();\n    }\n  }\n\n  function close () {\n    self.onClose('forced close');\n    debug('socket closing - telling transport to close');\n    self.transport.close();\n  }\n\n  function cleanupAndClose () {\n    self.removeListener('upgrade', cleanupAndClose);\n    self.removeListener('upgradeError', cleanupAndClose);\n    close();\n  }\n\n  function waitForUpgrade () {\n    // wait for upgrade to finish since we can't send packets while pausing a transport\n    self.once('upgrade', cleanupAndClose);\n    self.once('upgradeError', cleanupAndClose);\n  }\n\n  return this;\n};\n\n/**\n * Called upon transport error\n *\n * @api private\n */\n\nSocket.prototype.onError = function (err) {\n  debug('socket error %j', err);\n  Socket.priorWebsocketSuccess = false;\n  this.emit('error', err);\n  this.onClose('transport error', err);\n};\n\n/**\n * Called upon transport close.\n *\n * @api private\n */\n\nSocket.prototype.onClose = function (reason, desc) {\n  if ('opening' === this.readyState || 'open' === this.readyState || 'closing' === this.readyState) {\n    debug('socket close with reason: \"%s\"', reason);\n    var self = this;\n\n    // clear timers\n    clearTimeout(this.pingIntervalTimer);\n    clearTimeout(this.pingTimeoutTimer);\n\n    // stop event from firing again for transport\n    this.transport.removeAllListeners('close');\n\n    // ensure transport won't stay open\n    this.transport.close();\n\n    // ignore further transport communication\n    this.transport.removeAllListeners();\n\n    // set ready state\n    this.readyState = 'closed';\n\n    // clear session id\n    this.id = null;\n\n    // emit close event\n    this.emit('close', reason, desc);\n\n    // clean buffers after, so users can still\n    // grab the buffers on `close` event\n    self.writeBuffer = [];\n    self.prevBufferLen = 0;\n  }\n};\n\n/**\n * Filters upgrades, returning only those matching client transports.\n *\n * @param {Array} server upgrades\n * @api private\n *\n */\n\nSocket.prototype.filterUpgrades = function (upgrades) {\n  var filteredUpgrades = [];\n  for (var i = 0, j = upgrades.length; i < j; i++) {\n    if (~index(this.transports, upgrades[i])) filteredUpgrades.push(upgrades[i]);\n  }\n  return filteredUpgrades;\n};\n","\nmodule.exports = require('./socket');\n\n/**\n * Exports parser\n *\n * @api public\n *\n */\nmodule.exports.parser = require('engine.io-parser');\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Module exports.\n */\n\nmodule.exports = on;\n\n/**\n * Helper for subscriptions.\n *\n * @param {Object|EventEmitter} obj with `Emitter` mixin or `EventEmitter`\n * @param {String} event name\n * @param {Function} callback\n * @api public\n */\n\nfunction on (obj, ev, fn) {\n  obj.on(ev, fn);\n  return {\n    destroy: function () {\n      obj.removeListener(ev, fn);\n    }\n  };\n}\n","/**\n * Slice reference.\n */\n\nvar slice = [].slice;\n\n/**\n * Bind `obj` to `fn`.\n *\n * @param {Object} obj\n * @param {Function|String} fn or string\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function(obj, fn){\n  if ('string' == typeof fn) fn = obj[fn];\n  if ('function' != typeof fn) throw new Error('bind() requires a function');\n  var args = slice.call(arguments, 2);\n  return function(){\n    return fn.apply(obj, args.concat(slice.call(arguments)));\n  }\n};\n","\n/**\n * Module dependencies.\n */\n\nvar parser = require('socket.io-parser');\nvar Emitter = require('component-emitter');\nvar toArray = require('to-array');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:socket');\nvar parseqs = require('parseqs');\nvar hasBin = require('has-binary2');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Internal events (blacklisted).\n * These events can't be emitted by the user.\n *\n * @api private\n */\n\nvar events = {\n  connect: 1,\n  connect_error: 1,\n  connect_timeout: 1,\n  connecting: 1,\n  disconnect: 1,\n  error: 1,\n  reconnect: 1,\n  reconnect_attempt: 1,\n  reconnect_failed: 1,\n  reconnect_error: 1,\n  reconnecting: 1,\n  ping: 1,\n  pong: 1\n};\n\n/**\n * Shortcut to `Emitter#emit`.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * `Socket` constructor.\n *\n * @api public\n */\n\nfunction Socket (io, nsp, opts) {\n  this.io = io;\n  this.nsp = nsp;\n  this.json = this; // compat\n  this.ids = 0;\n  this.acks = {};\n  this.receiveBuffer = [];\n  this.sendBuffer = [];\n  this.connected = false;\n  this.disconnected = true;\n  this.flags = {};\n  if (opts && opts.query) {\n    this.query = opts.query;\n  }\n  if (this.io.autoConnect) this.open();\n}\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Socket.prototype);\n\n/**\n * Subscribe to open, close and packet events\n *\n * @api private\n */\n\nSocket.prototype.subEvents = function () {\n  if (this.subs) return;\n\n  var io = this.io;\n  this.subs = [\n    on(io, 'open', bind(this, 'onopen')),\n    on(io, 'packet', bind(this, 'onpacket')),\n    on(io, 'close', bind(this, 'onclose'))\n  ];\n};\n\n/**\n * \"Opens\" the socket.\n *\n * @api public\n */\n\nSocket.prototype.open =\nSocket.prototype.connect = function () {\n  if (this.connected) return this;\n\n  this.subEvents();\n  this.io.open(); // ensure open\n  if ('open' === this.io.readyState) this.onopen();\n  this.emit('connecting');\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send = function () {\n  var args = toArray(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Override `emit`.\n * If the event is in `events`, it's emitted normally.\n *\n * @param {String} event name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function (ev) {\n  if (events.hasOwnProperty(ev)) {\n    emit.apply(this, arguments);\n    return this;\n  }\n\n  var args = toArray(arguments);\n  var packet = {\n    type: (this.flags.binary !== undefined ? this.flags.binary : hasBin(args)) ? parser.BINARY_EVENT : parser.EVENT,\n    data: args\n  };\n\n  packet.options = {};\n  packet.options.compress = !this.flags || false !== this.flags.compress;\n\n  // event ack callback\n  if ('function' === typeof args[args.length - 1]) {\n    debug('emitting packet with ack id %d', this.ids);\n    this.acks[this.ids] = args.pop();\n    packet.id = this.ids++;\n  }\n\n  if (this.connected) {\n    this.packet(packet);\n  } else {\n    this.sendBuffer.push(packet);\n  }\n\n  this.flags = {};\n\n  return this;\n};\n\n/**\n * Sends a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.packet = function (packet) {\n  packet.nsp = this.nsp;\n  this.io.packet(packet);\n};\n\n/**\n * Called upon engine `open`.\n *\n * @api private\n */\n\nSocket.prototype.onopen = function () {\n  debug('transport is open - connecting');\n\n  // write connect packet if necessary\n  if ('/' !== this.nsp) {\n    if (this.query) {\n      var query = typeof this.query === 'object' ? parseqs.encode(this.query) : this.query;\n      debug('sending connect packet with query %s', query);\n      this.packet({type: parser.CONNECT, query: query});\n    } else {\n      this.packet({type: parser.CONNECT});\n    }\n  }\n};\n\n/**\n * Called upon engine `close`.\n *\n * @param {String} reason\n * @api private\n */\n\nSocket.prototype.onclose = function (reason) {\n  debug('close (%s)', reason);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.id;\n  this.emit('disconnect', reason);\n};\n\n/**\n * Called with socket packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function (packet) {\n  var sameNamespace = packet.nsp === this.nsp;\n  var rootNamespaceError = packet.type === parser.ERROR && packet.nsp === '/';\n\n  if (!sameNamespace && !rootNamespaceError) return;\n\n  switch (packet.type) {\n    case parser.CONNECT:\n      this.onconnect();\n      break;\n\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n      break;\n  }\n};\n\n/**\n * Called upon a server event.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  if (this.connected) {\n    emit.apply(this, args);\n  } else {\n    this.receiveBuffer.push(args);\n  }\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @api private\n */\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    sent = true;\n    var args = toArray(arguments);\n    debug('sending ack %j', args);\n\n    self.packet({\n      type: hasBin(args) ? parser.BINARY_ACK : parser.ACK,\n      id: id,\n      data: args\n    });\n  };\n};\n\n/**\n * Called upon a server acknowlegement.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n  if ('function' === typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon server connect.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function () {\n  this.connected = true;\n  this.disconnected = false;\n  this.emit('connect');\n  this.emitBuffered();\n};\n\n/**\n * Emit buffered events (received and emitted).\n *\n * @api private\n */\n\nSocket.prototype.emitBuffered = function () {\n  var i;\n  for (i = 0; i < this.receiveBuffer.length; i++) {\n    emit.apply(this, this.receiveBuffer[i]);\n  }\n  this.receiveBuffer = [];\n\n  for (i = 0; i < this.sendBuffer.length; i++) {\n    this.packet(this.sendBuffer[i]);\n  }\n  this.sendBuffer = [];\n};\n\n/**\n * Called upon server disconnect.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function () {\n  debug('server disconnect (%s)', this.nsp);\n  this.destroy();\n  this.onclose('io server disconnect');\n};\n\n/**\n * Called upon forced client/server side disconnections,\n * this method ensures the manager stops tracking us and\n * that reconnections don't get triggered for this.\n *\n * @api private.\n */\n\nSocket.prototype.destroy = function () {\n  if (this.subs) {\n    // clean subscriptions to avoid reconnections\n    for (var i = 0; i < this.subs.length; i++) {\n      this.subs[i].destroy();\n    }\n    this.subs = null;\n  }\n\n  this.io.destroy(this);\n};\n\n/**\n * Disconnects the socket manually.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.close =\nSocket.prototype.disconnect = function () {\n  if (this.connected) {\n    debug('performing disconnect (%s)', this.nsp);\n    this.packet({ type: parser.DISCONNECT });\n  }\n\n  // remove socket from pool\n  this.destroy();\n\n  if (this.connected) {\n    // fire events\n    this.onclose('io client disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function (compress) {\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Sets the binary flag\n *\n * @param {Boolean} whether the emitted data contains binary\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.binary = function (binary) {\n  this.flags.binary = binary;\n  return this;\n};\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","\n/**\n * Module dependencies.\n */\n\nvar eio = require('engine.io-client');\nvar Socket = require('./socket');\nvar Emitter = require('component-emitter');\nvar parser = require('socket.io-parser');\nvar on = require('./on');\nvar bind = require('component-bind');\nvar debug = require('debug')('socket.io-client:manager');\nvar indexOf = require('indexof');\nvar Backoff = require('backo2');\n\n/**\n * IE6+ hasOwnProperty\n */\n\nvar has = Object.prototype.hasOwnProperty;\n\n/**\n * Module exports\n */\n\nmodule.exports = Manager;\n\n/**\n * `Manager` constructor.\n *\n * @param {String} engine instance or engine uri/opts\n * @param {Object} options\n * @api public\n */\n\nfunction Manager (uri, opts) {\n  if (!(this instanceof Manager)) return new Manager(uri, opts);\n  if (uri && ('object' === typeof uri)) {\n    opts = uri;\n    uri = undefined;\n  }\n  opts = opts || {};\n\n  opts.path = opts.path || '/socket.io';\n  this.nsps = {};\n  this.subs = [];\n  this.opts = opts;\n  this.reconnection(opts.reconnection !== false);\n  this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n  this.reconnectionDelay(opts.reconnectionDelay || 1000);\n  this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n  this.randomizationFactor(opts.randomizationFactor || 0.5);\n  this.backoff = new Backoff({\n    min: this.reconnectionDelay(),\n    max: this.reconnectionDelayMax(),\n    jitter: this.randomizationFactor()\n  });\n  this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n  this.readyState = 'closed';\n  this.uri = uri;\n  this.connecting = [];\n  this.lastPing = null;\n  this.encoding = false;\n  this.packetBuffer = [];\n  var _parser = opts.parser || parser;\n  this.encoder = new _parser.Encoder();\n  this.decoder = new _parser.Decoder();\n  this.autoConnect = opts.autoConnect !== false;\n  if (this.autoConnect) this.open();\n}\n\n/**\n * Propagate given event to sockets and emit on `this`\n *\n * @api private\n */\n\nManager.prototype.emitAll = function () {\n  this.emit.apply(this, arguments);\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].emit.apply(this.nsps[nsp], arguments);\n    }\n  }\n};\n\n/**\n * Update `socket.id` of all sockets\n *\n * @api private\n */\n\nManager.prototype.updateSocketIds = function () {\n  for (var nsp in this.nsps) {\n    if (has.call(this.nsps, nsp)) {\n      this.nsps[nsp].id = this.generateId(nsp);\n    }\n  }\n};\n\n/**\n * generate `socket.id` for the given `nsp`\n *\n * @param {String} nsp\n * @return {String}\n * @api private\n */\n\nManager.prototype.generateId = function (nsp) {\n  return (nsp === '/' ? '' : (nsp + '#')) + this.engine.id;\n};\n\n/**\n * Mix in `Emitter`.\n */\n\nEmitter(Manager.prototype);\n\n/**\n * Sets the `reconnection` config.\n *\n * @param {Boolean} true/false if it should automatically reconnect\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnection = function (v) {\n  if (!arguments.length) return this._reconnection;\n  this._reconnection = !!v;\n  return this;\n};\n\n/**\n * Sets the reconnection attempts config.\n *\n * @param {Number} max reconnection attempts before giving up\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionAttempts = function (v) {\n  if (!arguments.length) return this._reconnectionAttempts;\n  this._reconnectionAttempts = v;\n  return this;\n};\n\n/**\n * Sets the delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelay = function (v) {\n  if (!arguments.length) return this._reconnectionDelay;\n  this._reconnectionDelay = v;\n  this.backoff && this.backoff.setMin(v);\n  return this;\n};\n\nManager.prototype.randomizationFactor = function (v) {\n  if (!arguments.length) return this._randomizationFactor;\n  this._randomizationFactor = v;\n  this.backoff && this.backoff.setJitter(v);\n  return this;\n};\n\n/**\n * Sets the maximum delay between reconnections.\n *\n * @param {Number} delay\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.reconnectionDelayMax = function (v) {\n  if (!arguments.length) return this._reconnectionDelayMax;\n  this._reconnectionDelayMax = v;\n  this.backoff && this.backoff.setMax(v);\n  return this;\n};\n\n/**\n * Sets the connection timeout. `false` to disable\n *\n * @return {Manager} self or value\n * @api public\n */\n\nManager.prototype.timeout = function (v) {\n  if (!arguments.length) return this._timeout;\n  this._timeout = v;\n  return this;\n};\n\n/**\n * Starts trying to reconnect if reconnection is enabled and we have not\n * started reconnecting yet\n *\n * @api private\n */\n\nManager.prototype.maybeReconnectOnOpen = function () {\n  // Only try to reconnect if it's the first time we're connecting\n  if (!this.reconnecting && this._reconnection && this.backoff.attempts === 0) {\n    // keeps reconnection from firing twice for the same reconnection loop\n    this.reconnect();\n  }\n};\n\n/**\n * Sets the current transport `socket`.\n *\n * @param {Function} optional, callback\n * @return {Manager} self\n * @api public\n */\n\nManager.prototype.open =\nManager.prototype.connect = function (fn, opts) {\n  debug('readyState %s', this.readyState);\n  if (~this.readyState.indexOf('open')) return this;\n\n  debug('opening %s', this.uri);\n  this.engine = eio(this.uri, this.opts);\n  var socket = this.engine;\n  var self = this;\n  this.readyState = 'opening';\n  this.skipReconnect = false;\n\n  // emit `open`\n  var openSub = on(socket, 'open', function () {\n    self.onopen();\n    fn && fn();\n  });\n\n  // emit `connect_error`\n  var errorSub = on(socket, 'error', function (data) {\n    debug('connect_error');\n    self.cleanup();\n    self.readyState = 'closed';\n    self.emitAll('connect_error', data);\n    if (fn) {\n      var err = new Error('Connection error');\n      err.data = data;\n      fn(err);\n    } else {\n      // Only do this if there is no fn to handle the error\n      self.maybeReconnectOnOpen();\n    }\n  });\n\n  // emit `connect_timeout`\n  if (false !== this._timeout) {\n    var timeout = this._timeout;\n    debug('connect attempt will timeout after %d', timeout);\n\n    // set timer\n    var timer = setTimeout(function () {\n      debug('connect attempt timed out after %d', timeout);\n      openSub.destroy();\n      socket.close();\n      socket.emit('error', 'timeout');\n      self.emitAll('connect_timeout', timeout);\n    }, timeout);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n\n  this.subs.push(openSub);\n  this.subs.push(errorSub);\n\n  return this;\n};\n\n/**\n * Called upon transport open.\n *\n * @api private\n */\n\nManager.prototype.onopen = function () {\n  debug('open');\n\n  // clear old subs\n  this.cleanup();\n\n  // mark as open\n  this.readyState = 'open';\n  this.emit('open');\n\n  // add new subs\n  var socket = this.engine;\n  this.subs.push(on(socket, 'data', bind(this, 'ondata')));\n  this.subs.push(on(socket, 'ping', bind(this, 'onping')));\n  this.subs.push(on(socket, 'pong', bind(this, 'onpong')));\n  this.subs.push(on(socket, 'error', bind(this, 'onerror')));\n  this.subs.push(on(socket, 'close', bind(this, 'onclose')));\n  this.subs.push(on(this.decoder, 'decoded', bind(this, 'ondecoded')));\n};\n\n/**\n * Called upon a ping.\n *\n * @api private\n */\n\nManager.prototype.onping = function () {\n  this.lastPing = new Date();\n  this.emitAll('ping');\n};\n\n/**\n * Called upon a packet.\n *\n * @api private\n */\n\nManager.prototype.onpong = function () {\n  this.emitAll('pong', new Date() - this.lastPing);\n};\n\n/**\n * Called with data.\n *\n * @api private\n */\n\nManager.prototype.ondata = function (data) {\n  this.decoder.add(data);\n};\n\n/**\n * Called when parser fully decodes a packet.\n *\n * @api private\n */\n\nManager.prototype.ondecoded = function (packet) {\n  this.emit('packet', packet);\n};\n\n/**\n * Called upon socket error.\n *\n * @api private\n */\n\nManager.prototype.onerror = function (err) {\n  debug('error', err);\n  this.emitAll('error', err);\n};\n\n/**\n * Creates a new socket for the given `nsp`.\n *\n * @return {Socket}\n * @api public\n */\n\nManager.prototype.socket = function (nsp, opts) {\n  var socket = this.nsps[nsp];\n  if (!socket) {\n    socket = new Socket(this, nsp, opts);\n    this.nsps[nsp] = socket;\n    var self = this;\n    socket.on('connecting', onConnecting);\n    socket.on('connect', function () {\n      socket.id = self.generateId(nsp);\n    });\n\n    if (this.autoConnect) {\n      // manually call here since connecting event is fired before listening\n      onConnecting();\n    }\n  }\n\n  function onConnecting () {\n    if (!~indexOf(self.connecting, socket)) {\n      self.connecting.push(socket);\n    }\n  }\n\n  return socket;\n};\n\n/**\n * Called upon a socket close.\n *\n * @param {Socket} socket\n */\n\nManager.prototype.destroy = function (socket) {\n  var index = indexOf(this.connecting, socket);\n  if (~index) this.connecting.splice(index, 1);\n  if (this.connecting.length) return;\n\n  this.close();\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet\n * @api private\n */\n\nManager.prototype.packet = function (packet) {\n  debug('writing packet %j', packet);\n  var self = this;\n  if (packet.query && packet.type === 0) packet.nsp += '?' + packet.query;\n\n  if (!self.encoding) {\n    // encode, then write to engine with result\n    self.encoding = true;\n    this.encoder.encode(packet, function (encodedPackets) {\n      for (var i = 0; i < encodedPackets.length; i++) {\n        self.engine.write(encodedPackets[i], packet.options);\n      }\n      self.encoding = false;\n      self.processPacketQueue();\n    });\n  } else { // add packet to the queue\n    self.packetBuffer.push(packet);\n  }\n};\n\n/**\n * If packet buffer is non-empty, begins encoding the\n * next packet in line.\n *\n * @api private\n */\n\nManager.prototype.processPacketQueue = function () {\n  if (this.packetBuffer.length > 0 && !this.encoding) {\n    var pack = this.packetBuffer.shift();\n    this.packet(pack);\n  }\n};\n\n/**\n * Clean up transport subscriptions and packet buffer.\n *\n * @api private\n */\n\nManager.prototype.cleanup = function () {\n  debug('cleanup');\n\n  var subsLength = this.subs.length;\n  for (var i = 0; i < subsLength; i++) {\n    var sub = this.subs.shift();\n    sub.destroy();\n  }\n\n  this.packetBuffer = [];\n  this.encoding = false;\n  this.lastPing = null;\n\n  this.decoder.destroy();\n};\n\n/**\n * Close the current socket.\n *\n * @api private\n */\n\nManager.prototype.close =\nManager.prototype.disconnect = function () {\n  debug('disconnect');\n  this.skipReconnect = true;\n  this.reconnecting = false;\n  if ('opening' === this.readyState) {\n    // `onclose` will not fire because\n    // an open event never happened\n    this.cleanup();\n  }\n  this.backoff.reset();\n  this.readyState = 'closed';\n  if (this.engine) this.engine.close();\n};\n\n/**\n * Called upon engine close.\n *\n * @api private\n */\n\nManager.prototype.onclose = function (reason) {\n  debug('onclose');\n\n  this.cleanup();\n  this.backoff.reset();\n  this.readyState = 'closed';\n  this.emit('close', reason);\n\n  if (this._reconnection && !this.skipReconnect) {\n    this.reconnect();\n  }\n};\n\n/**\n * Attempt a reconnection.\n *\n * @api private\n */\n\nManager.prototype.reconnect = function () {\n  if (this.reconnecting || this.skipReconnect) return this;\n\n  var self = this;\n\n  if (this.backoff.attempts >= this._reconnectionAttempts) {\n    debug('reconnect failed');\n    this.backoff.reset();\n    this.emitAll('reconnect_failed');\n    this.reconnecting = false;\n  } else {\n    var delay = this.backoff.duration();\n    debug('will wait %dms before reconnect attempt', delay);\n\n    this.reconnecting = true;\n    var timer = setTimeout(function () {\n      if (self.skipReconnect) return;\n\n      debug('attempting reconnect');\n      self.emitAll('reconnect_attempt', self.backoff.attempts);\n      self.emitAll('reconnecting', self.backoff.attempts);\n\n      // check again for the case socket closed in above events\n      if (self.skipReconnect) return;\n\n      self.open(function (err) {\n        if (err) {\n          debug('reconnect attempt error');\n          self.reconnecting = false;\n          self.reconnect();\n          self.emitAll('reconnect_error', err.data);\n        } else {\n          debug('reconnect success');\n          self.onreconnect();\n        }\n      });\n    }, delay);\n\n    this.subs.push({\n      destroy: function () {\n        clearTimeout(timer);\n      }\n    });\n  }\n};\n\n/**\n * Called upon successful reconnect.\n *\n * @api private\n */\n\nManager.prototype.onreconnect = function () {\n  var attempt = this.backoff.attempts;\n  this.reconnecting = false;\n  this.backoff.reset();\n  this.updateSocketIds();\n  this.emitAll('reconnect', attempt);\n};\n","\n/**\n * Module dependencies.\n */\n\nvar url = require('./url');\nvar parser = require('socket.io-parser');\nvar Manager = require('./manager');\nvar debug = require('debug')('socket.io-client');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = lookup;\n\n/**\n * Managers cache.\n */\n\nvar cache = exports.managers = {};\n\n/**\n * Looks up an existing `Manager` for multiplexing.\n * If the user summons:\n *\n *   `io('http://localhost/a');`\n *   `io('http://localhost/b');`\n *\n * We reuse the existing instance based on same scheme/port/host,\n * and we initialize sockets for each namespace.\n *\n * @api public\n */\n\nfunction lookup (uri, opts) {\n  if (typeof uri === 'object') {\n    opts = uri;\n    uri = undefined;\n  }\n\n  opts = opts || {};\n\n  var parsed = url(uri);\n  var source = parsed.source;\n  var id = parsed.id;\n  var path = parsed.path;\n  var sameNamespace = cache[id] && path in cache[id].nsps;\n  var newConnection = opts.forceNew || opts['force new connection'] ||\n                      false === opts.multiplex || sameNamespace;\n\n  var io;\n\n  if (newConnection) {\n    debug('ignoring socket cache for %s', source);\n    io = Manager(source, opts);\n  } else {\n    if (!cache[id]) {\n      debug('new io instance for %s', source);\n      cache[id] = Manager(source, opts);\n    }\n    io = cache[id];\n  }\n  if (parsed.query && !opts.query) {\n    opts.query = parsed.query;\n  }\n  return io.socket(parsed.path, opts);\n}\n\n/**\n * Protocol version.\n *\n * @api public\n */\n\nexports.protocol = parser.protocol;\n\n/**\n * `connect`.\n *\n * @param {String} uri\n * @api public\n */\n\nexports.connect = lookup;\n\n/**\n * Expose constructors for standalone build.\n *\n * @api public\n */\n\nexports.Manager = require('./manager');\nexports.Socket = require('./socket');\n","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 32);\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IDecPrivateModes, ICoreMouseEvent, CoreMouseEncoding, ICoreMouseProtocol, CoreMouseEventType } from 'common/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\n\nexport const IBufferService = createDecorator<IBufferService>('BufferService');\nexport interface IBufferService {\n  serviceBrand: any;\n\n  readonly cols: number;\n  readonly rows: number;\n  readonly buffer: IBuffer;\n  readonly buffers: IBufferSet;\n\n  // TODO: Move resize event here\n\n  resize(cols: number, rows: number): void;\n  reset(): void;\n}\n\nexport const ICoreMouseService = createDecorator<ICoreMouseService>('CoreMouseService');\nexport interface ICoreMouseService {\n  activeProtocol: string;\n  activeEncoding: string;\n  addProtocol(name: string, protocol: ICoreMouseProtocol): void;\n  addEncoding(name: string, encoding: CoreMouseEncoding): void;\n  reset(): void;\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  triggerMouseEvent(event: ICoreMouseEvent): boolean;\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  onProtocolChange: IEvent<CoreMouseEventType>;\n\n  /**\n   * Human readable version of mouse events.\n   */\n  explainEvents(events: CoreMouseEventType): {[event: string]: boolean};\n}\n\nexport const ICoreService = createDecorator<ICoreService>('CoreService');\nexport interface ICoreService {\n  serviceBrand: any;\n\n  readonly decPrivateModes: IDecPrivateModes;\n\n  readonly onData: IEvent<string>;\n  readonly onUserInput: IEvent<void>;\n\n  reset(): void;\n\n  /**\n   * Triggers the onData event in the public API.\n   * @param data The data that is being emitted.\n   * @param wasFromUser Whether the data originated from the user (as opposed to\n   * resulting from parsing incoming data). When true this will also:\n   * - Scroll to the bottom of the buffer.s\n   * - Fire the `onUserInput` event (so selection can be cleared).\n    */\n  triggerDataEvent(data: string, wasUserInput?: boolean): void;\n}\n\nexport const IDirtyRowService = createDecorator<IDirtyRowService>('DirtyRowService');\nexport interface IDirtyRowService {\n  serviceBrand: any;\n\n  readonly start: number;\n  readonly end: number;\n\n  clearRange(): void;\n  markDirty(y: number): void;\n  markRangeDirty(y1: number, y2: number): void;\n  markAllDirty(): void;\n}\n\nexport interface IServiceIdentifier<T> {\n  (...args: any[]): void;\n  type: T;\n}\n\nexport interface IConstructorSignature0<T> {\n  new(...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature1<A1, T> {\n  new(first: A1, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature2<A1, A2, T> {\n  new(first: A1, second: A2, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature3<A1, A2, A3, T> {\n  new(first: A1, second: A2, third: A3, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature4<A1, A2, A3, A4, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature5<A1, A2, A3, A4, A5, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature6<A1, A2, A3, A4, A5, A6, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport interface IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T> {\n  new(first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8, ...services: { serviceBrand: any; }[]): T;\n}\n\nexport const IInstantiationService = createDecorator<IInstantiationService>('InstantiationService');\nexport interface IInstantiationService {\n  setService<T>(id: IServiceIdentifier<T>, instance: T): void;\n\n  createInstance<T>(ctor: IConstructorSignature0<T>): T;\n  createInstance<A1, T>(ctor: IConstructorSignature1<A1, T>, first: A1): T;\n  createInstance<A1, A2, T>(ctor: IConstructorSignature2<A1, A2, T>, first: A1, second: A2): T;\n  createInstance<A1, A2, A3, T>(ctor: IConstructorSignature3<A1, A2, A3, T>, first: A1, second: A2, third: A3): T;\n  createInstance<A1, A2, A3, A4, T>(ctor: IConstructorSignature4<A1, A2, A3, A4, T>, first: A1, second: A2, third: A3, fourth: A4): T;\n  createInstance<A1, A2, A3, A4, A5, T>(ctor: IConstructorSignature5<A1, A2, A3, A4, A5, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5): T;\n  createInstance<A1, A2, A3, A4, A5, A6, T>(ctor: IConstructorSignature6<A1, A2, A3, A4, A5, A6, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, T>(ctor: IConstructorSignature7<A1, A2, A3, A4, A5, A6, A7, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7): T;\n  createInstance<A1, A2, A3, A4, A5, A6, A7, A8, T>(ctor: IConstructorSignature8<A1, A2, A3, A4, A5, A6, A7, A8, T>, first: A1, second: A2, third: A3, fourth: A4, fifth: A5, sixth: A6, seventh: A7, eigth: A8): T;\n}\n\nexport const ILogService = createDecorator<ILogService>('LogService');\nexport interface ILogService {\n  serviceBrand: any;\n\n  debug(message: any, ...optionalParams: any[]): void;\n  info(message: any, ...optionalParams: any[]): void;\n  warn(message: any, ...optionalParams: any[]): void;\n  error(message: any, ...optionalParams: any[]): void;\n}\n\nexport const IOptionsService = createDecorator<IOptionsService>('OptionsService');\nexport interface IOptionsService {\n  serviceBrand: any;\n\n  readonly options: ITerminalOptions;\n\n  readonly onOptionChange: IEvent<string>;\n\n  setOption<T>(key: string, value: T): void;\n  getOption<T>(key: string): T | undefined;\n}\n\nexport type FontWeight = 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900';\nexport type LogLevel = 'debug' | 'info' | 'warn' | 'error' | 'off';\nexport type RendererType = 'dom' | 'canvas';\n\nexport interface IPartialTerminalOptions {\n  allowTransparency?: boolean;\n  bellSound?: string;\n  bellStyle?: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols?: number;\n  cursorBlink?: boolean;\n  cursorStyle?: 'block' | 'underline' | 'bar';\n  disableStdin?: boolean;\n  drawBoldTextInBrightColors?: boolean;\n  fastScrollModifier?: 'alt' | 'ctrl' | 'shift';\n  fastScrollSensitivity?: number;\n  fontSize?: number;\n  fontFamily?: string;\n  fontWeight?: FontWeight;\n  fontWeightBold?: FontWeight;\n  letterSpacing?: number;\n  lineHeight?: number;\n  logLevel?: LogLevel;\n  macOptionIsMeta?: boolean;\n  macOptionClickForcesSelection?: boolean;\n  rendererType?: RendererType;\n  rightClickSelectsWord?: boolean;\n  rows?: number;\n  screenReaderMode?: boolean;\n  scrollback?: number;\n  scrollSensitivity?: number;\n  tabStopWidth?: number;\n  theme?: ITheme;\n  windowsMode?: boolean;\n  wordSeparator?: string;\n}\n\nexport interface ITerminalOptions {\n  allowTransparency: boolean;\n  bellSound: string;\n  bellStyle: 'none' /*| 'visual'*/ | 'sound' /*| 'both'*/;\n  cols: number;\n  cursorBlink: boolean;\n  cursorStyle: 'block' | 'underline' | 'bar';\n  disableStdin: boolean;\n  drawBoldTextInBrightColors: boolean;\n  fastScrollModifier: 'alt' | 'ctrl' | 'shift' | undefined;\n  fastScrollSensitivity: number;\n  fontSize: number;\n  fontFamily: string;\n  fontWeight: FontWeight;\n  fontWeightBold: FontWeight;\n  letterSpacing: number;\n  lineHeight: number;\n  logLevel: LogLevel;\n  macOptionIsMeta: boolean;\n  macOptionClickForcesSelection: boolean;\n  rendererType: RendererType;\n  rightClickSelectsWord: boolean;\n  rows: number;\n  screenReaderMode: boolean;\n  scrollback: number;\n  scrollSensitivity: number;\n  tabStopWidth: number;\n  theme: ITheme;\n  windowsMode: boolean;\n  wordSeparator: string;\n\n  [key: string]: any;\n  cancelEvents: boolean;\n  convertEol: boolean;\n  screenKeys: boolean;\n  termName: string;\n  useFlowControl: boolean;\n}\n\nexport interface ITheme {\n  foreground?: string;\n  background?: string;\n  cursor?: string;\n  cursorAccent?: string;\n  selection?: string;\n  black?: string;\n  red?: string;\n  green?: string;\n  yellow?: string;\n  blue?: string;\n  magenta?: string;\n  cyan?: string;\n  white?: string;\n  brightBlack?: string;\n  brightRed?: string;\n  brightGreen?: string;\n  brightYellow?: string;\n  brightBlue?: string;\n  brightMagenta?: string;\n  brightCyan?: string;\n  brightWhite?: string;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\ninterface IListener<T> {\n  (e: T): void;\n}\n\nexport interface IEvent<T> {\n  (listener: (e: T) => any): IDisposable;\n}\n\nexport interface IEventEmitter<T> {\n  event: IEvent<T>;\n  fire(data: T): void;\n}\n\nexport class EventEmitter<T> implements IEventEmitter<T> {\n  private _listeners: IListener<T>[] = [];\n  private _event?: IEvent<T>;\n\n  public get event(): IEvent<T> {\n    if (!this._event) {\n      this._event = (listener: (e: T) => any) => {\n        this._listeners.push(listener);\n        const disposable = {\n          dispose: () => {\n            for (let i = 0; i < this._listeners.length; i++) {\n              if (this._listeners[i] === listener) {\n                this._listeners.splice(i, 1);\n                return;\n              }\n            }\n          }\n        };\n        return disposable;\n      };\n    }\n    return this._event;\n  }\n\n  public fire(data: T): void {\n    const queue: IListener<T>[] = [];\n    for (let i = 0; i < this._listeners.length; i++) {\n      queue.push(this._listeners[i]);\n    }\n    for (let i = 0; i < queue.length; i++) {\n      queue[i].call(undefined, data);\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * A base class that can be extended to provide convenience methods for managing the lifecycle of an\n * object and its components.\n */\nexport abstract class Disposable implements IDisposable {\n  protected _disposables: IDisposable[] = [];\n  protected _isDisposed: boolean = false;\n\n  constructor() {\n  }\n\n  /**\n   * Disposes the object, triggering the `dispose` method on all registered IDisposables.\n   */\n  public dispose(): void {\n    this._isDisposed = true;\n    this._disposables.forEach(d => d.dispose());\n    this._disposables.length = 0;\n  }\n\n  /**\n   * Registers a disposable object.\n   * @param d The disposable to register.\n   */\n  public register<T extends IDisposable>(d: T): void {\n    this._disposables.push(d);\n  }\n\n  /**\n   * Unregisters a disposable object if it has been registered, if not do\n   * nothing.\n   * @param d The disposable to unregister.\n   */\n  public unregister<T extends IDisposable>(d: T): void {\n    const index = this._disposables.indexOf(d);\n    if (index !== -1) {\n      this._disposables.splice(index, 1);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const DEFAULT_COLOR = 256;\nexport const DEFAULT_ATTR = (0 << 18) | (DEFAULT_COLOR << 9) | (256 << 0);\n\nexport const CHAR_DATA_ATTR_INDEX = 0;\nexport const CHAR_DATA_CHAR_INDEX = 1;\nexport const CHAR_DATA_WIDTH_INDEX = 2;\nexport const CHAR_DATA_CODE_INDEX = 3;\n\n/**\n * Null cell - a real empty cell (containing nothing).\n * Note that code should always be 0 for a null cell as\n * several test condition of the buffer line rely on this.\n */\nexport const NULL_CELL_CHAR = '';\nexport const NULL_CELL_WIDTH = 1;\nexport const NULL_CELL_CODE = 0;\n\n/**\n * Whitespace cell.\n * This is meant as a replacement for empty cells when needed\n * during rendering lines to preserve correct aligment.\n */\nexport const WHITESPACE_CELL_CHAR = ' ';\nexport const WHITESPACE_CELL_WIDTH = 1;\nexport const WHITESPACE_CELL_CODE = 32;\n\n/**\n * Bitmasks for accessing data in `content`.\n */\nexport const enum Content {\n  /**\n   * bit 1..21    codepoint, max allowed in UTF32 is 0x10FFFF (21 bits taken)\n   *              read:   `codepoint = content & Content.codepointMask;`\n   *              write:  `content |= codepoint & Content.codepointMask;`\n   *                      shortcut if precondition `codepoint <= 0x10FFFF` is met:\n   *                      `content |= codepoint;`\n   */\n  CODEPOINT_MASK = 0x1FFFFF,\n\n  /**\n   * bit 22       flag indication whether a cell contains combined content\n   *              read:   `isCombined = content & Content.isCombined;`\n   *              set:    `content |= Content.isCombined;`\n   *              clear:  `content &= ~Content.isCombined;`\n   */\n  IS_COMBINED_MASK = 0x200000,  // 1 << 21\n\n  /**\n   * bit 1..22    mask to check whether a cell contains any string data\n   *              we need to check for codepoint and isCombined bits to see\n   *              whether a cell contains anything\n   *              read:   `isEmpty = !(content & Content.hasContent)`\n   */\n  HAS_CONTENT_MASK = 0x3FFFFF,\n\n  /**\n   * bit 23..24   wcwidth value of cell, takes 2 bits (ranges from 0..2)\n   *              read:   `width = (content & Content.widthMask) >> Content.widthShift;`\n   *                      `hasWidth = content & Content.widthMask;`\n   *                      as long as wcwidth is highest value in `content`:\n   *                      `width = content >> Content.widthShift;`\n   *              write:  `content |= (width << Content.widthShift) & Content.widthMask;`\n   *                      shortcut if precondition `0 <= width <= 3` is met:\n   *                      `content |= width << Content.widthShift;`\n   */\n  WIDTH_MASK = 0xC00000,   // 3 << 22\n  WIDTH_SHIFT = 22\n}\n\nexport const enum Attributes {\n  /**\n   * bit 1..8     blue in RGB, color in P256 and P16\n   */\n  BLUE_MASK = 0xFF,\n  BLUE_SHIFT = 0,\n  PCOLOR_MASK = 0xFF,\n  PCOLOR_SHIFT = 0,\n\n  /**\n   * bit 9..16    green in RGB\n   */\n  GREEN_MASK = 0xFF00,\n  GREEN_SHIFT = 8,\n\n  /**\n   * bit 17..24   red in RGB\n   */\n  RED_MASK = 0xFF0000,\n  RED_SHIFT = 16,\n\n  /**\n   * bit 25..26   color mode: DEFAULT (0) | P16 (1) | P256 (2) | RGB (3)\n   */\n  CM_MASK = 0x3000000,\n  CM_DEFAULT = 0,\n  CM_P16 = 0x1000000,\n  CM_P256 = 0x2000000,\n  CM_RGB = 0x3000000,\n\n  /**\n   * bit 1..24  RGB room\n   */\n  RGB_MASK = 0xFFFFFF\n}\n\nexport const enum FgFlags {\n  /**\n   * bit 27..31 (32th bit unused)\n   */\n  INVERSE = 0x4000000,\n  BOLD = 0x8000000,\n  UNDERLINE = 0x10000000,\n  BLINK = 0x20000000,\n  INVISIBLE = 0x40000000\n}\n\nexport const enum BgFlags {\n  /**\n   * bit 27..32 (upper 4 unused)\n   */\n  ITALIC = 0x4000000,\n  DIM = 0x8000000\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, Content } from 'common/buffer/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * CellData - represents a single Cell in the terminal buffer.\n */\nexport class CellData extends AttributeData implements ICellData {\n  /** Helper to create CellData from CharData. */\n  public static fromCharData(value: CharData): CellData {\n    const obj = new CellData();\n    obj.setFromCharData(value);\n    return obj;\n  }\n  /** Primitives from terminal buffer. */\n  public content: number = 0;\n  public fg: number = 0;\n  public bg: number = 0;\n  public combinedData: string = '';\n  /** Whether cell contains a combined string. */\n  public isCombined(): number {\n    return this.content & Content.IS_COMBINED_MASK;\n  }\n  /** Width of the cell. */\n  public getWidth(): number {\n    return this.content >> Content.WIDTH_SHIFT;\n  }\n  /** JS string of the content. */\n  public getChars(): string {\n    if (this.content & Content.IS_COMBINED_MASK) {\n      return this.combinedData;\n    }\n    if (this.content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(this.content & Content.CODEPOINT_MASK);\n    }\n    return '';\n  }\n  /**\n   * Codepoint of cell\n   * Note this returns the UTF32 codepoint of single chars,\n   * if content is a combined string it returns the codepoint\n   * of the last char in string to be in line with code in CharData.\n   * */\n  public getCode(): number {\n    return (this.isCombined())\n      ? this.combinedData.charCodeAt(this.combinedData.length - 1)\n      : this.content & Content.CODEPOINT_MASK;\n  }\n  /** Set data from CharData */\n  public setFromCharData(value: CharData): void {\n    this.fg = value[CHAR_DATA_ATTR_INDEX];\n    this.bg = 0;\n    let combined = false;\n    // surrogates and combined strings need special treatment\n    if (value[CHAR_DATA_CHAR_INDEX].length > 2) {\n      combined = true;\n    }\n    else if (value[CHAR_DATA_CHAR_INDEX].length === 2) {\n      const code = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0);\n      // if the 2-char string is a surrogate create single codepoint\n      // everything else is combined\n      if (0xD800 <= code && code <= 0xDBFF) {\n        const second = value[CHAR_DATA_CHAR_INDEX].charCodeAt(1);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          this.content = ((code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n        }\n        else {\n          combined = true;\n        }\n      }\n      else {\n        combined = true;\n      }\n    }\n    else {\n      this.content = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n    if (combined) {\n      this.combinedData = value[CHAR_DATA_CHAR_INDEX];\n      this.content = Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n  /** Get data as CharData. */\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IEvent } from 'common/EventEmitter';\nimport { IRenderDimensions, IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { createDecorator } from 'common/services/ServiceRegistry';\nimport { IDisposable } from 'common/Types';\n\nexport const ICharSizeService = createDecorator<ICharSizeService>('CharSizeService');\nexport interface ICharSizeService {\n  serviceBrand: any;\n\n  readonly width: number;\n  readonly height: number;\n  readonly hasValidSize: boolean;\n\n  readonly onCharSizeChange: IEvent<void>;\n\n  measure(): void;\n}\n\nexport const IMouseService = createDecorator<IMouseService>('MouseService');\nexport interface IMouseService {\n  serviceBrand: any;\n\n  getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined;\n  getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined;\n}\n\nexport const IRenderService = createDecorator<IRenderService>('RenderService');\nexport interface IRenderService extends IDisposable {\n  serviceBrand: any;\n\n  onDimensionsChange: IEvent<IRenderDimensions>;\n  onRender: IEvent<{ start: number, end: number }>;\n  onRefreshRequest: IEvent<{ start: number, end: number }>;\n\n  dimensions: IRenderDimensions;\n\n  refreshRows(start: number, end: number): void;\n  resize(cols: number, rows: number): void;\n  changeOptions(): void;\n  setRenderer(renderer: IRenderer): void;\n  setColors(colors: IColorSet): void;\n  onDevicePixelRatioChange(): void;\n  onResize(cols: number, rows: number): void;\n  // TODO: Is this useful when we have onResize?\n  onCharSizeChanged(): void;\n  onBlur(): void;\n  onFocus(): void;\n  onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void;\n  onCursorMove(): void;\n  clear(): void;\n  registerCharacterJoiner(handler: CharacterJoinerHandler): number;\n  deregisterCharacterJoiner(joinerId: number): boolean;\n}\n\nexport const ISelectionService = createDecorator<ISelectionService>('SelectionService');\nexport interface ISelectionService {\n  serviceBrand: any;\n\n  readonly selectionText: string;\n  readonly hasSelection: boolean;\n  readonly selectionStart: [number, number] | undefined;\n  readonly selectionEnd: [number, number] | undefined;\n\n  readonly onLinuxMouseSelection: IEvent<string>;\n  readonly onRedrawRequest: IEvent<ISelectionRedrawRequestEvent>;\n  readonly onSelectionChange: IEvent<void>;\n\n  disable(): void;\n  enable(): void;\n  reset(): void;\n  setSelection(row: number, col: number, length: number): void;\n  selectAll(): void;\n  selectLines(start: number, end: number): void;\n  clearSelection(): void;\n  isClickInSelection(event: MouseEvent): boolean;\n  selectWordAtCursor(event: MouseEvent): void;\n  shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean;\n  shouldForceSelection(event: MouseEvent): boolean;\n  refresh(isLinuxMouseSelection?: boolean): void;\n  onMouseDown(event: MouseEvent): void;\n}\n\nexport const ISoundService = createDecorator<ISoundService>('SoundService');\nexport interface ISoundService {\n  serviceBrand: any;\n\n  playBellSound(): void;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IAttributeData, IColorRGB } from 'common/Types';\nimport { Attributes, FgFlags, BgFlags } from 'common/buffer/Constants';\n\nexport class AttributeData implements IAttributeData {\n  static toColorRGB(value: number): IColorRGB {\n    return [\n      value >>> Attributes.RED_SHIFT & 255,\n      value >>> Attributes.GREEN_SHIFT & 255,\n      value & 255\n    ];\n  }\n  static fromColorRGB(value: IColorRGB): number {\n    return (value[0] & 255) << Attributes.RED_SHIFT | (value[1] & 255) << Attributes.GREEN_SHIFT | value[2] & 255;\n  }\n\n  public clone(): IAttributeData {\n    const newObj = new AttributeData();\n    newObj.fg = this.fg;\n    newObj.bg = this.bg;\n    return newObj;\n  }\n\n  // data\n  public fg: number = 0;\n  public bg: number = 0;\n\n  // flags\n  public isInverse(): number   { return this.fg & FgFlags.INVERSE; }\n  public isBold(): number      { return this.fg & FgFlags.BOLD; }\n  public isUnderline(): number { return this.fg & FgFlags.UNDERLINE; }\n  public isBlink(): number     { return this.fg & FgFlags.BLINK; }\n  public isInvisible(): number { return this.fg & FgFlags.INVISIBLE; }\n  public isItalic(): number    { return this.bg & BgFlags.ITALIC; }\n  public isDim(): number       { return this.bg & BgFlags.DIM; }\n\n  // color modes\n  public getFgColorMode(): number { return this.fg & Attributes.CM_MASK; }\n  public getBgColorMode(): number { return this.bg & Attributes.CM_MASK; }\n  public isFgRGB(): boolean       { return (this.fg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isBgRGB(): boolean       { return (this.bg & Attributes.CM_MASK) === Attributes.CM_RGB; }\n  public isFgPalette(): boolean   { return (this.fg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.fg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isBgPalette(): boolean   { return (this.bg & Attributes.CM_MASK) === Attributes.CM_P16 || (this.bg & Attributes.CM_MASK) === Attributes.CM_P256; }\n  public isFgDefault(): boolean   { return (this.fg & Attributes.CM_MASK) === 0; }\n  public isBgDefault(): boolean   { return (this.bg & Attributes.CM_MASK) === 0; }\n\n  // colors\n  public getFgColor(): number {\n    switch (this.fg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.fg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.fg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n  public getBgColor(): number {\n    switch (this.bg & Attributes.CM_MASK) {\n      case Attributes.CM_P16:\n      case Attributes.CM_P256:  return this.bg & Attributes.PCOLOR_MASK;\n      case Attributes.CM_RGB:   return this.bg & Attributes.RGB_MASK;\n      default:                  return -1;  // CM_DEFAULT defaults to -1\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Adds a disposable listener to a node in the DOM, returning the disposable.\n * @param type The event type.\n * @param handler The handler for the listener.\n */\nexport function addDisposableDomListener(\n  node: Element | Window | Document,\n  type: string,\n  handler: (e: any) => void,\n  useCapture?: boolean\n): IDisposable {\n  node.addEventListener(type, handler, useCapture);\n  return {\n    dispose: () => {\n      if (!handler) {\n        // Already disposed\n        return;\n      }\n      node.removeEventListener(type, handler, useCapture);\n    }\n  };\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Polyfill - Convert UTF32 codepoint into JS string.\n * Note: The built-in String.fromCodePoint happens to be much slower\n *       due to additional sanity checks. We can avoid them since\n *       we always operate on legal UTF32 (granted by the input decoders)\n *       and use this faster version instead.\n */\nexport function stringFromCodePoint(codePoint: number): string {\n  if (codePoint > 0xFFFF) {\n    codePoint -= 0x10000;\n    return String.fromCharCode((codePoint >> 10) + 0xD800) + String.fromCharCode((codePoint % 0x400) + 0xDC00);\n  }\n  return String.fromCharCode(codePoint);\n}\n\n/**\n * Convert UTF32 char codes into JS string.\n * Basically the same as `stringFromCodePoint` but for multiple codepoints\n * in a loop (which is a lot faster).\n */\nexport function utf32ToString(data: Uint32Array, start: number = 0, end: number = data.length): string {\n  let result = '';\n  for (let i = start; i < end; ++i) {\n    let codepoint = data[i];\n    if (codepoint > 0xFFFF) {\n      // JS strings are encoded as UTF16, thus a non BMP codepoint gets converted into a surrogate pair\n      // conversion rules:\n      //  - subtract 0x10000 from code point, leaving a 20 bit number\n      //  - add high 10 bits to 0xD800  --> first surrogate\n      //  - add low 10 bits to 0xDC00   --> second surrogate\n      codepoint -= 0x10000;\n      result += String.fromCharCode((codepoint >> 10) + 0xD800) + String.fromCharCode((codepoint % 0x400) + 0xDC00);\n    } else {\n      result += String.fromCharCode(codepoint);\n    }\n  }\n  return result;\n}\n\n/**\n * StringToUtf32 - decodes UTF16 sequences into UTF32 codepoints.\n * To keep the decoder in line with JS strings it handles single surrogates as UCS2.\n */\nexport class StringToUtf32 {\n  private _interim: number = 0;\n\n  /**\n   * Clears interim and resets decoder to clean state.\n   */\n  public clear(): void {\n    this._interim = 0;\n  }\n\n  /**\n   * Decode JS string to UTF32 codepoints.\n   * The methods assumes stream input and will store partly transmitted\n   * surrogate pairs and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided input data does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: string, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let startPos = 0;\n\n    // handle leftover surrogate high\n    if (this._interim) {\n      const second = input.charCodeAt(startPos++);\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        target[size++] = (this._interim - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        // illegal codepoint (USC2 handling)\n        target[size++] = this._interim;\n        target[size++] = second;\n      }\n      this._interim = 0;\n    }\n\n    for (let i = startPos; i < length; ++i) {\n      const code = input.charCodeAt(i);\n      // surrogate pair first\n      if (0xD800 <= code && code <= 0xDBFF) {\n        if (++i >= length) {\n          this._interim = code;\n          return size;\n        }\n        const second = input.charCodeAt(i);\n        if (0xDC00 <= second && second <= 0xDFFF) {\n          target[size++] = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n        } else {\n          // illegal codepoint (USC2 handling)\n          target[size++] = code;\n          target[size++] = second;\n        }\n        continue;\n      }\n      target[size++] = code;\n    }\n    return size;\n  }\n}\n\n/**\n * Utf8Decoder - decodes UTF8 byte sequences into UTF32 codepoints.\n */\nexport class Utf8ToUtf32 {\n  public interim: Uint8Array = new Uint8Array(3);\n\n  /**\n   * Clears interim bytes and resets decoder to clean state.\n   */\n  public clear(): void {\n    this.interim.fill(0);\n  }\n\n  /**\n   * Decodes UTF8 byte sequences in `input` to UTF32 codepoints in `target`.\n   * The methods assumes stream input and will store partly transmitted bytes\n   * and decode them with the next data chunk.\n   * Note: The method does no bound checks for target, therefore make sure\n   * the provided data chunk does not exceed the size of `target`.\n   * Returns the number of written codepoints in `target`.\n   */\n  decode(input: Uint8Array, target: Uint32Array): number {\n    const length = input.length;\n\n    if (!length) {\n      return 0;\n    }\n\n    let size = 0;\n    let byte1: number;\n    let byte2: number;\n    let byte3: number;\n    let byte4: number;\n    let codepoint = 0;\n    let startPos = 0;\n\n    // handle leftover bytes\n    if (this.interim[0]) {\n      let discardInterim = false;\n      let cp = this.interim[0];\n      cp &= ((((cp & 0xE0) === 0xC0)) ? 0x1F : (((cp & 0xF0) === 0xE0)) ? 0x0F : 0x07);\n      let pos = 0;\n      let tmp: number;\n      while ((tmp = this.interim[++pos] & 0x3F) && pos < 4) {\n        cp <<= 6;\n        cp |= tmp;\n      }\n      // missing bytes - read ahead from input\n      const type = (((this.interim[0] & 0xE0) === 0xC0)) ? 2 : (((this.interim[0] & 0xF0) === 0xE0)) ? 3 : 4;\n      const missing = type - pos;\n      while (startPos < missing) {\n        if (startPos >= length) {\n          return 0;\n        }\n        tmp = input[startPos++];\n        if ((tmp & 0xC0) !== 0x80) {\n          // wrong continuation, discard interim bytes completely\n          startPos--;\n          discardInterim = true;\n          break;\n        } else {\n          // need to save so we can continue short inputs in next call\n          this.interim[pos++] = tmp;\n          cp <<= 6;\n          cp |= tmp & 0x3F;\n        }\n      }\n      if (!discardInterim) {\n        // final test is type dependent\n        if (type === 2) {\n          if (cp < 0x80) {\n            // wrong starter byte\n            startPos--;\n          } else {\n            target[size++] = cp;\n          }\n        } else if (type === 3) {\n          if (cp < 0x0800 || (cp >= 0xD800 && cp <= 0xDFFF)) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        } else {\n          if (cp < 0x010000 || cp > 0x10FFFF) {\n            // illegal codepoint\n          } else {\n            target[size++] = cp;\n          }\n        }\n      }\n      this.interim.fill(0);\n    }\n\n    // loop through input\n    const fourStop = length - 4;\n    let i = startPos;\n    while (i < length) {\n      /**\n       * ASCII shortcut with loop unrolled to 4 consecutive ASCII chars.\n       * This is a compromise between speed gain for ASCII\n       * and penalty for non ASCII:\n       * For best ASCII performance the char should be stored directly into target,\n       * but even a single attempt to write to target and compare afterwards\n       * penalizes non ASCII really bad (-50%), thus we load the char into byteX first,\n       * which reduces ASCII performance by ~15%.\n       * This trial for ASCII reduces non ASCII performance by ~10% which seems acceptible\n       * compared to the gains.\n       * Note that this optimization only takes place for 4 consecutive ASCII chars,\n       * for any shorter it bails out. Worst case - all 4 bytes being read but\n       * thrown away due to the last being a non ASCII char (-10% performance).\n       */\n      while (i < fourStop\n        && !((byte1 = input[i]) & 0x80)\n        && !((byte2 = input[i + 1]) & 0x80)\n        && !((byte3 = input[i + 2]) & 0x80)\n        && !((byte4 = input[i + 3]) & 0x80))\n      {\n        target[size++] = byte1;\n        target[size++] = byte2;\n        target[size++] = byte3;\n        target[size++] = byte4;\n        i += 4;\n      }\n\n      // reread byte1\n      byte1 = input[i++];\n\n      // 1 byte\n      if (byte1 < 0x80) {\n        target[size++] = byte1;\n\n        // 2 bytes\n      } else if ((byte1 & 0xE0) === 0xC0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x1F) << 6 | (byte2 & 0x3F);\n        if (codepoint < 0x80) {\n          // wrong starter byte\n          i--;\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 3 bytes\n      } else if ((byte1 & 0xF0) === 0xE0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x0F) << 12 | (byte2 & 0x3F) << 6 | (byte3 & 0x3F);\n        if (codepoint < 0x0800 || (codepoint >= 0xD800 && codepoint <= 0xDFFF)) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n\n        // 4 bytes\n      } else if ((byte1 & 0xF8) === 0xF0) {\n        if (i >= length) {\n          this.interim[0] = byte1;\n          return size;\n        }\n        byte2 = input[i++];\n        if ((byte2 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          return size;\n        }\n        byte3 = input[i++];\n        if ((byte3 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        if (i >= length) {\n          this.interim[0] = byte1;\n          this.interim[1] = byte2;\n          this.interim[2] = byte3;\n          return size;\n        }\n        byte4 = input[i++];\n        if ((byte4 & 0xC0) !== 0x80) {\n          // wrong continuation\n          i--;\n          continue;\n        }\n        codepoint = (byte1 & 0x07) << 18 | (byte2 & 0x3F) << 12 | (byte3 & 0x3F) << 6 | (byte4 & 0x3F);\n        if (codepoint < 0x010000 || codepoint > 0x10FFFF) {\n          // illegal codepoint, no i-- here\n          continue;\n        }\n        target[size++] = codepoint;\n      } else {\n        // illegal byte, just skip\n      }\n    }\n    return size;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport const INVERTED_DEFAULT_COLOR = 257;\nexport const DIM_OPACITY = 0.5;\n\nexport const CHAR_ATLAS_CELL_SPACING = 1;\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface INavigator {\n  userAgent: string;\n  language: string;\n  platform: string;\n}\n\n// We're declaring a navigator global here as we expect it in all runtimes (node and browser), but\n// we want this module to live in common.\ndeclare const navigator: INavigator;\n\nconst isNode = (typeof navigator === 'undefined') ? true : false;\nconst userAgent = (isNode) ? 'node' : navigator.userAgent;\nconst platform = (isNode) ? 'node' : navigator.platform;\n\nexport const isFirefox = !!~userAgent.indexOf('Firefox');\nexport const isSafari = /^((?!chrome|android).)*safari/i.test(userAgent);\n\n// Find the users platform. We use this to interpret the meta key\n// and ISO third level shifts.\n// http://stackoverflow.com/q/19877924/577598\nexport const isMac = contains(['Macintosh', 'MacIntel', 'MacPPC', 'Mac68K'], platform);\nexport const isIpad = platform === 'iPad';\nexport const isIphone = platform === 'iPhone';\nexport const isWindows = contains(['Windows', 'Win16', 'Win32', 'WinCE'], platform);\nexport const isLinux = platform.indexOf('Linux') >= 0;\n\n/**\n * Return if the given array contains the given element\n * @param arr The array to search for the given element.\n * @param el The element to look for into the array\n */\nfunction contains(arr: any[], el: any): boolean {\n  return arr.indexOf(el) >= 0;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * C0 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C0 {\n  /** Null (Caret = ^@, C = \\0) */\n  export const NUL = '\\x00';\n  /** Start of Heading (Caret = ^A) */\n  export const SOH = '\\x01';\n  /** Start of Text (Caret = ^B) */\n  export const STX = '\\x02';\n  /** End of Text (Caret = ^C) */\n  export const ETX = '\\x03';\n  /** End of Transmission (Caret = ^D) */\n  export const EOT = '\\x04';\n  /** Enquiry (Caret = ^E) */\n  export const ENQ = '\\x05';\n  /** Acknowledge (Caret = ^F) */\n  export const ACK = '\\x06';\n  /** Bell (Caret = ^G, C = \\a) */\n  export const BEL = '\\x07';\n  /** Backspace (Caret = ^H, C = \\b) */\n  export const BS  = '\\x08';\n  /** Character Tabulation, Horizontal Tabulation (Caret = ^I, C = \\t) */\n  export const HT  = '\\x09';\n  /** Line Feed (Caret = ^J, C = \\n) */\n  export const LF  = '\\x0a';\n  /** Line Tabulation, Vertical Tabulation (Caret = ^K, C = \\v) */\n  export const VT  = '\\x0b';\n  /** Form Feed (Caret = ^L, C = \\f) */\n  export const FF  = '\\x0c';\n  /** Carriage Return (Caret = ^M, C = \\r) */\n  export const CR  = '\\x0d';\n  /** Shift Out (Caret = ^N) */\n  export const SO  = '\\x0e';\n  /** Shift In (Caret = ^O) */\n  export const SI  = '\\x0f';\n  /** Data Link Escape (Caret = ^P) */\n  export const DLE = '\\x10';\n  /** Device Control One (XON) (Caret = ^Q) */\n  export const DC1 = '\\x11';\n  /** Device Control Two (Caret = ^R) */\n  export const DC2 = '\\x12';\n  /** Device Control Three (XOFF) (Caret = ^S) */\n  export const DC3 = '\\x13';\n  /** Device Control Four (Caret = ^T) */\n  export const DC4 = '\\x14';\n  /** Negative Acknowledge (Caret = ^U) */\n  export const NAK = '\\x15';\n  /** Synchronous Idle (Caret = ^V) */\n  export const SYN = '\\x16';\n  /** End of Transmission Block (Caret = ^W) */\n  export const ETB = '\\x17';\n  /** Cancel (Caret = ^X) */\n  export const CAN = '\\x18';\n  /** End of Medium (Caret = ^Y) */\n  export const EM  = '\\x19';\n  /** Substitute (Caret = ^Z) */\n  export const SUB = '\\x1a';\n  /** Escape (Caret = ^[, C = \\e) */\n  export const ESC = '\\x1b';\n  /** File Separator (Caret = ^\\) */\n  export const FS  = '\\x1c';\n  /** Group Separator (Caret = ^]) */\n  export const GS  = '\\x1d';\n  /** Record Separator (Caret = ^^) */\n  export const RS  = '\\x1e';\n  /** Unit Separator (Caret = ^_) */\n  export const US  = '\\x1f';\n  /** Space */\n  export const SP  = '\\x20';\n  /** Delete (Caret = ^?) */\n  export const DEL = '\\x7f';\n}\n\n/**\n * C1 control codes\n * See = https://en.wikipedia.org/wiki/C0_and_C1_control_codes\n */\nexport namespace C1 {\n  /** padding character */\n  export const PAD = '\\x80';\n  /** High Octet Preset */\n  export const HOP = '\\x81';\n  /** Break Permitted Here */\n  export const BPH = '\\x82';\n  /** No Break Here */\n  export const NBH = '\\x83';\n  /** Index */\n  export const IND = '\\x84';\n  /** Next Line */\n  export const NEL = '\\x85';\n  /** Start of Selected Area */\n  export const SSA = '\\x86';\n  /** End of Selected Area */\n  export const ESA = '\\x87';\n  /** Horizontal Tabulation Set */\n  export const HTS = '\\x88';\n  /** Horizontal Tabulation With Justification */\n  export const HTJ = '\\x89';\n  /** Vertical Tabulation Set */\n  export const VTS = '\\x8a';\n  /** Partial Line Down */\n  export const PLD = '\\x8b';\n  /** Partial Line Up */\n  export const PLU = '\\x8c';\n  /** Reverse Index */\n  export const RI = '\\x8d';\n  /** Single-Shift 2 */\n  export const SS2 = '\\x8e';\n  /** Single-Shift 3 */\n  export const SS3 = '\\x8f';\n  /** Device Control String */\n  export const DCS = '\\x90';\n  /** Private Use 1 */\n  export const PU1 = '\\x91';\n  /** Private Use 2 */\n  export const PU2 = '\\x92';\n  /** Set Transmit State */\n  export const STS = '\\x93';\n  /** Destructive backspace, intended to eliminate ambiguity about meaning of BS. */\n  export const CCH = '\\x94';\n  /** Message Waiting */\n  export const MW = '\\x95';\n  /** Start of Protected Area */\n  export const SPA = '\\x96';\n  /** End of Protected Area */\n  export const EPA = '\\x97';\n  /** Start of String */\n  export const SOS = '\\x98';\n  /** Single Graphic Character Introducer */\n  export const SGCI = '\\x99';\n  /** Single Character Introducer */\n  export const SCI = '\\x9a';\n  /** Control Sequence Introducer */\n  export const CSI = '\\x9b';\n  /** String Terminator */\n  export const ST = '\\x9c';\n  /** Operating System Command */\n  export const OSC = '\\x9d';\n  /** Privacy Message */\n  export const PM = '\\x9e';\n  /** Application Program Command */\n  export const APC = '\\x9f';\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions, IRenderLayer } from 'browser/renderer/Types';\nimport { ICellData } from 'common/Types';\nimport { DEFAULT_COLOR, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { acquireCharAtlas } from 'browser/renderer/atlas/CharAtlasCache';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\nexport abstract class BaseRenderLayer implements IRenderLayer {\n  private _canvas: HTMLCanvasElement;\n  protected _ctx!: CanvasRenderingContext2D;\n  private _scaledCharWidth: number = 0;\n  private _scaledCharHeight: number = 0;\n  private _scaledCellWidth: number = 0;\n  private _scaledCellHeight: number = 0;\n  private _scaledCharLeft: number = 0;\n  private _scaledCharTop: number = 0;\n\n  protected _charAtlas: BaseCharAtlas | undefined;\n\n  /**\n   * An object that's reused when drawing glyphs in order to reduce GC.\n   */\n  private _currentGlyphIdentifier: IGlyphIdentifier = {\n    chars: '',\n    code: 0,\n    bg: 0,\n    fg: 0,\n    bold: false,\n    dim: false,\n    italic: false\n  };\n\n  constructor(\n    private _container: HTMLElement,\n    id: string,\n    zIndex: number,\n    private _alpha: boolean,\n    protected _colors: IColorSet,\n    private _rendererId: number,\n    protected readonly _bufferService: IBufferService,\n    protected readonly _optionsService: IOptionsService\n  ) {\n    this._canvas = document.createElement('canvas');\n    this._canvas.classList.add(`xterm-${id}-layer`);\n    this._canvas.style.zIndex = zIndex.toString();\n    this._initCanvas();\n    this._container.appendChild(this._canvas);\n  }\n\n  public dispose(): void {\n    this._container.removeChild(this._canvas);\n    if (this._charAtlas) {\n      this._charAtlas.dispose();\n    }\n  }\n\n  private _initCanvas(): void {\n    this._ctx = throwIfFalsy(this._canvas.getContext('2d', {alpha: this._alpha}));\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n  }\n\n  public onOptionsChanged(): void {}\n  public onBlur(): void {}\n  public onFocus(): void {}\n  public onCursorMove(): void {}\n  public onGridChanged(startRow: number, endRow: number): void {}\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {}\n\n  public setColors(colorSet: IColorSet): void {\n    this._refreshCharAtlas(colorSet);\n  }\n\n  protected _setTransparency(alpha: boolean): void {\n    // Do nothing when alpha doesn't change\n    if (alpha === this._alpha) {\n      return;\n    }\n\n    // Create new canvas and replace old one\n    const oldCanvas = this._canvas;\n    this._alpha = alpha;\n    // Cloning preserves properties\n    this._canvas = <HTMLCanvasElement>this._canvas.cloneNode();\n    this._initCanvas();\n    this._container.replaceChild(this._canvas, oldCanvas);\n\n    // Regenerate char atlas and force a full redraw\n    this._refreshCharAtlas(this._colors);\n    this.onGridChanged(0, this._bufferService.rows - 1);\n  }\n\n  /**\n   * Refreshes the char atlas, aquiring a new one if necessary.\n   * @param colorSet The color set to use for the char atlas.\n   */\n  private _refreshCharAtlas(colorSet: IColorSet): void {\n    if (this._scaledCharWidth <= 0 && this._scaledCharHeight <= 0) {\n      return;\n    }\n    this._charAtlas = acquireCharAtlas(this._optionsService.options, this._rendererId, colorSet, this._scaledCharWidth, this._scaledCharHeight);\n    this._charAtlas.warmUp();\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    this._scaledCellWidth = dim.scaledCellWidth;\n    this._scaledCellHeight = dim.scaledCellHeight;\n    this._scaledCharWidth = dim.scaledCharWidth;\n    this._scaledCharHeight = dim.scaledCharHeight;\n    this._scaledCharLeft = dim.scaledCharLeft;\n    this._scaledCharTop = dim.scaledCharTop;\n    this._canvas.width = dim.scaledCanvasWidth;\n    this._canvas.height = dim.scaledCanvasHeight;\n    this._canvas.style.width = `${dim.canvasWidth}px`;\n    this._canvas.style.height = `${dim.canvasHeight}px`;\n\n    // Draw the background if this is an opaque layer\n    if (!this._alpha) {\n      this._clearAll();\n    }\n\n    this._refreshCharAtlas(this._colors);\n  }\n\n  public abstract reset(): void;\n\n  /**\n   * Fills 1+ cells completely. This uses the existing fillStyle on the context.\n   * @param x The column to start at.\n   * @param y The row to start at\n   * @param width The number of columns to fill.\n   * @param height The number of rows to fill.\n   */\n  protected _fillCells(x: number, y: number, width: number, height: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        width * this._scaledCellWidth,\n        height * this._scaledCellHeight);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the bottom of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillBottomLineAtCells(x: number, y: number, width: number = 1): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        (y + 1) * this._scaledCellHeight - window.devicePixelRatio - 1 /* Ensure it's drawn within the cell */,\n        width * this._scaledCellWidth,\n        window.devicePixelRatio);\n  }\n\n  /**\n   * Fills a 1px line (2px on HDPI) at the left of the cell. This uses the\n   * existing fillStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _fillLeftLineAtCell(x: number, y: number): void {\n    this._ctx.fillRect(\n        x * this._scaledCellWidth,\n        y * this._scaledCellHeight,\n        window.devicePixelRatio,\n        this._scaledCellHeight);\n  }\n\n  /**\n   * Strokes a 1px rectangle (2px on HDPI) around a cell. This uses the existing\n   * strokeStyle on the context.\n   * @param x The column to fill.\n   * @param y The row to fill.\n   */\n  protected _strokeRectAtCell(x: number, y: number, width: number, height: number): void {\n    this._ctx.lineWidth = window.devicePixelRatio;\n    this._ctx.strokeRect(\n        x * this._scaledCellWidth + window.devicePixelRatio / 2,\n        y * this._scaledCellHeight + (window.devicePixelRatio / 2),\n        width * this._scaledCellWidth - window.devicePixelRatio,\n        (height * this._scaledCellHeight) - window.devicePixelRatio);\n  }\n\n  /**\n   * Clears the entire canvas.\n   */\n  protected _clearAll(): void {\n    if (this._alpha) {\n      this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    }\n  }\n\n  /**\n   * Clears 1+ cells completely.\n   * @param x The column to start at.\n   * @param y The row to start at.\n   * @param width The number of columns to clear.\n   * @param height The number of rows to clear.\n   */\n  protected _clearCells(x: number, y: number, width: number, height: number): void {\n    if (this._alpha) {\n      this._ctx.clearRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    } else {\n      this._ctx.fillStyle = this._colors.background.css;\n      this._ctx.fillRect(\n          x * this._scaledCellWidth,\n          y * this._scaledCellHeight,\n          width * this._scaledCellWidth,\n          height * this._scaledCellHeight);\n    }\n  }\n\n  /**\n   * Draws a truecolor character at the cell. The character will be clipped to\n   * ensure that it fits with the cell, including the cell to the right if it's\n   * a wide character. This uses the existing fillStyle on the context.\n   * @param cell The cell data for the character to draw.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param color The color of the character.\n   */\n  protected _fillCharTrueColor(cell: CellData, x: number, y: number): void {\n    this._ctx.font = this._getFont(false, false);\n    this._ctx.textBaseline = 'middle';\n    this._clipRow(y);\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n  }\n\n  /**\n   * Draws one or more characters at a cell. If possible this will draw using\n   * the character atlas to reduce draw time.\n   * @param chars The character or characters.\n   * @param code The character code.\n   * @param width The width of the characters.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param bg The background color, in the format stored within the attributes.\n   * This is used to validate whether a cached image can be used.\n   * @param bold Whether the text is bold.\n   */\n  protected _drawChars(cell: ICellData, x: number, y: number): void {\n\n    // skip cache right away if we draw in RGB\n    // Note: to avoid bad runtime JoinedCellData will be skipped\n    //       in the cache handler itself (atlasDidDraw == false) and\n    //       fall through to uncached later down below\n    if (cell.isFgRGB() || cell.isBgRGB()) {\n      this._drawUncachedChars(cell, x, y);\n      return;\n    }\n\n    let fg;\n    let bg;\n    if (cell.isInverse()) {\n      fg = (cell.isBgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getBgColor();\n      bg = (cell.isFgDefault()) ? INVERTED_DEFAULT_COLOR : cell.getFgColor();\n    } else {\n      bg = (cell.isBgDefault()) ? DEFAULT_COLOR : cell.getBgColor();\n      fg = (cell.isFgDefault()) ? DEFAULT_COLOR : cell.getFgColor();\n    }\n\n    const drawInBrightColor = this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8 && fg !== INVERTED_DEFAULT_COLOR;\n\n    fg += drawInBrightColor ? 8 : 0;\n    this._currentGlyphIdentifier.chars = cell.getChars() || WHITESPACE_CELL_CHAR;\n    this._currentGlyphIdentifier.code = cell.getCode() || WHITESPACE_CELL_CODE;\n    this._currentGlyphIdentifier.bg = bg;\n    this._currentGlyphIdentifier.fg = fg;\n    this._currentGlyphIdentifier.bold = !!cell.isBold();\n    this._currentGlyphIdentifier.dim = !!cell.isDim();\n    this._currentGlyphIdentifier.italic = !!cell.isItalic();\n    const atlasDidDraw = this._charAtlas && this._charAtlas.draw(\n      this._ctx,\n      this._currentGlyphIdentifier,\n      x * this._scaledCellWidth + this._scaledCharLeft,\n      y * this._scaledCellHeight + this._scaledCharTop\n    );\n\n    if (!atlasDidDraw) {\n      this._drawUncachedChars(cell, x, y);\n    }\n  }\n\n  /**\n   * Draws one or more characters at one or more cells. The character(s) will be\n   * clipped to ensure that they fit with the cell(s), including the cell to the\n   * right if the last character is a wide character.\n   * @param chars The character.\n   * @param width The width of the character.\n   * @param fg The foreground color, in the format stored within the attributes.\n   * @param x The column to draw at.\n   * @param y The row to draw at.\n   */\n  private _drawUncachedChars(cell: ICellData, x: number, y: number): void {\n    this._ctx.save();\n    this._ctx.font = this._getFont(!!cell.isBold(), !!cell.isItalic());\n    this._ctx.textBaseline = 'middle';\n\n    if (cell.isInverse()) {\n      if (cell.isBgDefault()) {\n        this._ctx.fillStyle = this._colors.background.css;\n      } else if (cell.isBgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else {\n        this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n    } else {\n      if (cell.isFgDefault()) {\n        this._ctx.fillStyle = this._colors.foreground.css;\n      } else if (cell.isFgRGB()) {\n        this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n      } else {\n        let fg = cell.getFgColor();\n        if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n          fg += 8;\n        }\n        this._ctx.fillStyle = this._colors.ansi[fg].css;\n      }\n    }\n\n    this._clipRow(y);\n\n    // Apply alpha to dim the character\n    if (cell.isDim()) {\n      this._ctx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._ctx.fillText(\n        cell.getChars(),\n        x * this._scaledCellWidth + this._scaledCharLeft,\n        y * this._scaledCellHeight + this._scaledCharTop + this._scaledCharHeight / 2);\n    this._ctx.restore();\n  }\n\n  /**\n   * Clips a row to ensure no pixels will be drawn outside the cells in the row.\n   * @param y The row to clip.\n   */\n  private _clipRow(y: number): void {\n    this._ctx.beginPath();\n    this._ctx.rect(\n        0,\n        y * this._scaledCellHeight,\n        this._bufferService.cols * this._scaledCellWidth,\n        this._scaledCellHeight);\n    this._ctx.clip();\n  }\n\n  /**\n   * Gets the current font.\n   * @param isBold If we should use the bold fontWeight.\n   */\n  protected _getFont(isBold: boolean, isItalic: boolean): string {\n    const fontWeight = isBold ? this._optionsService.options.fontWeightBold : this._optionsService.options.fontWeight;\n    const fontStyle = isItalic ? 'italic' : '';\n\n    return `${fontStyle} ${fontWeight} ${this._optionsService.options.fontSize * window.devicePixelRatio}px ${this._optionsService.options.fontFamily}`;\n  }\n}\n\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IServiceIdentifier } from 'common/services/Services';\n\nconst DI_TARGET = 'di$target';\nconst DI_DEPENDENCIES = 'di$dependencies';\n\nexport const serviceRegistry: Map<string, IServiceIdentifier<any>> = new Map();\n\nexport function getServiceDependencies(ctor: any): { id: IServiceIdentifier<any>, index: number, optional: boolean }[] {\n  return ctor[DI_DEPENDENCIES] || [];\n}\n\nexport function createDecorator<T>(id: string): IServiceIdentifier<T> {\n  if (serviceRegistry.has(id)) {\n    return serviceRegistry.get(id)!;\n  }\n\n  const decorator = <any>function (target: Function, key: string, index: number): any {\n    if (arguments.length !== 3) {\n      throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n    }\n\n    storeServiceDependency(decorator, target, index);\n  };\n\n  decorator.toString = () => id;\n\n  serviceRegistry.set(id, decorator);\n  return decorator;\n}\n\nfunction storeServiceDependency(id: Function, target: Function, index: number): void {\n  if ((target as any)[DI_TARGET] === target) {\n    (target as any)[DI_DEPENDENCIES].push({ id, index });\n  } else {\n    (target as any)[DI_DEPENDENCIES] = [{ id, index }];\n    (target as any)[DI_TARGET] = target;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport type TypedArray = Uint8Array | Uint16Array | Uint32Array | Uint8ClampedArray\n  | Int8Array | Int16Array | Int32Array\n  | Float32Array | Float64Array;\n\n\n/**\n * polyfill for TypedArray.fill\n * This is needed to support .fill in all safari versions and IE 11.\n */\nexport function fill<T extends TypedArray>(array: T, value: number, start?: number, end?: number): T {\n  // all modern engines that support .fill\n  if (array.fill) {\n    return array.fill(value, start, end) as T;\n  }\n  return fillFallback(array, value, start, end);\n}\n\nexport function fillFallback<T extends TypedArray>(array: T, value: number, start: number = 0, end: number = array.length): T {\n  // safari and IE 11\n  // since IE 11 does not support Array.prototype.fill either\n  // we cannot use the suggested polyfill from MDN\n  // instead we simply fall back to looping\n  if (start >= array.length) {\n    return array;\n  }\n  start = (array.length + start) % array.length;\n  if (end >= array.length) {\n    end = array.length;\n  } else {\n    end = (array.length + end) % array.length;\n  }\n  for (let i = start; i < end; ++i) {\n    array[i] = value;\n  }\n  return array;\n}\n\n/**\n * Concat two typed arrays `a` and `b`.\n * Returns a new typed array.\n */\nexport function concat<T extends TypedArray>(a: T, b: T): T {\n  const result = new (a.constructor as any)(a.length + b.length);\n  result.set(a);\n  result.set(b, a.length);\n  return result;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CharData, IBufferLine, ICellData } from 'common/Types';\nimport { stringFromCodePoint } from 'common/input/TextDecoder';\nimport { CHAR_DATA_CHAR_INDEX, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_ATTR_INDEX, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\n\n/**\n * buffer memory layout:\n *\n *   |             uint32_t             |        uint32_t         |        uint32_t         |\n *   |             `content`            |          `FG`           |          `BG`           |\n *   | wcwidth(2) comb(1) codepoint(21) | flags(8) R(8) G(8) B(8) | flags(8) R(8) G(8) B(8) |\n */\n\n\n/** typed array slots taken by one cell */\nconst CELL_SIZE = 3;\n\n/**\n * Cell member indices.\n *\n * Direct access:\n *    `content = data[column * CELL_SIZE + Cell.CONTENT];`\n *    `fg = data[column * CELL_SIZE + Cell.FG];`\n *    `bg = data[column * CELL_SIZE + Cell.BG];`\n */\nconst enum Cell {\n  CONTENT = 0,\n  FG = 1, // currently simply holds all known attrs\n  BG = 2  // currently unused\n}\n\nexport const DEFAULT_ATTR_DATA = Object.freeze(new AttributeData());\n\n/**\n * Typed array based bufferline implementation.\n *\n * There are 2 ways to insert data into the cell buffer:\n * - `setCellFromCodepoint` + `addCodepointToCell`\n *   Use these for data that is already UTF32.\n *   Used during normal input in `InputHandler` for faster buffer access.\n * - `setCell`\n *   This method takes a CellData object and stores the data in the buffer.\n *   Use `CellData.fromCharData` to create the CellData object (e.g. from JS string).\n *\n * To retrieve data from the buffer use either one of the primitive methods\n * (if only one particular value is needed) or `loadCell`. For `loadCell` in a loop\n * memory allocs / GC pressure can be greatly reduced by reusing the CellData object.\n */\nexport class BufferLine implements IBufferLine {\n  protected _data: Uint32Array;\n  protected _combined: {[index: number]: string} = {};\n  public length: number;\n\n  constructor(cols: number, fillCellData?: ICellData, public isWrapped: boolean = false) {\n    this._data = new Uint32Array(cols * CELL_SIZE);\n    const cell = fillCellData || CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n    for (let i = 0; i < cols; ++i) {\n      this.setCell(i, cell);\n    }\n    this.length = cols;\n  }\n\n  /**\n   * Get cell data CharData.\n   * @deprecated\n   */\n  public get(index: number): CharData {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    const cp = content & Content.CODEPOINT_MASK;\n    return [\n      this._data[index * CELL_SIZE + Cell.FG],\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index]\n        : (cp) ? stringFromCodePoint(cp) : '',\n      content >> Content.WIDTH_SHIFT,\n      (content & Content.IS_COMBINED_MASK)\n        ? this._combined[index].charCodeAt(this._combined[index].length - 1)\n        : cp\n    ];\n  }\n\n  /**\n   * Set cell data from CharData.\n   * @deprecated\n   */\n  public set(index: number, value: CharData): void {\n    this._data[index * CELL_SIZE + Cell.FG] = value[CHAR_DATA_ATTR_INDEX];\n    if (value[CHAR_DATA_CHAR_INDEX].length > 1) {\n      this._combined[index] = value[1];\n      this._data[index * CELL_SIZE + Cell.CONTENT] = index | Content.IS_COMBINED_MASK | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    } else {\n      this._data[index * CELL_SIZE + Cell.CONTENT] = value[CHAR_DATA_CHAR_INDEX].charCodeAt(0) | (value[CHAR_DATA_WIDTH_INDEX] << Content.WIDTH_SHIFT);\n    }\n  }\n\n  /**\n   * primitive getters\n   * use these when only one value is needed, otherwise use `loadCell`\n   */\n  public getWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT;\n  }\n\n  /** Test whether content has width. */\n  public hasWidth(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.WIDTH_MASK;\n  }\n\n  /** Get FG cell component. */\n  public getFg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.FG];\n  }\n\n  /** Get BG cell component. */\n  public getBg(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.BG];\n  }\n\n  /**\n   * Test whether contains any chars.\n   * Basically an empty has no content, but other cells might differ in FG/BG\n   * from real empty cells.\n   * */\n  public hasContent(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK;\n  }\n\n  /**\n   * Get codepoint of the cell.\n   * To be in line with `code` in CharData this either returns\n   * a single UTF32 codepoint or the last codepoint of a combined string.\n   */\n  public getCodePoint(index: number): number {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index].charCodeAt(this._combined[index].length - 1);\n    }\n    return content & Content.CODEPOINT_MASK;\n  }\n\n  /** Test whether the cell contains a combined string. */\n  public isCombined(index: number): number {\n    return this._data[index * CELL_SIZE + Cell.CONTENT] & Content.IS_COMBINED_MASK;\n  }\n\n  /** Returns the string content of the cell. */\n  public getString(index: number): string {\n    const content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      return this._combined[index];\n    }\n    if (content & Content.CODEPOINT_MASK) {\n      return stringFromCodePoint(content & Content.CODEPOINT_MASK);\n    }\n    // return empty string for empty cells\n    return '';\n  }\n\n  /**\n   * Load data at `index` into `cell`. This is used to access cells in a way that's more friendly\n   * to GC as it significantly reduced the amount of new objects/references needed.\n   */\n  public loadCell(index: number, cell: ICellData): ICellData {\n    const startIndex = index * CELL_SIZE;\n    cell.content = this._data[startIndex + Cell.CONTENT];\n    cell.fg = this._data[startIndex + Cell.FG];\n    cell.bg = this._data[startIndex + Cell.BG];\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      cell.combinedData = this._combined[index];\n    }\n    return cell;\n  }\n\n  /**\n   * Set data at `index` to `cell`.\n   */\n  public setCell(index: number, cell: ICellData): void {\n    if (cell.content & Content.IS_COMBINED_MASK) {\n      this._combined[index] = cell.combinedData;\n    }\n    this._data[index * CELL_SIZE + Cell.CONTENT] = cell.content;\n    this._data[index * CELL_SIZE + Cell.FG] = cell.fg;\n    this._data[index * CELL_SIZE + Cell.BG] = cell.bg;\n  }\n\n  /**\n   * Set cell data from input handler.\n   * Since the input handler see the incoming chars as UTF32 codepoints,\n   * it gets an optimized access method.\n   */\n  public setCellFromCodePoint(index: number, codePoint: number, width: number, fg: number, bg: number): void {\n    this._data[index * CELL_SIZE + Cell.CONTENT] = codePoint | (width << Content.WIDTH_SHIFT);\n    this._data[index * CELL_SIZE + Cell.FG] = fg;\n    this._data[index * CELL_SIZE + Cell.BG] = bg;\n  }\n\n  /**\n   * Add a codepoint to a cell from input handler.\n   * During input stage combining chars with a width of 0 follow and stack\n   * onto a leading char. Since we already set the attrs\n   * by the previous `setDataFromCodePoint` call, we can omit it here.\n   */\n  public addCodepointToCell(index: number, codePoint: number): void {\n    let content = this._data[index * CELL_SIZE + Cell.CONTENT];\n    if (content & Content.IS_COMBINED_MASK) {\n      // we already have a combined string, simply add\n      this._combined[index] += stringFromCodePoint(codePoint);\n    } else {\n      if (content & Content.CODEPOINT_MASK) {\n        // normal case for combining chars:\n        //  - move current leading char + new one into combined string\n        //  - set combined flag\n        this._combined[index] = stringFromCodePoint(content & Content.CODEPOINT_MASK) + stringFromCodePoint(codePoint);\n        content &= ~Content.CODEPOINT_MASK; // set codepoint in buffer to 0\n        content |= Content.IS_COMBINED_MASK;\n      } else {\n        // should not happen - we actually have no data in the cell yet\n        // simply set the data in the cell buffer with a width of 1\n        content = codePoint | (1 << Content.WIDTH_SHIFT);\n      }\n      this._data[index * CELL_SIZE + Cell.CONTENT] = content;\n    }\n  }\n\n  public insertCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = this.length - pos - n - 1; i >= 0; --i) {\n        this.setCell(pos + n + i, this.loadCell(pos + i, cell));\n      }\n      for (let i = 0; i < n; ++i) {\n        this.setCell(pos + i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public deleteCells(pos: number, n: number, fillCellData: ICellData): void {\n    pos %= this.length;\n    if (n < this.length - pos) {\n      const cell = new CellData();\n      for (let i = 0; i < this.length - pos - n; ++i) {\n        this.setCell(pos + i, this.loadCell(pos + n + i, cell));\n      }\n      for (let i = this.length - n; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      for (let i = pos; i < this.length; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    }\n  }\n\n  public replaceCells(start: number, end: number, fillCellData: ICellData): void {\n    while (start < end  && start < this.length) {\n      this.setCell(start++, fillCellData);\n    }\n  }\n\n  public resize(cols: number, fillCellData: ICellData): void {\n    if (cols === this.length) {\n      return;\n    }\n    if (cols > this.length) {\n      const data = new Uint32Array(cols * CELL_SIZE);\n      if (this.length) {\n        if (cols * CELL_SIZE < this._data.length) {\n          data.set(this._data.subarray(0, cols * CELL_SIZE));\n        } else {\n          data.set(this._data);\n        }\n      }\n      this._data = data;\n      for (let i = this.length; i < cols; ++i) {\n        this.setCell(i, fillCellData);\n      }\n    } else {\n      if (cols) {\n        const data = new Uint32Array(cols * CELL_SIZE);\n        data.set(this._data.subarray(0, cols * CELL_SIZE));\n        this._data = data;\n        // Remove any cut off combined data\n        const keys = Object.keys(this._combined);\n        for (let i = 0; i < keys.length; i++) {\n          const key = parseInt(keys[i], 10);\n          if (key >= cols) {\n            delete this._combined[key];\n          }\n        }\n      } else {\n        this._data = new Uint32Array(0);\n        this._combined = {};\n      }\n    }\n    this.length = cols;\n  }\n\n  /** fill a line with fillCharData */\n  public fill(fillCellData: ICellData): void {\n    this._combined = {};\n    for (let i = 0; i < this.length; ++i) {\n      this.setCell(i, fillCellData);\n    }\n  }\n\n  /** alter to a full copy of line  */\n  public copyFrom(line: BufferLine): void {\n    if (this.length !== line.length) {\n      this._data = new Uint32Array(line._data);\n    } else {\n      // use high speed copy if lengths are equal\n      this._data.set(line._data);\n    }\n    this.length = line.length;\n    this._combined = {};\n    for (const el in line._combined) {\n      this._combined[el] = line._combined[el];\n    }\n    this.isWrapped = line.isWrapped;\n  }\n\n  /** create a new clone */\n  public clone(): IBufferLine {\n    const newLine = new BufferLine(0);\n    newLine._data = new Uint32Array(this._data);\n    newLine.length = this.length;\n    for (const el in this._combined) {\n      newLine._combined[el] = this._combined[el];\n    }\n    newLine.isWrapped = this.isWrapped;\n    return newLine;\n  }\n\n  public getTrimmedLength(): number {\n    for (let i = this.length - 1; i >= 0; --i) {\n      if ((this._data[i * CELL_SIZE + Cell.CONTENT] & Content.HAS_CONTENT_MASK)) {\n        return i + (this._data[i * CELL_SIZE + Cell.CONTENT] >> Content.WIDTH_SHIFT);\n      }\n    }\n    return 0;\n  }\n\n  public copyCellsFrom(src: BufferLine, srcCol: number, destCol: number, length: number, applyInReverse: boolean): void {\n    const srcData = src._data;\n    if (applyInReverse) {\n      for (let cell = length - 1; cell >= 0; cell--) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    } else {\n      for (let cell = 0; cell < length; cell++) {\n        for (let i = 0; i < CELL_SIZE; i++) {\n          this._data[(destCol + cell) * CELL_SIZE + i] = srcData[(srcCol + cell) * CELL_SIZE + i];\n        }\n      }\n    }\n\n    // Move any combined data over as needed\n    const srcCombinedKeys = Object.keys(src._combined);\n    for (let i = 0; i < srcCombinedKeys.length; i++) {\n      const key = parseInt(srcCombinedKeys[i], 10);\n      if (key >= srcCol) {\n        this._combined[key - srcCol + destCol] = src._combined[key];\n      }\n    }\n  }\n\n  public translateToString(trimRight: boolean = false, startCol: number = 0, endCol: number = this.length): string {\n    if (trimRight) {\n      endCol = Math.min(endCol, this.getTrimmedLength());\n    }\n    let result = '';\n    while (startCol < endCol) {\n      const content = this._data[startCol * CELL_SIZE + Cell.CONTENT];\n      const cp = content & Content.CODEPOINT_MASK;\n      result += (content & Content.IS_COMBINED_MASK) ? this._combined[startCol] : (cp) ? stringFromCodePoint(cp) : WHITESPACE_CELL_CHAR;\n      startCol += (content >> Content.WIDTH_SHIFT) || 1; // always advance by 1\n    }\n    return result;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport let promptLabel = 'Terminal input';\nexport let tooMuchOutput = 'Too much output to announce, navigate to rows manually to read';\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharset } from 'common/Types';\n\n/**\n * The character sets supported by the terminal. These enable several languages\n * to be represented within the terminal with only 8-bit encoding. See ISO 2022\n * for a discussion on character sets. Only VT100 character sets are supported.\n */\nexport const CHARSETS: { [key: string]: ICharset | null } = {};\n\n/**\n * The default character set, US.\n */\nexport const DEFAULT_CHARSET: ICharset | null = CHARSETS['B'];\n\n/**\n * DEC Special Character and Line Drawing Set.\n * Reference: http://vt100.net/docs/vt102-ug/table5-13.html\n * A lot of curses apps use this if they see TERM=xterm.\n * testing: echo -e '\\e(0a\\e(B'\n * The xterm output sometimes seems to conflict with the\n * reference above. xterm seems in line with the reference\n * when running vttest however.\n * The table below now uses xterm's output from vttest.\n */\nCHARSETS['0'] = {\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\n/**\n * British character set\n * ESC (A\n * Reference: http://vt100.net/docs/vt220-rm/table2-5.html\n */\nCHARSETS['A'] = {\n  '#': '£'\n};\n\n/**\n * United States character set\n * ESC (B\n */\nCHARSETS['B'] = null;\n\n/**\n * Dutch character set\n * ESC (4\n * Reference: http://vt100.net/docs/vt220-rm/table2-6.html\n */\nCHARSETS['4'] = {\n  '#': '£',\n  '@': '¾',\n  '[': 'ij',\n  '\\\\': '½',\n  ']': '|',\n  '{': '¨',\n  '|': 'f',\n  '}': '¼',\n  '~': '´'\n};\n\n/**\n * Finnish character set\n * ESC (C or ESC (5\n * Reference: http://vt100.net/docs/vt220-rm/table2-7.html\n */\nCHARSETS['C'] =\nCHARSETS['5'] = {\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * French character set\n * ESC (R\n * Reference: http://vt100.net/docs/vt220-rm/table2-8.html\n */\nCHARSETS['R'] = {\n  '#': '£',\n  '@': 'à',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': '§',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': '¨'\n};\n\n/**\n * French Canadian character set\n * ESC (Q\n * Reference: http://vt100.net/docs/vt220-rm/table2-9.html\n */\nCHARSETS['Q'] = {\n  '@': 'à',\n  '[': 'â',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '`': 'ô',\n  '{': 'é',\n  '|': 'ù',\n  '}': 'è',\n  '~': 'û'\n};\n\n/**\n * German character set\n * ESC (K\n * Reference: http://vt100.net/docs/vt220-rm/table2-10.html\n */\nCHARSETS['K'] = {\n  '@': '§',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Ü',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'ß'\n};\n\n/**\n * Italian character set\n * ESC (Y\n * Reference: http://vt100.net/docs/vt220-rm/table2-11.html\n */\nCHARSETS['Y'] = {\n  '#': '£',\n  '@': '§',\n  '[': '°',\n  '\\\\': 'ç',\n  ']': 'é',\n  '`': 'ù',\n  '{': 'à',\n  '|': 'ò',\n  '}': 'è',\n  '~': 'ì'\n};\n\n/**\n * Norwegian/Danish character set\n * ESC (E or ESC (6\n * Reference: http://vt100.net/docs/vt220-rm/table2-12.html\n */\nCHARSETS['E'] =\nCHARSETS['6'] = {\n  '@': 'Ä',\n  '[': 'Æ',\n  '\\\\': 'Ø',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'ä',\n  '{': 'æ',\n  '|': 'ø',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Spanish character set\n * ESC (Z\n * Reference: http://vt100.net/docs/vt220-rm/table2-13.html\n */\nCHARSETS['Z'] = {\n  '#': '£',\n  '@': '§',\n  '[': '¡',\n  '\\\\': 'Ñ',\n  ']': '¿',\n  '{': '°',\n  '|': 'ñ',\n  '}': 'ç'\n};\n\n/**\n * Swedish character set\n * ESC (H or ESC (7\n * Reference: http://vt100.net/docs/vt220-rm/table2-14.html\n */\nCHARSETS['H'] =\nCHARSETS['7'] = {\n  '@': 'É',\n  '[': 'Ä',\n  '\\\\': 'Ö',\n  ']': 'Å',\n  '^': 'Ü',\n  '`': 'é',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'å',\n  '~': 'ü'\n};\n\n/**\n * Swiss character set\n * ESC (=\n * Reference: http://vt100.net/docs/vt220-rm/table2-15.html\n */\nCHARSETS['='] = {\n  '#': 'ù',\n  '@': 'à',\n  '[': 'é',\n  '\\\\': 'ç',\n  ']': 'ê',\n  '^': 'î',\n  '_': 'è',\n  '`': 'ô',\n  '{': 'ä',\n  '|': 'ö',\n  '}': 'ü',\n  '~': 'û'\n};\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { fill } from 'common/TypedArrayUtils';\n\nexport const wcwidth = (function(opts: {nul: number, control: number}): (ucs: number) => number {\n  // extracted from https://www.cl.cam.ac.uk/%7Emgk25/ucs/wcwidth.c\n  // combining characters\n  const COMBINING_BMP = [\n    [0x0300, 0x036F], [0x0483, 0x0486], [0x0488, 0x0489],\n    [0x0591, 0x05BD], [0x05BF, 0x05BF], [0x05C1, 0x05C2],\n    [0x05C4, 0x05C5], [0x05C7, 0x05C7], [0x0600, 0x0603],\n    [0x0610, 0x0615], [0x064B, 0x065E], [0x0670, 0x0670],\n    [0x06D6, 0x06E4], [0x06E7, 0x06E8], [0x06EA, 0x06ED],\n    [0x070F, 0x070F], [0x0711, 0x0711], [0x0730, 0x074A],\n    [0x07A6, 0x07B0], [0x07EB, 0x07F3], [0x0901, 0x0902],\n    [0x093C, 0x093C], [0x0941, 0x0948], [0x094D, 0x094D],\n    [0x0951, 0x0954], [0x0962, 0x0963], [0x0981, 0x0981],\n    [0x09BC, 0x09BC], [0x09C1, 0x09C4], [0x09CD, 0x09CD],\n    [0x09E2, 0x09E3], [0x0A01, 0x0A02], [0x0A3C, 0x0A3C],\n    [0x0A41, 0x0A42], [0x0A47, 0x0A48], [0x0A4B, 0x0A4D],\n    [0x0A70, 0x0A71], [0x0A81, 0x0A82], [0x0ABC, 0x0ABC],\n    [0x0AC1, 0x0AC5], [0x0AC7, 0x0AC8], [0x0ACD, 0x0ACD],\n    [0x0AE2, 0x0AE3], [0x0B01, 0x0B01], [0x0B3C, 0x0B3C],\n    [0x0B3F, 0x0B3F], [0x0B41, 0x0B43], [0x0B4D, 0x0B4D],\n    [0x0B56, 0x0B56], [0x0B82, 0x0B82], [0x0BC0, 0x0BC0],\n    [0x0BCD, 0x0BCD], [0x0C3E, 0x0C40], [0x0C46, 0x0C48],\n    [0x0C4A, 0x0C4D], [0x0C55, 0x0C56], [0x0CBC, 0x0CBC],\n    [0x0CBF, 0x0CBF], [0x0CC6, 0x0CC6], [0x0CCC, 0x0CCD],\n    [0x0CE2, 0x0CE3], [0x0D41, 0x0D43], [0x0D4D, 0x0D4D],\n    [0x0DCA, 0x0DCA], [0x0DD2, 0x0DD4], [0x0DD6, 0x0DD6],\n    [0x0E31, 0x0E31], [0x0E34, 0x0E3A], [0x0E47, 0x0E4E],\n    [0x0EB1, 0x0EB1], [0x0EB4, 0x0EB9], [0x0EBB, 0x0EBC],\n    [0x0EC8, 0x0ECD], [0x0F18, 0x0F19], [0x0F35, 0x0F35],\n    [0x0F37, 0x0F37], [0x0F39, 0x0F39], [0x0F71, 0x0F7E],\n    [0x0F80, 0x0F84], [0x0F86, 0x0F87], [0x0F90, 0x0F97],\n    [0x0F99, 0x0FBC], [0x0FC6, 0x0FC6], [0x102D, 0x1030],\n    [0x1032, 0x1032], [0x1036, 0x1037], [0x1039, 0x1039],\n    [0x1058, 0x1059], [0x1160, 0x11FF], [0x135F, 0x135F],\n    [0x1712, 0x1714], [0x1732, 0x1734], [0x1752, 0x1753],\n    [0x1772, 0x1773], [0x17B4, 0x17B5], [0x17B7, 0x17BD],\n    [0x17C6, 0x17C6], [0x17C9, 0x17D3], [0x17DD, 0x17DD],\n    [0x180B, 0x180D], [0x18A9, 0x18A9], [0x1920, 0x1922],\n    [0x1927, 0x1928], [0x1932, 0x1932], [0x1939, 0x193B],\n    [0x1A17, 0x1A18], [0x1B00, 0x1B03], [0x1B34, 0x1B34],\n    [0x1B36, 0x1B3A], [0x1B3C, 0x1B3C], [0x1B42, 0x1B42],\n    [0x1B6B, 0x1B73], [0x1DC0, 0x1DCA], [0x1DFE, 0x1DFF],\n    [0x200B, 0x200F], [0x202A, 0x202E], [0x2060, 0x2063],\n    [0x206A, 0x206F], [0x20D0, 0x20EF], [0x302A, 0x302F],\n    [0x3099, 0x309A], [0xA806, 0xA806], [0xA80B, 0xA80B],\n    [0xA825, 0xA826], [0xFB1E, 0xFB1E], [0xFE00, 0xFE0F],\n    [0xFE20, 0xFE23], [0xFEFF, 0xFEFF], [0xFFF9, 0xFFFB]\n  ];\n  const COMBINING_HIGH = [\n    [0x10A01, 0x10A03], [0x10A05, 0x10A06], [0x10A0C, 0x10A0F],\n    [0x10A38, 0x10A3A], [0x10A3F, 0x10A3F], [0x1D167, 0x1D169],\n    [0x1D173, 0x1D182], [0x1D185, 0x1D18B], [0x1D1AA, 0x1D1AD],\n    [0x1D242, 0x1D244], [0xE0001, 0xE0001], [0xE0020, 0xE007F],\n    [0xE0100, 0xE01EF]\n  ];\n  // binary search\n  function bisearch(ucs: number, data: number[][]): boolean {\n    let min = 0;\n    let max = data.length - 1;\n    let mid;\n    if (ucs < data[0][0] || ucs > data[max][1]) {\n      return false;\n    }\n    while (max >= min) {\n      mid = (min + max) >> 1;\n      if (ucs > data[mid][1]) {\n        min = mid + 1;\n      } else if (ucs < data[mid][0]) {\n        max = mid - 1;\n      } else {\n        return true;\n      }\n    }\n    return false;\n  }\n  function wcwidthHigh(ucs: number): 0 | 1 | 2 {\n    if (bisearch(ucs, COMBINING_HIGH)) {\n      return 0;\n    }\n    if ((ucs >= 0x20000 && ucs <= 0x2fffd) || (ucs >= 0x30000 && ucs <= 0x3fffd)) {\n      return 2;\n    }\n    return 1;\n  }\n  const control = opts.control | 0;\n\n  // create lookup table for BMP plane\n  const table = new Uint8Array(65536);\n  fill(table, 1);\n  table[0] = opts.nul;\n  // control chars\n  fill(table, opts.control, 1, 32);\n  fill(table, opts.control, 0x7f, 0xa0);\n\n  // apply wide char rules first\n  // wide chars\n  fill(table, 2, 0x1100, 0x1160);\n  table[0x2329] = 2;\n  table[0x232a] = 2;\n  fill(table, 2, 0x2e80, 0xa4d0);\n  table[0x303f] = 1;  // wrongly in last line\n\n  fill(table, 2, 0xac00, 0xd7a4);\n  fill(table, 2, 0xf900, 0xfb00);\n  fill(table, 2, 0xfe10, 0xfe1a);\n  fill(table, 2, 0xfe30, 0xfe70);\n  fill(table, 2, 0xff00, 0xff61);\n  fill(table, 2, 0xffe0, 0xffe7);\n\n  // apply combining last to ensure we overwrite\n  // wrongly wide set chars:\n  //    the original algo evals combining first and falls\n  //    through to wide check so we simply do here the opposite\n  // combining 0\n  for (let r = 0; r < COMBINING_BMP.length; ++r) {\n    fill(table, 0, COMBINING_BMP[r][0], COMBINING_BMP[r][1] + 1);\n  }\n\n  return function (num: number): number {\n    if (num < 32) {\n      return control | 0;\n    }\n    if (num < 127) {\n      return 1;\n    }\n    if (num < 65536) {\n      return table[num];\n    }\n    // do a full search for high codepoints\n    return wcwidthHigh(num);\n  };\n})({nul: 0, control: 0});  // configurable options\n\n/**\n * Get the terminal cell width for a string.\n */\nexport function getStringCellWidth(s: string): number {\n  let result = 0;\n  const length = s.length;\n  for (let i = 0; i < length; ++i) {\n    let code = s.charCodeAt(i);\n    // surrogate pair first\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (++i >= length) {\n        // this should not happen with strings retrieved from\n        // Buffer.translateToString as it converts from UTF-32\n        // and therefore always should contain the second part\n        // for any other string we still have to handle it somehow:\n        // simply treat the lonely surrogate first as a single char (UCS-2 behavior)\n        return result + wcwidth(code);\n      }\n      const second = s.charCodeAt(i);\n      // convert surrogate pair to high codepoint only for valid second part (UTF-16)\n      // otherwise treat them independently (UCS-2 behavior)\n      if (0xDC00 <= second && second <= 0xDFFF) {\n        code = (code - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n      } else {\n        result += wcwidth(second);\n      }\n    }\n    result += wcwidth(code);\n  }\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IParams, ParamsArray } from 'common/parser/Types';\n\n// max value supported for a single param/subparam (clamped to positive int32 range)\nconst MAX_VALUE = 0x7FFFFFFF;\n// max allowed subparams for a single sequence (hardcoded limitation)\nconst MAX_SUBPARAMS = 256;\n\n/**\n * Params storage class.\n * This type is used by the parser to accumulate sequence parameters and sub parameters\n * and transmit them to the input handler actions.\n *\n * NOTES:\n *  - params object for action handlers is borrowed, use `.toArray` or `.clone` to get a copy\n *  - never read beyond `params.length - 1` (likely to contain arbitrary data)\n *  - `.getSubParams` returns a borrowed typed array, use `.getSubParamsAll` for cloned sub params\n *  - hardcoded limitations:\n *    - max. value for a single (sub) param is 2^31 - 1 (greater values are clamped to that)\n *    - max. 256 sub params possible\n *    - negative values are not allowed beside -1 (placeholder for default value)\n *\n * About ZDM (Zero Default Mode):\n * ZDM is not orchestrated by this class. If the parser is in ZDM,\n * it should add 0 for empty params, otherwise -1. This does not apply\n * to subparams, empty subparams should always be added with -1.\n */\nexport class Params implements IParams {\n  // params store and length\n  public params: Int32Array;\n  public length: number;\n\n  // sub params store and length\n  protected _subParams: Int32Array;\n  protected _subParamsLength: number;\n\n  // sub params offsets from param: param idx --> [start, end] offset\n  private _subParamsIdx: Uint16Array;\n  private _rejectDigits: boolean;\n  private _rejectSubDigits: boolean;\n  private _digitIsSub: boolean;\n\n  /**\n   * Create a `Params` type from JS array representation.\n   */\n  public static fromArray(values: ParamsArray): Params {\n    const params = new Params();\n    if (!values.length) {\n      return params;\n    }\n    // skip leading sub params\n    for (let i = (values[0] instanceof Array) ? 1 : 0; i < values.length; ++i) {\n      const value = values[i];\n      if (value instanceof Array) {\n        for (let k = 0; k < value.length; ++k) {\n          params.addSubParam(value[k]);\n        }\n      } else {\n        params.addParam(value);\n      }\n    }\n    return params;\n  }\n\n  /**\n   * @param maxLength max length of storable parameters\n   * @param maxSubParamsLength max length of storable sub parameters\n   */\n  constructor(public maxLength: number = 32, public maxSubParamsLength: number = 32) {\n    if (maxSubParamsLength > MAX_SUBPARAMS) {\n      throw new Error('maxSubParamsLength must not be greater than 256');\n    }\n    this.params = new Int32Array(maxLength);\n    this.length = 0;\n    this._subParams = new Int32Array(maxSubParamsLength);\n    this._subParamsLength = 0;\n    this._subParamsIdx = new Uint16Array(maxLength);\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Clone object.\n   */\n  public clone(): Params {\n    const newParams = new Params(this.maxLength, this.maxSubParamsLength);\n    newParams.params.set(this.params);\n    newParams.length = this.length;\n    newParams._subParams.set(this._subParams);\n    newParams._subParamsLength = this._subParamsLength;\n    newParams._subParamsIdx.set(this._subParamsIdx);\n    newParams._rejectDigits = this._rejectDigits;\n    newParams._rejectSubDigits = this._rejectSubDigits;\n    newParams._digitIsSub = this._digitIsSub;\n    return newParams;\n  }\n\n  /**\n   * Get a JS array representation of the current parameters and sub parameters.\n   * The array is structured as follows:\n   *    sequence: \"1;2:3:4;5::6\"\n   *    array   : [1, 2, [3, 4], 5, [-1, 6]]\n   */\n  public toArray(): ParamsArray {\n    const res: ParamsArray = [];\n    for (let i = 0; i < this.length; ++i) {\n      res.push(this.params[i]);\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        res.push(Array.prototype.slice.call(this._subParams, start, end));\n      }\n    }\n    return res;\n  }\n\n  /**\n   * Reset to initial empty state.\n   */\n  public reset(): void {\n    this.length = 0;\n    this._subParamsLength = 0;\n    this._rejectDigits = false;\n    this._rejectSubDigits = false;\n    this._digitIsSub = false;\n  }\n\n  /**\n   * Add a parameter value.\n   * `Params` only stores up to `maxLength` parameters, any later\n   * parameter will be ignored.\n   * Note: VT devices only stored up to 16 values, xterm seems to\n   * store up to 30.\n   */\n  public addParam(value: number): void {\n    this._digitIsSub = false;\n    if (this.length >= this.maxLength) {\n      this._rejectDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength;\n    this.params[this.length++] = value > MAX_VALUE ? MAX_VALUE : value;\n  }\n\n  /**\n   * Add a sub parameter value.\n   * The sub parameter is automatically associated with the last parameter value.\n   * Thus it is not possible to add a subparameter without any parameter added yet.\n   * `Params` only stores up to `subParamsLength` sub parameters, any later\n   * sub parameter will be ignored.\n   */\n  public addSubParam(value: number): void {\n    this._digitIsSub = true;\n    if (!this.length) {\n      return;\n    }\n    if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) {\n      this._rejectSubDigits = true;\n      return;\n    }\n    if (value < -1) {\n      throw new Error('values lesser than -1 are not allowed');\n    }\n    this._subParams[this._subParamsLength++] = value > MAX_VALUE ? MAX_VALUE : value;\n    this._subParamsIdx[this.length - 1]++;\n  }\n\n  /**\n   * Whether parameter at index `idx` has sub parameters.\n   */\n  public hasSubParams(idx: number): boolean {\n    return ((this._subParamsIdx[idx] & 0xFF) - (this._subParamsIdx[idx] >> 8) > 0);\n  }\n\n  /**\n   * Return sub parameters for parameter at index `idx`.\n   * Note: The values are borrowed, thus you need to copy\n   * the values if you need to hold them in nonlocal scope.\n   */\n  public getSubParams(idx: number): Int32Array | null {\n    const start = this._subParamsIdx[idx] >> 8;\n    const end = this._subParamsIdx[idx] & 0xFF;\n    if (end - start > 0) {\n      return this._subParams.subarray(start, end);\n    }\n    return null;\n  }\n\n  /**\n   * Return all sub parameters as {idx: subparams} mapping.\n   * Note: The values are not borrowed.\n   */\n  public getSubParamsAll(): {[idx: number]: Int32Array} {\n    const result: {[idx: number]: Int32Array} = {};\n    for (let i = 0; i < this.length; ++i) {\n      const start = this._subParamsIdx[i] >> 8;\n      const end = this._subParamsIdx[i] & 0xFF;\n      if (end - start > 0) {\n        result[i] = this._subParams.slice(start, end);\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Add a single digit value to current parameter.\n   * This is used by the parser to account digits on a char by char basis.\n   */\n  public addDigit(value: number): void {\n    let length;\n    if (this._rejectDigits\n      || !(length = this._digitIsSub ? this._subParamsLength : this.length)\n      || (this._digitIsSub && this._rejectSubDigits)\n    ) {\n      return;\n    }\n\n    const store = this._digitIsSub ? this._subParams : this.params;\n    const cur = store[length - 1];\n    store[length - 1] = ~cur ? Math.min(cur * 10 + value, MAX_VALUE) : value;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOscHandler, IHandlerCollection, OscFallbackHandlerType, IOscParser } from 'common/parser/Types';\nimport { OscState, PAYLOAD_LIMIT } from 'common/parser/Constants';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { IDisposable } from 'common/Types';\n\n\nexport class OscParser implements IOscParser {\n  private _state = OscState.START;\n  private _id = -1;\n  private _handlers: IHandlerCollection<IOscHandler> = Object.create(null);\n  private _handlerFb: OscFallbackHandlerType = () => { };\n\n  public addHandler(ident: number, handler: IOscHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setHandler(ident: number, handler: IOscHandler): void {\n    this._handlers[ident] = [handler];\n  }\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n  public setHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public reset(): void {\n    // cleanup handlers if payload was already sent\n    if (this._state === OscState.PAYLOAD) {\n      this.end(false);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n\n  private _start(): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'START');\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].start();\n      }\n    }\n  }\n\n  private _put(data: Uint32Array, start: number, end: number): void {\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = handlers.length - 1; j >= 0; j--) {\n        handlers[j].put(data, start, end);\n      }\n    }\n  }\n\n  private _end(success: boolean): void {\n    // other than the old code we always have to call .end\n    // to keep the bubbling we use `success` to indicate\n    // whether a handler should execute\n    const handlers = this._handlers[this._id];\n    if (!handlers) {\n      this._handlerFb(this._id, 'END', success);\n    } else {\n      let j = handlers.length - 1;\n      for (; j >= 0; j--) {\n        if (handlers[j].end(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        handlers[j].end(false);\n      }\n    }\n  }\n\n  public start(): void {\n    // always reset leftover handlers\n    this.reset();\n    this._id = -1;\n    this._state = OscState.ID;\n  }\n\n  /**\n   * Put data to current OSC command.\n   * Expects the identifier of the OSC command in the form\n   * OSC id ; payload ST/BEL\n   * Payload chunks are not further processed and get\n   * directly passed to the handlers.\n   */\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._state === OscState.ABORT) {\n      return;\n    }\n    if (this._state === OscState.ID) {\n      while (start < end) {\n        const code = data[start++];\n        if (code === 0x3b) {\n          this._state = OscState.PAYLOAD;\n          this._start();\n          break;\n        }\n        if (code < 0x30 || 0x39 < code) {\n          this._state = OscState.ABORT;\n          return;\n        }\n        if (this._id === -1) {\n          this._id = 0;\n        }\n        this._id = this._id * 10 + code - 48;\n      }\n    }\n    if (this._state === OscState.PAYLOAD && end - start > 0) {\n      this._put(data, start, end);\n    }\n  }\n\n  /**\n   * Indicates end of an OSC command.\n   * Whether the OSC got aborted or finished normally\n   * is indicated by `success`.\n   */\n  public end(success: boolean): void {\n    if (this._state === OscState.START) {\n      return;\n    }\n    // do nothing if command was faulty\n    if (this._state !== OscState.ABORT) {\n      // if we are still in ID state and get an early end\n      // means that the command has no payload thus we still have\n      // to announce START and send END right after\n      if (this._state === OscState.ID) {\n        this._start();\n      }\n      this._end(success);\n    }\n    this._id = -1;\n    this._state = OscState.START;\n  }\n}\n\n/**\n * Convenient class to allow attaching string based handler functions\n * as OSC handlers.\n */\nexport class OscHandler implements IOscHandler {\n  private _data = '';\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string) => any) {}\n\n  public start(): void {\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public end(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data);\n    }\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/**\n * Internal states of EscapeSequenceParser.\n */\nexport const enum ParserState {\n  GROUND = 0,\n  ESCAPE = 1,\n  ESCAPE_INTERMEDIATE = 2,\n  CSI_ENTRY = 3,\n  CSI_PARAM = 4,\n  CSI_INTERMEDIATE = 5,\n  CSI_IGNORE = 6,\n  SOS_PM_APC_STRING = 7,\n  OSC_STRING = 8,\n  DCS_ENTRY = 9,\n  DCS_PARAM = 10,\n  DCS_IGNORE = 11,\n  DCS_INTERMEDIATE = 12,\n  DCS_PASSTHROUGH = 13\n}\n\n/**\n* Internal actions of EscapeSequenceParser.\n*/\nexport const enum ParserAction {\n  IGNORE = 0,\n  ERROR = 1,\n  PRINT = 2,\n  EXECUTE = 3,\n  OSC_START = 4,\n  OSC_PUT = 5,\n  OSC_END = 6,\n  CSI_DISPATCH = 7,\n  PARAM = 8,\n  COLLECT = 9,\n  ESC_DISPATCH = 10,\n  CLEAR = 11,\n  DCS_HOOK = 12,\n  DCS_PUT = 13,\n  DCS_UNHOOK = 14\n}\n\n/**\n * Internal states of OscParser.\n */\nexport const enum OscState {\n  START = 0,\n  ID = 1,\n  PAYLOAD = 2,\n  ABORT = 3\n}\n\n// payload limit for OSC and DCS\nexport const PAYLOAD_LIMIT = 10000000;\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\nimport { IDcsHandler, IParams, IHandlerCollection, IDcsParser, DcsFallbackHandlerType } from 'common/parser/Types';\nimport { utf32ToString } from 'common/input/TextDecoder';\nimport { Params } from 'common/parser/Params';\nimport { PAYLOAD_LIMIT } from 'common/parser/Constants';\n\nconst EMPTY_HANDLERS: IDcsHandler[] = [];\n\nexport class DcsParser implements IDcsParser {\n  private _handlers: IHandlerCollection<IDcsHandler> = Object.create(null);\n  private _active: IDcsHandler[] = EMPTY_HANDLERS;\n  private _ident: number = 0;\n  private _handlerFb: DcsFallbackHandlerType = () => {};\n\n  public dispose(): void {\n    this._handlers = Object.create(null);\n    this._handlerFb = () => {};\n  }\n\n  public addHandler(ident: number, handler: IDcsHandler): IDisposable {\n    if (this._handlers[ident] === undefined) {\n      this._handlers[ident] = [];\n    }\n    const handlerList = this._handlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n\n  public setHandler(ident: number, handler: IDcsHandler): void {\n    this._handlers[ident] = [handler];\n  }\n\n  public clearHandler(ident: number): void {\n    if (this._handlers[ident]) delete this._handlers[ident];\n  }\n\n  public setHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._handlerFb = handler;\n  }\n\n  public reset(): void {\n    if (this._active.length) {\n      this.unhook(false);\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n\n  public hook(ident: number, params: IParams): void {\n    // always reset leftover handlers\n    this.reset();\n    this._ident = ident;\n    this._active = this._handlers[ident] || EMPTY_HANDLERS;\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'HOOK', params);\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].hook(params);\n      }\n    }\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'PUT', utf32ToString(data, start, end));\n    } else {\n      for (let j = this._active.length - 1; j >= 0; j--) {\n        this._active[j].put(data, start, end);\n      }\n    }\n  }\n\n  public unhook(success: boolean): void {\n    if (!this._active.length) {\n      this._handlerFb(this._ident, 'UNHOOK', success);\n    } else {\n      let j = this._active.length - 1;\n      for (; j >= 0; j--) {\n        if (this._active[j].unhook(success) !== false) {\n          break;\n        }\n      }\n      j--;\n      // cleanup left over handlers\n      for (; j >= 0; j--) {\n        this._active[j].unhook(false);\n      }\n    }\n    this._active = EMPTY_HANDLERS;\n    this._ident = 0;\n  }\n}\n\n/**\n * Convenient class to create a DCS handler from a single callback function.\n * Note: The payload is currently limited to 50 MB (hardcoded).\n */\nexport class DcsHandler implements IDcsHandler {\n  private _data = '';\n  private _params: IParams | undefined;\n  private _hitLimit: boolean = false;\n\n  constructor(private _handler: (data: string, params: IParams) => any) {}\n\n  public hook(params: IParams): void {\n    this._params = params.clone();\n    this._data = '';\n    this._hitLimit = false;\n  }\n\n  public put(data: Uint32Array, start: number, end: number): void {\n    if (this._hitLimit) {\n      return;\n    }\n    this._data += utf32ToString(data, start, end);\n    if (this._data.length > PAYLOAD_LIMIT) {\n      this._data = '';\n      this._hitLimit = true;\n    }\n  }\n\n  public unhook(success: boolean): any {\n    let ret;\n    if (this._hitLimit) {\n      ret = false;\n    } else if (success) {\n      ret = this._handler(this._data, this._params ? this._params : new Params());\n    }\n    this._params = undefined;\n    this._data = '';\n    this._hitLimit = false;\n    return ret;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { generateConfig, configEquals } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DynamicCharAtlas } from 'browser/renderer/atlas/DynamicCharAtlas';\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { IColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\ninterface ICharAtlasCacheEntry {\n  atlas: BaseCharAtlas;\n  config: ICharAtlasConfig;\n  // N.B. This implementation potentially holds onto copies of the terminal forever, so\n  // this may cause memory leaks.\n  ownedBy: number[];\n}\n\nconst charAtlasCache: ICharAtlasCacheEntry[] = [];\n\n/**\n * Acquires a char atlas, either generating a new one or returning an existing\n * one that is in use by another terminal.\n */\nexport function acquireCharAtlas(\n  options: ITerminalOptions,\n  rendererId: number,\n  colors: IColorSet,\n  scaledCharWidth: number,\n  scaledCharHeight: number\n): BaseCharAtlas {\n  const newConfig = generateConfig(scaledCharWidth, scaledCharHeight, options, colors);\n\n  // Check to see if the renderer already owns this config\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    const ownedByIndex = entry.ownedBy.indexOf(rendererId);\n    if (ownedByIndex >= 0) {\n      if (configEquals(entry.config, newConfig)) {\n        return entry.atlas;\n      }\n      // The configs differ, release the renderer from the entry\n      if (entry.ownedBy.length === 1) {\n        entry.atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        entry.ownedBy.splice(ownedByIndex, 1);\n      }\n      break;\n    }\n  }\n\n  // Try match a char atlas from the cache\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const entry = charAtlasCache[i];\n    if (configEquals(entry.config, newConfig)) {\n      // Add the renderer to the cache entry and return\n      entry.ownedBy.push(rendererId);\n      return entry.atlas;\n    }\n  }\n\n  const newEntry: ICharAtlasCacheEntry = {\n    atlas: new DynamicCharAtlas(\n      document,\n      newConfig\n    ),\n    config: newConfig,\n    ownedBy: [rendererId]\n  };\n  charAtlasCache.push(newEntry);\n  return newEntry.atlas;\n}\n\n/**\n * Removes a terminal reference from the cache, allowing its memory to be freed.\n */\nexport function removeTerminalFromCache(rendererId: number): void {\n  for (let i = 0; i < charAtlasCache.length; i++) {\n    const index = charAtlasCache[i].ownedBy.indexOf(rendererId);\n    if (index !== -1) {\n      if (charAtlasCache[i].ownedBy.length === 1) {\n        // Remove the cache entry if it's the only renderer\n        charAtlasCache[i].atlas.dispose();\n        charAtlasCache.splice(i, 1);\n      } else {\n        // Remove the reference from the cache entry\n        charAtlasCache[i].ownedBy.splice(index, 1);\n      }\n      break;\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { DEFAULT_COLOR } from 'common/buffer/Constants';\nimport { IColorSet, IPartialColorSet } from 'browser/Types';\nimport { ITerminalOptions } from 'common/services/Services';\n\nexport function generateConfig(scaledCharWidth: number, scaledCharHeight: number, options: ITerminalOptions, colors: IColorSet): ICharAtlasConfig {\n  // null out some fields that don't matter\n  const clonedColors = <IPartialColorSet>{\n    foreground: colors.foreground,\n    background: colors.background,\n    cursor: undefined,\n    cursorAccent: undefined,\n    selection: undefined,\n    // For the static char atlas, we only use the first 16 colors, but we need all 256 for the\n    // dynamic character atlas.\n    ansi: colors.ansi.slice(0, 16)\n  };\n  return {\n    devicePixelRatio: window.devicePixelRatio,\n    scaledCharWidth,\n    scaledCharHeight,\n    fontFamily: options.fontFamily,\n    fontSize: options.fontSize,\n    fontWeight: options.fontWeight,\n    fontWeightBold: options.fontWeightBold,\n    allowTransparency: options.allowTransparency,\n    colors: clonedColors\n  };\n}\n\nexport function configEquals(a: ICharAtlasConfig, b: ICharAtlasConfig): boolean {\n  for (let i = 0; i < a.colors.ansi.length; i++) {\n    if (a.colors.ansi[i].rgba !== b.colors.ansi[i].rgba) {\n      return false;\n    }\n  }\n  return a.devicePixelRatio === b.devicePixelRatio &&\n      a.fontFamily === b.fontFamily &&\n      a.fontSize === b.fontSize &&\n      a.fontWeight === b.fontWeight &&\n      a.fontWeightBold === b.fontWeightBold &&\n      a.allowTransparency === b.allowTransparency &&\n      a.scaledCharWidth === b.scaledCharWidth &&\n      a.scaledCharHeight === b.scaledCharHeight &&\n      a.colors.foreground === b.colors.foreground &&\n      a.colors.background === b.colors.background;\n}\n\nexport function is256Color(colorCode: number): boolean {\n  return colorCode < DEFAULT_COLOR;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IColorManager, IColor, IColorSet } from 'browser/Types';\nimport { ITheme } from 'common/services/Services';\n\nconst DEFAULT_FOREGROUND = fromHex('#ffffff');\nconst DEFAULT_BACKGROUND = fromHex('#000000');\nconst DEFAULT_CURSOR = fromHex('#ffffff');\nconst DEFAULT_CURSOR_ACCENT = fromHex('#000000');\nconst DEFAULT_SELECTION = {\n  css: 'rgba(255, 255, 255, 0.3)',\n  rgba: 0xFFFFFF77\n};\n\n// An IIFE to generate DEFAULT_ANSI_COLORS. Do not mutate DEFAULT_ANSI_COLORS, instead make a copy\n// and mutate that.\nexport const DEFAULT_ANSI_COLORS = (() => {\n  const colors = [\n    // dark:\n    fromHex('#2e3436'),\n    fromHex('#cc0000'),\n    fromHex('#4e9a06'),\n    fromHex('#c4a000'),\n    fromHex('#3465a4'),\n    fromHex('#75507b'),\n    fromHex('#06989a'),\n    fromHex('#d3d7cf'),\n    // bright:\n    fromHex('#555753'),\n    fromHex('#ef2929'),\n    fromHex('#8ae234'),\n    fromHex('#fce94f'),\n    fromHex('#729fcf'),\n    fromHex('#ad7fa8'),\n    fromHex('#34e2e2'),\n    fromHex('#eeeeec')\n  ];\n\n  // Fill in the remaining 240 ANSI colors.\n  // Generate colors (16-231)\n  const v = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff];\n  for (let i = 0; i < 216; i++) {\n    const r = v[(i / 36) % 6 | 0];\n    const g = v[(i / 6) % 6 | 0];\n    const b = v[i % 6];\n    colors.push({\n      css: `#${toPaddedHex(r)}${toPaddedHex(g)}${toPaddedHex(b)}`,\n      // Use >>> 0 to force a conversion to an unsigned int\n      rgba: ((r << 24) | (g << 16) | (b << 8) | 0xFF) >>> 0\n    });\n  }\n\n  // Generate greys (232-255)\n  for (let i = 0; i < 24; i++) {\n    const c = 8 + i * 10;\n    const ch = toPaddedHex(c);\n    colors.push({\n      css: `#${ch}${ch}${ch}`,\n      rgba: ((c << 24) | (c << 16) | (c << 8) | 0xFF) >>> 0\n    });\n  }\n\n  return colors;\n})();\n\nfunction fromHex(css: string): IColor {\n  return {\n    css,\n    rgba: parseInt(css.slice(1), 16) << 8 | 0xFF\n  };\n}\n\nfunction toPaddedHex(c: number): string {\n  const s = c.toString(16);\n  return s.length < 2 ? '0' + s : s;\n}\n\n/**\n * Manages the source of truth for a terminal's colors.\n */\nexport class ColorManager implements IColorManager {\n  public colors: IColorSet;\n  private _ctx: CanvasRenderingContext2D;\n  private _litmusColor: CanvasGradient;\n\n  constructor(document: Document, public allowTransparency: boolean) {\n    const canvas = document.createElement('canvas');\n    canvas.width = 1;\n    canvas.height = 1;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) {\n      throw new Error('Could not get rendering context');\n    }\n    this._ctx = ctx;\n    this._ctx.globalCompositeOperation = 'copy';\n    this._litmusColor = this._ctx.createLinearGradient(0, 0, 1, 1);\n    this.colors = {\n      foreground: DEFAULT_FOREGROUND,\n      background: DEFAULT_BACKGROUND,\n      cursor: DEFAULT_CURSOR,\n      cursorAccent: DEFAULT_CURSOR_ACCENT,\n      selection: DEFAULT_SELECTION,\n      ansi: DEFAULT_ANSI_COLORS.slice()\n    };\n  }\n\n  /**\n   * Sets the terminal's theme.\n   * @param theme The  theme to use. If a partial theme is provided then default\n   * colors will be used where colors are not defined.\n   */\n  public setTheme(theme: ITheme = {}): void {\n    this.colors.foreground = this._parseColor(theme.foreground, DEFAULT_FOREGROUND);\n    this.colors.background = this._parseColor(theme.background, DEFAULT_BACKGROUND);\n    this.colors.cursor = this._parseColor(theme.cursor, DEFAULT_CURSOR, true);\n    this.colors.cursorAccent = this._parseColor(theme.cursorAccent, DEFAULT_CURSOR_ACCENT, true);\n    this.colors.selection = this._parseColor(theme.selection, DEFAULT_SELECTION, true);\n    this.colors.ansi[0] = this._parseColor(theme.black, DEFAULT_ANSI_COLORS[0]);\n    this.colors.ansi[1] = this._parseColor(theme.red, DEFAULT_ANSI_COLORS[1]);\n    this.colors.ansi[2] = this._parseColor(theme.green, DEFAULT_ANSI_COLORS[2]);\n    this.colors.ansi[3] = this._parseColor(theme.yellow, DEFAULT_ANSI_COLORS[3]);\n    this.colors.ansi[4] = this._parseColor(theme.blue, DEFAULT_ANSI_COLORS[4]);\n    this.colors.ansi[5] = this._parseColor(theme.magenta, DEFAULT_ANSI_COLORS[5]);\n    this.colors.ansi[6] = this._parseColor(theme.cyan, DEFAULT_ANSI_COLORS[6]);\n    this.colors.ansi[7] = this._parseColor(theme.white, DEFAULT_ANSI_COLORS[7]);\n    this.colors.ansi[8] = this._parseColor(theme.brightBlack, DEFAULT_ANSI_COLORS[8]);\n    this.colors.ansi[9] = this._parseColor(theme.brightRed, DEFAULT_ANSI_COLORS[9]);\n    this.colors.ansi[10] = this._parseColor(theme.brightGreen, DEFAULT_ANSI_COLORS[10]);\n    this.colors.ansi[11] = this._parseColor(theme.brightYellow, DEFAULT_ANSI_COLORS[11]);\n    this.colors.ansi[12] = this._parseColor(theme.brightBlue, DEFAULT_ANSI_COLORS[12]);\n    this.colors.ansi[13] = this._parseColor(theme.brightMagenta, DEFAULT_ANSI_COLORS[13]);\n    this.colors.ansi[14] = this._parseColor(theme.brightCyan, DEFAULT_ANSI_COLORS[14]);\n    this.colors.ansi[15] = this._parseColor(theme.brightWhite, DEFAULT_ANSI_COLORS[15]);\n  }\n\n  private _parseColor(\n    css: string | undefined,\n    fallback: IColor,\n    allowTransparency: boolean = this.allowTransparency\n  ): IColor {\n    if (css === undefined) {\n      return fallback;\n    }\n\n    // If parsing the value results in failure, then it must be ignored, and the attribute must\n    // retain its previous value.\n    // -- https://html.spec.whatwg.org/multipage/canvas.html#fill-and-stroke-styles\n    this._ctx.fillStyle = this._litmusColor;\n    this._ctx.fillStyle = css;\n    if (typeof this._ctx.fillStyle !== 'string') {\n      console.warn(`Color: ${css} is invalid using fallback ${fallback.css}`);\n      return fallback;\n    }\n\n    this._ctx.fillRect(0, 0, 1, 1);\n    const data = this._ctx.getImageData(0, 0, 1, 1).data;\n\n    if (!allowTransparency && data[3] !== 0xFF) {\n      // Ideally we'd just ignore the alpha channel, but...\n      //\n      // Browsers may not give back exactly the same RGB values we put in, because most/all\n      // convert the color to a pre-multiplied representation. getImageData converts that back to\n      // a un-premultipled representation, but the precision loss may make the RGB channels unuable\n      // on their own.\n      //\n      // E.g. In Chrome #12345610 turns into #10305010, and in the extreme case, 0xFFFFFF00 turns\n      // into 0x00000000.\n      //\n      // \"Note: Due to the lossy nature of converting to and from premultiplied alpha color values,\n      // pixels that have just been set using putImageData() might be returned to an equivalent\n      // getImageData() as different values.\"\n      // -- https://html.spec.whatwg.org/multipage/canvas.html#pixel-manipulation\n      //\n      // So let's just use the fallback color in this case instead.\n      console.warn(\n        `Color: ${css} is using transparency, but allowTransparency is false. ` +\n        `Using fallback ${fallback.css}.`\n      );\n      return fallback;\n    }\n\n    return {\n      css,\n      rgba: (data[0] << 24 | data[1] << 16 | data[2] << 8 | data[3]) >>> 0\n    };\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function throwIfFalsy<T>(value: T | undefined | null): T {\n  if (!value) {\n    throw new Error('value must not be falsy');\n  }\n  return value;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine, ICellData, CharData } from 'common/Types';\nimport { ICharacterJoinerRegistry, ICharacterJoiner } from 'browser/renderer/Types';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { WHITESPACE_CELL_CHAR, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IBufferService } from 'common/services/Services';\n\nexport class JoinedCellData extends AttributeData implements ICellData {\n  private _width: number;\n  // .content carries no meaning for joined CellData, simply nullify it\n  // thus we have to overload all other .content accessors\n  public content: number = 0;\n  public fg: number;\n  public bg: number;\n  public combinedData: string = '';\n\n  constructor(firstCell: ICellData, chars: string, width: number) {\n    super();\n    this.fg = firstCell.fg;\n    this.bg = firstCell.bg;\n    this.combinedData = chars;\n    this._width = width;\n  }\n\n  public isCombined(): number {\n    // always mark joined cell data as combined\n    return Content.IS_COMBINED_MASK;\n  }\n\n  public getWidth(): number {\n    return this._width;\n  }\n\n  public getChars(): string {\n    return this.combinedData;\n  }\n\n  public getCode(): number {\n    // code always gets the highest possible fake codepoint (read as -1)\n    // this is needed as code is used by caches as identifier\n    return 0x1FFFFF;\n  }\n\n  public setFromCharData(value: CharData): void {\n    throw new Error('not implemented');\n  }\n\n  public getAsCharData(): CharData {\n    return [this.fg, this.getChars(), this.getWidth(), this.getCode()];\n  }\n}\n\nexport class CharacterJoinerRegistry implements ICharacterJoinerRegistry {\n\n  private _characterJoiners: ICharacterJoiner[] = [];\n  private _nextCharacterJoinerId: number = 0;\n  private _workCell: CellData = new CellData();\n\n  constructor(private _bufferService: IBufferService) { }\n\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    const joiner: ICharacterJoiner = {\n      id: this._nextCharacterJoinerId++,\n      handler\n    };\n\n    this._characterJoiners.push(joiner);\n    return joiner.id;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    for (let i = 0; i < this._characterJoiners.length; i++) {\n      if (this._characterJoiners[i].id === joinerId) {\n        this._characterJoiners.splice(i, 1);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public getJoinedCharacters(row: number): [number, number][] {\n    if (this._characterJoiners.length === 0) {\n      return [];\n    }\n\n    const line = this._bufferService.buffer.lines.get(row);\n    if (!line || line.length === 0) {\n      return [];\n    }\n\n    const ranges: [number, number][] = [];\n    const lineStr = line.translateToString(true);\n\n    // Because some cells can be represented by multiple javascript characters,\n    // we track the cell and the string indexes separately. This allows us to\n    // translate the string ranges we get from the joiners back into cell ranges\n    // for use when rendering\n    let rangeStartColumn = 0;\n    let currentStringIndex = 0;\n    let rangeStartStringIndex = 0;\n    let rangeAttrFG = line.getFg(0);\n    let rangeAttrBG = line.getBg(0);\n\n    for (let x = 0; x < line.getTrimmedLength(); x++) {\n      line.loadCell(x, this._workCell);\n\n      if (this._workCell.getWidth() === 0) {\n        // If this character is of width 0, skip it.\n        continue;\n      }\n\n      // End of range\n      if (this._workCell.fg !== rangeAttrFG || this._workCell.bg !== rangeAttrBG) {\n        // If we ended up with a sequence of more than one character,\n        // look for ranges to join.\n        if (x - rangeStartColumn > 1) {\n          const joinedRanges = this._getJoinedRanges(\n            lineStr,\n            rangeStartStringIndex,\n            currentStringIndex,\n            line,\n            rangeStartColumn\n          );\n          for (let i = 0; i < joinedRanges.length; i++) {\n            ranges.push(joinedRanges[i]);\n          }\n        }\n\n        // Reset our markers for a new range.\n        rangeStartColumn = x;\n        rangeStartStringIndex = currentStringIndex;\n        rangeAttrFG = this._workCell.fg;\n        rangeAttrBG = this._workCell.bg;\n      }\n\n      currentStringIndex += this._workCell.getChars().length || WHITESPACE_CELL_CHAR.length;\n    }\n\n    // Process any trailing ranges.\n    if (this._bufferService.cols - rangeStartColumn > 1) {\n      const joinedRanges = this._getJoinedRanges(\n        lineStr,\n        rangeStartStringIndex,\n        currentStringIndex,\n        line,\n        rangeStartColumn\n      );\n      for (let i = 0; i < joinedRanges.length; i++) {\n        ranges.push(joinedRanges[i]);\n      }\n    }\n\n    return ranges;\n  }\n\n  /**\n   * Given a segment of a line of text, find all ranges of text that should be\n   * joined in a single rendering unit. Ranges are internally converted to\n   * column ranges, rather than string ranges.\n   * @param line String representation of the full line of text\n   * @param startIndex Start position of the range to search in the string (inclusive)\n   * @param endIndex End position of the range to search in the string (exclusive)\n   */\n  private _getJoinedRanges(line: string, startIndex: number, endIndex: number, lineData: IBufferLine, startCol: number): [number, number][] {\n    const text = line.substring(startIndex, endIndex);\n    // At this point we already know that there is at least one joiner so\n    // we can just pull its value and assign it directly rather than\n    // merging it into an empty array, which incurs unnecessary writes.\n    const joinedRanges: [number, number][] = this._characterJoiners[0].handler(text);\n    for (let i = 1; i < this._characterJoiners.length; i++) {\n      // We merge any overlapping ranges across the different joiners\n      const joinerRanges = this._characterJoiners[i].handler(text);\n      for (let j = 0; j < joinerRanges.length; j++) {\n        CharacterJoinerRegistry._mergeRanges(joinedRanges, joinerRanges[j]);\n      }\n    }\n    this._stringRangesToCellRanges(joinedRanges, lineData, startCol);\n    return joinedRanges;\n  }\n\n  /**\n   * Modifies the provided ranges in-place to adjust for variations between\n   * string length and cell width so that the range represents a cell range,\n   * rather than the string range the joiner provides.\n   * @param ranges String ranges containing start (inclusive) and end (exclusive) index\n   * @param line Cell data for the relevant line in the terminal\n   * @param startCol Offset within the line to start from\n   */\n  private _stringRangesToCellRanges(ranges: [number, number][], line: IBufferLine, startCol: number): void {\n    let currentRangeIndex = 0;\n    let currentRangeStarted = false;\n    let currentStringIndex = 0;\n    let currentRange = ranges[currentRangeIndex];\n\n    // If we got through all of the ranges, stop searching\n    if (!currentRange) {\n      return;\n    }\n\n    for (let x = startCol; x < this._bufferService.cols; x++) {\n      const width = line.getWidth(x);\n      const length = line.getString(x).length || WHITESPACE_CELL_CHAR.length;\n\n      // We skip zero-width characters when creating the string to join the text\n      // so we do the same here\n      if (width === 0) {\n        continue;\n      }\n\n      // Adjust the start of the range\n      if (!currentRangeStarted && currentRange[0] <= currentStringIndex) {\n        currentRange[0] = x;\n        currentRangeStarted = true;\n      }\n\n      // Adjust the end of the range\n      if (currentRange[1] <= currentStringIndex) {\n        currentRange[1] = x;\n\n        // We're finished with this range, so we move to the next one\n        currentRange = ranges[++currentRangeIndex];\n\n        // If there are no more ranges left, stop searching\n        if (!currentRange) {\n          break;\n        }\n\n        // Ranges can be on adjacent characters. Because the end index of the\n        // ranges are exclusive, this means that the index for the start of a\n        // range can be the same as the end index of the previous range. To\n        // account for the start of the next range, we check here just in case.\n        if (currentRange[0] <= currentStringIndex) {\n          currentRange[0] = x;\n          currentRangeStarted = true;\n        } else {\n          currentRangeStarted = false;\n        }\n      }\n\n      // Adjust the string index based on the character length to line up with\n      // the column adjustment\n      currentStringIndex += length;\n    }\n\n    // If there is still a range left at the end, it must extend all the way to\n    // the end of the line.\n    if (currentRange) {\n      currentRange[1] = this._bufferService.cols;\n    }\n  }\n\n  /**\n   * Merges the range defined by the provided start and end into the list of\n   * existing ranges. The merge is done in place on the existing range for\n   * performance and is also returned.\n   * @param ranges Existing range list\n   * @param newRange Tuple of two numbers representing the new range to merge in.\n   * @returns The ranges input with the new range merged in place\n   */\n  private static _mergeRanges(ranges: [number, number][], newRange: [number, number]): [number, number][] {\n    let inRange = false;\n    for (let i = 0; i < ranges.length; i++) {\n      const range = ranges[i];\n      if (!inRange) {\n        if (newRange[1] <= range[0]) {\n          // Case 1: New range is before the search range\n          ranges.splice(i, 0, newRange);\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 2: New range is either wholly contained within the\n          // search range or overlaps with the front of it\n          range[0] = Math.min(newRange[0], range[0]);\n          return ranges;\n        }\n\n        if (newRange[0] < range[1]) {\n          // Case 3: New range either wholly contains the search range\n          // or overlaps with the end of it\n          range[0] = Math.min(newRange[0], range[0]);\n          inRange = true;\n        }\n\n        // Case 4: New range starts after the search range\n        continue;\n      } else {\n        if (newRange[1] <= range[0]) {\n          // Case 5: New range extends from previous range but doesn't\n          // reach the current one\n          ranges[i - 1][1] = newRange[1];\n          return ranges;\n        }\n\n        if (newRange[1] <= range[1]) {\n          // Case 6: New range extends from prvious range into the\n          // current range\n          ranges[i - 1][1] = Math.max(newRange[1], range[1]);\n          ranges.splice(i, 1);\n          return ranges;\n        }\n\n        // Case 7: New range extends from previous range past the\n        // end of the current range\n        ranges.splice(i, 1);\n        i--;\n      }\n    }\n\n    if (inRange) {\n      // Case 8: New range extends past the last existing range\n      ranges[ranges.length - 1][1] = newRange[1];\n    } else {\n      // Case 9: New range starts after the last existing range\n      ranges.push(newRange);\n    }\n\n    return ranges;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport function getCoordsRelativeToElement(event: {clientX: number, clientY: number}, element: HTMLElement): [number, number] {\n  const rect = element.getBoundingClientRect();\n  return [event.clientX - rect.left, event.clientY - rect.top];\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event. The result\n * is returned as an array in the form [x, y] instead of an object as it's a\n * little faster and this function is used in some low level code.\n * @param event The mouse event.\n * @param element The terminal's container element.\n * @param colCount The number of columns in the terminal.\n * @param rowCount The number of rows n the terminal.\n * @param isSelection Whether the request is for the selection or not. This will\n * apply an offset to the x value such that the left half of the cell will\n * select that cell and the right half will select the next cell.\n */\nexport function getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, hasValidCharSize: boolean, actualCellWidth: number, actualCellHeight: number, isSelection?: boolean): [number, number] | undefined {\n  // Coordinates cannot be measured if there are no valid\n  if (!hasValidCharSize) {\n    return undefined;\n  }\n\n  const coords = getCoordsRelativeToElement(event, element);\n  if (!coords) {\n    return undefined;\n  }\n\n  coords[0] = Math.ceil((coords[0] + (isSelection ? actualCellWidth / 2 : 0)) / actualCellWidth);\n  coords[1] = Math.ceil(coords[1] / actualCellHeight);\n\n  // Ensure coordinates are within the terminal viewport. Note that selections\n  // need an addition point of precision to cover the end point (as characters\n  // cover half of one char and half of the next).\n  coords[0] = Math.min(Math.max(coords[0], 1), colCount + (isSelection ? 1 : 0));\n  coords[1] = Math.min(Math.max(coords[1], 1), rowCount);\n\n  return coords;\n}\n\n/**\n * Gets coordinates within the terminal for a particular mouse event, wrapping\n * them to the bounds of the terminal and adding 32 to both the x and y values\n * as expected by xterm.\n */\nexport function getRawByteCoords(coords: [number, number] | undefined): { x: number, y: number } | undefined {\n  if (!coords) {\n    return undefined;\n  }\n\n  // xterm sends raw bytes and starts at 32 (SP) for each.\n  return { x: coords[0] + 32, y: coords[1] + 32 };\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'common/Types';\n\n/**\n * Debounces calls to render terminal rows using animation frames.\n */\nexport class RenderDebouncer implements IDisposable {\n  private _rowStart: number | undefined;\n  private _rowEnd: number | undefined;\n  private _rowCount: number | undefined;\n  private _animationFrame: number | undefined;\n\n  constructor(\n    private _renderCallback: (start: number, end: number) => void\n  ) {\n  }\n\n  public dispose(): void {\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = undefined;\n    }\n  }\n\n  public refresh(rowStart: number, rowEnd: number, rowCount: number): void {\n    this._rowCount = rowCount;\n    // Get the min/max row start/end for the arg values\n    rowStart = rowStart !== undefined ? rowStart : 0;\n    rowEnd = rowEnd !== undefined ? rowEnd : this._rowCount - 1;\n    // Set the properties to the updated values\n    this._rowStart = this._rowStart !== undefined ? Math.min(this._rowStart, rowStart) : rowStart;\n    this._rowEnd = this._rowEnd !== undefined ? Math.max(this._rowEnd, rowEnd) : rowEnd;\n\n    if (this._animationFrame) {\n      return;\n    }\n\n    this._animationFrame = window.requestAnimationFrame(() => this._innerRefresh());\n  }\n\n  private _innerRefresh(): void {\n    // Make sure values are set\n    if (this._rowStart === undefined || this._rowEnd === undefined || this._rowCount === undefined) {\n      return;\n    }\n\n    // Clamp values\n    this._rowStart = Math.max(this._rowStart, 0);\n    this._rowEnd = Math.min(this._rowEnd, this._rowCount - 1);\n\n    // Run render callback\n    this._renderCallback(this._rowStart, this._rowEnd);\n\n    // Reset debouncer\n    this._rowStart = undefined;\n    this._rowEnd = undefined;\n    this._animationFrame = undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\n\nexport type ScreenDprListener = (newDevicePixelRatio?: number, oldDevicePixelRatio?: number) => void;\n\n/**\n * The screen device pixel ratio monitor allows listening for when the\n * window.devicePixelRatio value changes. This is done not with polling but with\n * the use of window.matchMedia to watch media queries. When the event fires,\n * the listener will be reattached using a different media query to ensure that\n * any further changes will register.\n *\n * The listener should fire on both window zoom changes and switching to a\n * monitor with a different DPI.\n */\nexport class ScreenDprMonitor extends Disposable {\n  private _currentDevicePixelRatio: number = window.devicePixelRatio;\n  private _outerListener: ((this: MediaQueryList, ev: MediaQueryListEvent) => any) | undefined;\n  private _listener: ScreenDprListener | undefined;\n  private _resolutionMediaMatchList: MediaQueryList | undefined;\n\n  public setListener(listener: ScreenDprListener): void {\n    if (this._listener) {\n      this.clearListener();\n    }\n    this._listener = listener;\n    this._outerListener = () => {\n      if (!this._listener) {\n        return;\n      }\n      this._listener(window.devicePixelRatio, this._currentDevicePixelRatio);\n      this._updateDpr();\n    };\n    this._updateDpr();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this.clearListener();\n  }\n\n  private _updateDpr(): void {\n    if (!this._resolutionMediaMatchList || !this._outerListener) {\n      return;\n    }\n\n    // Clear listeners for old DPR\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n\n    // Add listeners for new DPR\n    this._currentDevicePixelRatio = window.devicePixelRatio;\n    this._resolutionMediaMatchList = window.matchMedia(`screen and (resolution: ${window.devicePixelRatio}dppx)`);\n    this._resolutionMediaMatchList.addListener(this._outerListener);\n  }\n\n  public clearListener(): void {\n    if (!this._resolutionMediaMatchList || !this._listener || !this._outerListener) {\n      return;\n    }\n    this._resolutionMediaMatchList.removeListener(this._outerListener);\n    this._resolutionMediaMatchList = undefined;\n    this._listener = undefined;\n    this._outerListener = undefined;\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\n/*\n * A simple utility for cloning values\n */\nexport function clone<T>(val: T, depth: number = 5): T {\n  if (typeof val !== 'object') {\n    return val;\n  }\n\n  // If we're cloning an array, use an array as the base, otherwise use an object\n  const clonedObject: any = Array.isArray(val) ? [] : {};\n\n  for (const key in val) {\n    // Recursively clone eack item unless we're at the maximum depth\n    clonedObject[key] = depth <= 1 ? val[key] : (val[key] ? clone(val[key], depth - 1) : val[key]);\n  }\n\n  return clonedObject as T;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Terminal as ITerminalApi, ITerminalOptions, IMarker, IDisposable, ILinkMatcherOptions, ITheme, ILocalizableStrings, ITerminalAddon, ISelectionPosition, IBuffer as IBufferApi, IBufferLine as IBufferLineApi, IBufferCell as IBufferCellApi, IParser, IFunctionIdentifier } from 'xterm';\nimport { ITerminal } from '../Types';\nimport { IBufferLine } from 'common/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { Terminal as TerminalCore } from '../Terminal';\nimport * as Strings from '../browser/LocalizableStrings';\nimport { IEvent } from 'common/EventEmitter';\nimport { AddonManager } from './AddonManager';\nimport { IParams } from 'common/parser/Types';\n\nexport class Terminal implements ITerminalApi {\n  private _core: ITerminal;\n  private _addonManager: AddonManager;\n  private _parser: IParser;\n\n  constructor(options?: ITerminalOptions) {\n    this._core = new TerminalCore(options);\n    this._addonManager = new AddonManager();\n  }\n\n  public get onCursorMove(): IEvent<void> { return this._core.onCursorMove; }\n  public get onLineFeed(): IEvent<void> { return this._core.onLineFeed; }\n  public get onSelectionChange(): IEvent<void> { return this._core.onSelectionChange; }\n  public get onData(): IEvent<string> { return this._core.onData; }\n  public get onTitleChange(): IEvent<string> { return this._core.onTitleChange; }\n  public get onScroll(): IEvent<number> { return this._core.onScroll; }\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._core.onKey; }\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._core.onRender; }\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._core.onResize; }\n\n  public get element(): HTMLElement | undefined { return this._core.element; }\n  public get parser(): IParser {\n    if (!this._parser) {\n      this._parser = new ParserApi(this._core);\n    }\n    return this._parser;\n  }\n  public get textarea(): HTMLTextAreaElement | undefined { return this._core.textarea; }\n  public get rows(): number { return this._core.rows; }\n  public get cols(): number { return this._core.cols; }\n  public get buffer(): IBufferApi { return new BufferApiView(this._core.buffer); }\n  public get markers(): ReadonlyArray<IMarker> { return this._core.markers; }\n  public blur(): void {\n    this._core.blur();\n  }\n  public focus(): void {\n    this._core.focus();\n  }\n  public resize(columns: number, rows: number): void {\n    this._verifyIntegers(columns, rows);\n    this._core.resize(columns, rows);\n  }\n  public open(parent: HTMLElement): void {\n    this._core.open(parent);\n  }\n  public attachCustomKeyEventHandler(customKeyEventHandler: (event: KeyboardEvent) => boolean): void {\n    this._core.attachCustomKeyEventHandler(customKeyEventHandler);\n  }\n  public registerLinkMatcher(regex: RegExp, handler: (event: MouseEvent, uri: string) => void, options?: ILinkMatcherOptions): number {\n    return this._core.registerLinkMatcher(regex, handler, options);\n  }\n  public deregisterLinkMatcher(matcherId: number): void {\n    this._core.deregisterLinkMatcher(matcherId);\n  }\n  public registerCharacterJoiner(handler: (text: string) => [number, number][]): number {\n    return this._core.registerCharacterJoiner(handler);\n  }\n  public deregisterCharacterJoiner(joinerId: number): void {\n    this._core.deregisterCharacterJoiner(joinerId);\n  }\n  public addMarker(cursorYOffset: number): IMarker {\n    this._verifyIntegers(cursorYOffset);\n    return this._core.addMarker(cursorYOffset);\n  }\n  public hasSelection(): boolean {\n    return this._core.hasSelection();\n  }\n  public select(column: number, row: number, length: number): void {\n    this._verifyIntegers(column, row, length);\n    this._core.select(column, row, length);\n  }\n  public getSelection(): string {\n    return this._core.getSelection();\n  }\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    return this._core.getSelectionPosition();\n  }\n  public clearSelection(): void {\n    this._core.clearSelection();\n  }\n  public selectAll(): void {\n    this._core.selectAll();\n  }\n  public selectLines(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.selectLines(start, end);\n  }\n  public dispose(): void {\n    this._addonManager.dispose();\n    this._core.dispose();\n  }\n  public scrollLines(amount: number): void {\n    this._verifyIntegers(amount);\n    this._core.scrollLines(amount);\n  }\n  public scrollPages(pageCount: number): void {\n    this._verifyIntegers(pageCount);\n    this._core.scrollPages(pageCount);\n  }\n  public scrollToTop(): void {\n    this._core.scrollToTop();\n  }\n  public scrollToBottom(): void {\n    this._core.scrollToBottom();\n  }\n  public scrollToLine(line: number): void {\n    this._verifyIntegers(line);\n    this._core.scrollToLine(line);\n  }\n  public clear(): void {\n    this._core.clear();\n  }\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeUtf8(data: Uint8Array, callback?: () => void): void {\n    this._core.write(data, callback);\n  }\n  public writeln(data: string | Uint8Array, callback?: () => void): void {\n    this._core.write(data);\n    this._core.write('\\r\\n', callback);\n  }\n  public paste(data: string): void {\n    this._core.paste(data);\n  }\n  public getOption(key: 'bellSound' | 'bellStyle' | 'cursorStyle' | 'fontFamily' | 'fontWeight' | 'fontWeightBold' | 'logLevel' | 'rendererType' | 'termName' | 'wordSeparator'): string;\n  public getOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell'): boolean;\n  public getOption(key: 'colors'): string[];\n  public getOption(key: 'cols' | 'fontSize' | 'letterSpacing' | 'lineHeight' | 'rows' | 'tabStopWidth' | 'scrollback'): number;\n  public getOption(key: 'handler'): (data: string) => void;\n  public getOption(key: string): any;\n  public getOption(key: any): any {\n    return this._core.optionsService.getOption(key);\n  }\n  public setOption(key: 'bellSound' | 'fontFamily' | 'termName' | 'wordSeparator', value: string): void;\n  public setOption(key: 'fontWeight' | 'fontWeightBold', value: 'normal' | 'bold' | '100' | '200' | '300' | '400' | '500' | '600' | '700' | '800' | '900'): void;\n  public setOption(key: 'logLevel', value: 'debug' | 'info' | 'warn' | 'error' | 'off'): void;\n  public setOption(key: 'bellStyle', value: 'none' | 'visual' | 'sound' | 'both'): void;\n  public setOption(key: 'cursorStyle', value: 'block' | 'underline' | 'bar'): void;\n  public setOption(key: 'allowTransparency' | 'cancelEvents' | 'convertEol' | 'cursorBlink' | 'disableStdin' | 'macOptionIsMeta' | 'rightClickSelectsWord' | 'popOnBell' | 'screenKeys' | 'useFlowControl' | 'visualBell', value: boolean): void;\n  public setOption(key: 'colors', value: string[]): void;\n  public setOption(key: 'fontSize' | 'letterSpacing' | 'lineHeight' | 'tabStopWidth' | 'scrollback', value: number): void;\n  public setOption(key: 'handler', value: (data: string) => void): void;\n  public setOption(key: 'theme', value: ITheme): void;\n  public setOption(key: 'cols' | 'rows', value: number): void;\n  public setOption(key: string, value: any): void;\n  public setOption(key: any, value: any): void {\n    this._core.optionsService.setOption(key, value);\n  }\n  public refresh(start: number, end: number): void {\n    this._verifyIntegers(start, end);\n    this._core.refresh(start, end);\n  }\n  public reset(): void {\n    this._core.reset();\n  }\n  public loadAddon(addon: ITerminalAddon): void {\n    return this._addonManager.loadAddon(this, addon);\n  }\n  public static get strings(): ILocalizableStrings {\n    return Strings;\n  }\n\n  private _verifyIntegers(...values: number[]): void {\n    values.forEach(value => {\n      if (value === Infinity || isNaN(value) || value % 1 !== 0) {\n        throw new Error('This API only accepts integers');\n      }\n    });\n  }\n}\n\nclass BufferApiView implements IBufferApi {\n  constructor(private _buffer: IBuffer) {}\n\n  public get cursorY(): number { return this._buffer.y; }\n  public get cursorX(): number { return this._buffer.x; }\n  public get viewportY(): number { return this._buffer.ydisp; }\n  public get baseY(): number { return this._buffer.ybase; }\n  public get length(): number { return this._buffer.lines.length; }\n  public getLine(y: number): IBufferLineApi | undefined {\n    const line = this._buffer.lines.get(y);\n    if (!line) {\n      return undefined;\n    }\n    return new BufferLineApiView(line);\n  }\n}\n\nclass BufferLineApiView implements IBufferLineApi {\n  constructor(private _line: IBufferLine) {}\n\n  public get isWrapped(): boolean { return this._line.isWrapped; }\n  public getCell(x: number): IBufferCellApi | undefined {\n    if (x < 0 || x >= this._line.length) {\n      return undefined;\n    }\n    return new BufferCellApiView(this._line, x);\n  }\n  public translateToString(trimRight?: boolean, startColumn?: number, endColumn?: number): string {\n    return this._line.translateToString(trimRight, startColumn, endColumn);\n  }\n}\n\nclass BufferCellApiView implements IBufferCellApi {\n  constructor(private _line: IBufferLine, private _x: number) {}\n  public get char(): string { return this._line.getString(this._x); }\n  public get width(): number { return this._line.getWidth(this._x); }\n}\n\nclass ParserApi implements IParser {\n  constructor(private _core: ITerminal) {}\n\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addCsiHandler(id, (params: IParams) => callback(params.toArray()));\n  }\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: (number | number[])[]) => boolean): IDisposable {\n    return this._core.addDcsHandler(id, (data: string, params: IParams) => callback(data, params.toArray()));\n  }\n  public addEscHandler(id: IFunctionIdentifier, handler: () => boolean): IDisposable {\n    return this._core.addEscHandler(id, handler);\n  }\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._core.addOscHandler(ident, callback);\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n *\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\nimport { IInputHandlingTerminal, ICompositionHelper, ITerminalOptions, ITerminal, IBrowser, CustomKeyEventHandler } from './Types';\nimport { IRenderer, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { CompositionHelper } from 'browser/input/CompositionHelper';\nimport { Viewport } from 'browser/Viewport';\nimport { rightClickHandler, moveTextAreaUnderMouseCursor, handlePasteEvent, copyHandler, paste } from 'browser/Clipboard';\nimport { C0 } from 'common/data/EscapeSequences';\nimport { InputHandler } from './InputHandler';\nimport { Renderer } from './renderer/Renderer';\nimport { Linkifier } from 'browser/Linkifier';\nimport { SelectionService } from 'browser/services/SelectionService';\nimport * as Browser from 'common/Platform';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport * as Strings from 'browser/LocalizableStrings';\nimport { SoundService } from 'browser/services/SoundService';\nimport { MouseZoneManager } from 'browser/MouseZoneManager';\nimport { AccessibilityManager } from './AccessibilityManager';\nimport { ITheme, IMarker, IDisposable, ISelectionPosition } from 'xterm';\nimport { DomRenderer } from './renderer/dom/DomRenderer';\nimport { IKeyboardEvent, KeyboardResultType, ICharset, IBufferLine, IAttributeData, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\nimport { evaluateKeyboardEvent } from 'common/input/Keyboard';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { applyWindowsMode } from './WindowsMode';\nimport { ColorManager } from 'browser/ColorManager';\nimport { RenderService } from 'browser/services/RenderService';\nimport { IOptionsService, IBufferService, ICoreMouseService, ICoreService, ILogService, IDirtyRowService, IInstantiationService } from 'common/services/Services';\nimport { OptionsService } from 'common/services/OptionsService';\nimport { ICharSizeService, IRenderService, IMouseService, ISelectionService, ISoundService } from 'browser/services/Services';\nimport { CharSizeService } from 'browser/services/CharSizeService';\nimport { BufferService, MINIMUM_COLS, MINIMUM_ROWS } from 'common/services/BufferService';\nimport { Disposable } from 'common/Lifecycle';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\nimport { Attributes } from 'common/buffer/Constants';\nimport { MouseService } from 'browser/services/MouseService';\nimport { IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { CoreService } from 'common/services/CoreService';\nimport { LogService } from 'common/services/LogService';\nimport { ILinkifier, IMouseZoneManager, LinkMatcherHandler, ILinkMatcherOptions, IViewport } from 'browser/Types';\nimport { DirtyRowService } from 'common/services/DirtyRowService';\nimport { InstantiationService } from 'common/services/InstantiationService';\nimport { CoreMouseService } from 'common/services/CoreMouseService';\nimport { WriteBuffer } from 'common/input/WriteBuffer';\n\n// Let it work inside Node.js for automated testing purposes.\nconst document = (typeof window !== 'undefined') ? window.document : null;\n\n\nexport class Terminal extends Disposable implements ITerminal, IDisposable, IInputHandlingTerminal {\n  public textarea: HTMLTextAreaElement;\n  public element: HTMLElement;\n  public screenElement: HTMLElement;\n\n  /**\n   * The HTMLElement that the terminal is created in, set by Terminal.open.\n   */\n  private _parent: HTMLElement | null;\n  private _document: Document;\n  private _viewportScrollArea: HTMLElement;\n  private _viewportElement: HTMLElement;\n  private _helperContainer: HTMLElement;\n  private _compositionView: HTMLElement;\n\n  private _visualBellTimer: number;\n\n  public browser: IBrowser = <any>Browser;\n\n  // TODO: We should remove options once components adopt optionsService\n  public get options(): ITerminalOptions { return this.optionsService.options; }\n\n  // TODO: This can be changed to an enum or boolean, 0 and 1 seem to be the only options\n  public cursorState: number;\n  public cursorHidden: boolean;\n\n  private _customKeyEventHandler: CustomKeyEventHandler;\n\n  // common services\n  private _bufferService: IBufferService;\n  private _coreService: ICoreService;\n  private _coreMouseService: ICoreMouseService;\n  private _dirtyRowService: IDirtyRowService;\n  private _instantiationService: IInstantiationService;\n  private _logService: ILogService;\n  public optionsService: IOptionsService;\n\n  // browser services\n  private _charSizeService: ICharSizeService;\n  private _mouseService: IMouseService;\n  private _renderService: IRenderService;\n  private _selectionService: ISelectionService;\n  private _soundService: ISoundService;\n\n  // modes\n  public applicationKeypad: boolean;\n  public originMode: boolean;\n  public insertMode: boolean;\n  public wraparoundMode: boolean; // defaults: xterm - true, vt100 - false\n  public bracketedPasteMode: boolean;\n\n  // charset\n  // The current charset\n  public charset: ICharset;\n  public gcharset: number;\n  public glevel: number;\n  public charsets: ICharset[];\n\n  // mouse properties\n  public mouseEvents: CoreMouseEventType = CoreMouseEventType.NONE;\n  public sendFocus: boolean;\n\n  // misc\n  public savedCols: number;\n\n  public curAttrData: IAttributeData;\n  private _eraseAttrData: IAttributeData;\n\n  public params: (string | number)[];\n  public currentParam: string | number;\n\n  // write buffer\n  private _writeBuffer: WriteBuffer;\n\n  // Store if user went browsing history in scrollback\n  private _userScrolling: boolean;\n\n  /**\n   * Records whether the keydown event has already been handled and triggered a data event, if so\n   * the keypress event should not trigger a data event but should still print to the textarea so\n   * screen readers will announce it.\n   */\n  private _keyDownHandled: boolean = false;\n\n  private _inputHandler: InputHandler;\n  public linkifier: ILinkifier;\n  public viewport: IViewport;\n  private _compositionHelper: ICompositionHelper;\n  private _mouseZoneManager: IMouseZoneManager;\n  private _accessibilityManager: AccessibilityManager;\n  private _colorManager: ColorManager;\n  private _theme: ITheme;\n  private _windowsMode: IDisposable | undefined;\n\n  // bufferline to clone/copy from for new blank lines\n  private _blankLine: IBufferLine = null;\n\n  public get cols(): number { return this._bufferService.cols; }\n  public get rows(): number { return this._bufferService.rows; }\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onKey = new EventEmitter<{ key: string, domEvent: KeyboardEvent }>();\n  public get onKey(): IEvent<{ key: string, domEvent: KeyboardEvent }> { return this._onKey.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onResize = new EventEmitter<{ cols: number, rows: number }>();\n  public get onResize(): IEvent<{ cols: number, rows: number }> { return this._onResize.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n  private _onTitleChange = new EventEmitter<string>();\n  public get onTitleChange(): IEvent<string> { return this._onTitleChange.event; }\n\n  private _onFocus = new EventEmitter<void>();\n  public get onFocus(): IEvent<void> { return this._onFocus.event; }\n  private _onBlur = new EventEmitter<void>();\n  public get onBlur(): IEvent<void> { return this._onBlur.event; }\n  public onA11yCharEmitter = new EventEmitter<string>();\n  public get onA11yChar(): IEvent<string> { return this.onA11yCharEmitter.event; }\n  public onA11yTabEmitter = new EventEmitter<number>();\n  public get onA11yTab(): IEvent<number> { return this.onA11yTabEmitter.event; }\n\n  /**\n   * Creates a new `Terminal` object.\n   *\n   * @param options An object containing a set of options, the available options are:\n   *   - `cursorBlink` (boolean): Whether the terminal cursor blinks\n   *   - `cols` (number): The number of columns of the terminal (horizontal size)\n   *   - `rows` (number): The number of rows of the terminal (vertical size)\n   *\n   * @public\n   * @class Xterm Xterm\n   * @alias module:xterm/src/xterm\n   */\n  constructor(\n    options: ITerminalOptions = {}\n  ) {\n    super();\n\n    // Setup and initialize common services\n    this._instantiationService = new InstantiationService();\n    this.optionsService = new OptionsService(options);\n    this._instantiationService.setService(IOptionsService, this.optionsService);\n    this._bufferService = this._instantiationService.createInstance(BufferService);\n    this._instantiationService.setService(IBufferService, this._bufferService);\n    this._logService = this._instantiationService.createInstance(LogService);\n    this._instantiationService.setService(ILogService, this._logService);\n    this._coreService = this._instantiationService.createInstance(CoreService, () => this.scrollToBottom());\n    this._instantiationService.setService(ICoreService, this._coreService);\n    this._coreService.onData(e => this._onData.fire(e));\n    this._coreMouseService = this._instantiationService.createInstance(CoreMouseService);\n    this._instantiationService.setService(ICoreMouseService, this._coreMouseService);\n    this._dirtyRowService = this._instantiationService.createInstance(DirtyRowService);\n    this._instantiationService.setService(IDirtyRowService, this._dirtyRowService);\n\n    this._setupOptionsListeners();\n    this._setup();\n\n    this._writeBuffer = new WriteBuffer(data => this._inputHandler.parse(data));\n  }\n\n  public dispose(): void {\n    if (this._isDisposed) {\n      return;\n    }\n    super.dispose();\n    if (this._windowsMode) {\n      this._windowsMode.dispose();\n      this._windowsMode = undefined;\n    }\n    if (this._renderService) {\n      this._renderService.dispose();\n    }\n    this._customKeyEventHandler = null;\n    this.write = () => {};\n    if (this.element && this.element.parentNode) {\n      this.element.parentNode.removeChild(this.element);\n    }\n  }\n\n  private _setup(): void {\n    this._parent = document ? document.body : null;\n\n    this.cursorState = 0;\n    this.cursorHidden = false;\n    this._customKeyEventHandler = null;\n\n    // modes\n    this.applicationKeypad = false;\n    this.originMode = false;\n    this.insertMode = false;\n    this.wraparoundMode = true; // defaults: xterm - true, vt100 - false\n    this.bracketedPasteMode = false;\n\n    // charset\n    this.charset = null;\n    this.gcharset = null;\n    this.glevel = 0;\n    // TODO: Can this be just []?\n    this.charsets = [null];\n\n    this.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._eraseAttrData = DEFAULT_ATTR_DATA.clone();\n\n    this.params = [];\n    this.currentParam = 0;\n\n    this._userScrolling = false;\n\n    // Register input handler and refire/handle events\n    this._inputHandler = new InputHandler(this, this._bufferService, this._coreService, this._dirtyRowService, this._logService, this.optionsService, this._coreMouseService);\n    this._inputHandler.onCursorMove(() => this._onCursorMove.fire());\n    this._inputHandler.onLineFeed(() => this._onLineFeed.fire());\n    this.register(this._inputHandler);\n\n    this.linkifier = this.linkifier || new Linkifier(this._bufferService, this._logService);\n\n    if (this.options.windowsMode) {\n      this._windowsMode = applyWindowsMode(this);\n    }\n  }\n\n  /**\n   * Convenience property to active buffer.\n   */\n  public get buffer(): IBuffer {\n    return this.buffers.active;\n  }\n\n  public get buffers(): IBufferSet {\n    return this._bufferService.buffers;\n  }\n\n  /**\n   * back_color_erase feature for xterm.\n   */\n  public eraseAttrData(): IAttributeData {\n    this._eraseAttrData.bg &= ~(Attributes.CM_MASK | 0xFFFFFF);\n    this._eraseAttrData.bg |= this.curAttrData.bg & ~0xFC000000;\n    return this._eraseAttrData;\n  }\n\n  /**\n   * Focus the terminal. Delegates focus handling to the terminal's DOM element.\n   */\n  public focus(): void {\n    if (this.textarea) {\n      this.textarea.focus({ preventScroll: true });\n    }\n  }\n\n  public get isFocused(): boolean {\n    return document.activeElement === this.textarea && document.hasFocus();\n  }\n\n  private _setupOptionsListeners(): void {\n    // TODO: These listeners should be owned by individual components\n    this.optionsService.onOptionChange(key => {\n      switch (key) {\n        case 'fontFamily':\n        case 'fontSize':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n          }\n          if (this._charSizeService) {\n            this._charSizeService.measure();\n          }\n          break;\n        case 'drawBoldTextInBrightColors':\n        case 'letterSpacing':\n        case 'lineHeight':\n        case 'fontWeight':\n        case 'fontWeightBold':\n          // When the font changes the size of the cells may change which requires a renderer clear\n          if (this._renderService) {\n            this._renderService.clear();\n            this._renderService.onResize(this.cols, this.rows);\n            this.refresh(0, this.rows - 1);\n          }\n          break;\n        case 'rendererType':\n          if (this._renderService) {\n            this._renderService.setRenderer(this._createRenderer());\n            this._renderService.onResize(this.cols, this.rows);\n          }\n          break;\n        case 'scrollback':\n          this.buffers.resize(this.cols, this.rows);\n          if (this.viewport) {\n            this.viewport.syncScrollArea();\n          }\n          break;\n        case 'screenReaderMode':\n          if (this.optionsService.options.screenReaderMode) {\n            if (!this._accessibilityManager && this._renderService) {\n              this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n            }\n          } else {\n            if (this._accessibilityManager) {\n              this._accessibilityManager.dispose();\n              this._accessibilityManager = null;\n            }\n          }\n          break;\n        case 'tabStopWidth': this.buffers.setupTabStops(); break;\n        case 'theme':\n          this._setTheme(this.optionsService.options.theme);\n          break;\n        case 'windowsMode':\n          if (this.optionsService.options.windowsMode) {\n            if (!this._windowsMode) {\n              this._windowsMode = applyWindowsMode(this);\n            }\n          } else {\n            if (this._windowsMode) {\n              this._windowsMode.dispose();\n              this._windowsMode = undefined;\n            }\n          }\n          break;\n      }\n    });\n  }\n\n  /**\n   * Binds the desired focus behavior on a given terminal object.\n   */\n  private _onTextAreaFocus(ev: KeyboardEvent): void {\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[I');\n    }\n    this.updateCursorStyle(ev);\n    this.element.classList.add('focus');\n    this.showCursor();\n    this._onFocus.fire();\n  }\n\n  /**\n   * Blur the terminal, calling the blur function on the terminal's underlying\n   * textarea.\n   */\n  public blur(): void {\n    return this.textarea.blur();\n  }\n\n  /**\n   * Binds the desired blur behavior on a given terminal object.\n   */\n  private _onTextAreaBlur(): void {\n    // Text can safely be removed on blur. Doing it earlier could interfere with\n    // screen readers reading it out.\n    this.textarea.value = '';\n    this.refresh(this.buffer.y, this.buffer.y);\n    if (this.sendFocus) {\n      this._coreService.triggerDataEvent(C0.ESC + '[O');\n    }\n    this.element.classList.remove('focus');\n    this._onBlur.fire();\n  }\n\n  /**\n   * Initialize default behavior\n   */\n  private _initGlobal(): void {\n    this._bindKeys();\n\n    // Bind clipboard functionality\n    this.register(addDisposableDomListener(this.element, 'copy', (event: ClipboardEvent) => {\n      // If mouse events are active it means the selection manager is disabled and\n      // copy should be handled by the host program.\n      if (!this.hasSelection()) {\n        return;\n      }\n      copyHandler(event, this._selectionService);\n    }));\n    const pasteHandlerWrapper = (event: ClipboardEvent) => handlePasteEvent(event, this.textarea, this.bracketedPasteMode, this._coreService);\n    this.register(addDisposableDomListener(this.textarea, 'paste', pasteHandlerWrapper));\n    this.register(addDisposableDomListener(this.element, 'paste', pasteHandlerWrapper));\n\n    // Handle right click context menus\n    if (Browser.isFirefox) {\n      // Firefox doesn't appear to fire the contextmenu event on right click\n      this.register(addDisposableDomListener(this.element, 'mousedown', (event: MouseEvent) => {\n        if (event.button === 2) {\n          rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n        }\n      }));\n    } else {\n      this.register(addDisposableDomListener(this.element, 'contextmenu', (event: MouseEvent) => {\n        rightClickHandler(event, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord);\n      }));\n    }\n\n    // Move the textarea under the cursor when middle clicking on Linux to ensure\n    // middle click to paste selection works. This only appears to work in Chrome\n    // at the time is writing.\n    if (Browser.isLinux) {\n      // Use auxclick event over mousedown the latter doesn't seem to work. Note\n      // that the regular click event doesn't fire for the middle mouse button.\n      this.register(addDisposableDomListener(this.element, 'auxclick', (event: MouseEvent) => {\n        if (event.button === 1) {\n          moveTextAreaUnderMouseCursor(event, this.textarea, this.screenElement);\n        }\n      }));\n    }\n  }\n\n  /**\n   * Apply key handling to the terminal\n   */\n  private _bindKeys(): void {\n    this.register(addDisposableDomListener(this.textarea, 'keyup', (ev: KeyboardEvent) => this._keyUp(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keydown', (ev: KeyboardEvent) => this._keyDown(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'keypress', (ev: KeyboardEvent) => this._keyPress(ev), true));\n    this.register(addDisposableDomListener(this.textarea, 'compositionstart', () => this._compositionHelper.compositionstart()));\n    this.register(addDisposableDomListener(this.textarea, 'compositionupdate', (e: CompositionEvent) => this._compositionHelper.compositionupdate(e)));\n    this.register(addDisposableDomListener(this.textarea, 'compositionend', () => this._compositionHelper.compositionend()));\n    this.register(this.onRender(() => this._compositionHelper.updateCompositionElements()));\n    this.register(this.onRender(e => this._queueLinkification(e.start, e.end)));\n  }\n\n  /**\n   * Opens the terminal within an element.\n   *\n   * @param parent The element to create the terminal within.\n   */\n  public open(parent: HTMLElement): void {\n    this._parent = parent || this._parent;\n\n    if (!this._parent) {\n      throw new Error('Terminal requires a parent element.');\n    }\n\n    if (!document.body.contains(parent)) {\n      this._logService.warn('Terminal.open was called on an element that was not attached to the DOM');\n    }\n\n    this._document = this._parent.ownerDocument;\n\n    // Create main element container\n    this.element = this._document.createElement('div');\n    this.element.dir = 'ltr';   // xterm.css assumes LTR\n    this.element.classList.add('terminal');\n    this.element.classList.add('xterm');\n    this.element.setAttribute('tabindex', '0');\n    this._parent.appendChild(this.element);\n\n    // Performance: Use a document fragment to build the terminal\n    // viewport and helper elements detached from the DOM\n    const fragment = document.createDocumentFragment();\n    this._viewportElement = document.createElement('div');\n    this._viewportElement.classList.add('xterm-viewport');\n    fragment.appendChild(this._viewportElement);\n    this._viewportScrollArea = document.createElement('div');\n    this._viewportScrollArea.classList.add('xterm-scroll-area');\n    this._viewportElement.appendChild(this._viewportScrollArea);\n\n    this.screenElement = document.createElement('div');\n    this.screenElement.classList.add('xterm-screen');\n    // Create the container that will hold helpers like the textarea for\n    // capturing DOM Events. Then produce the helpers.\n    this._helperContainer = document.createElement('div');\n    this._helperContainer.classList.add('xterm-helpers');\n    this.screenElement.appendChild(this._helperContainer);\n    fragment.appendChild(this.screenElement);\n\n    this.textarea = document.createElement('textarea');\n    this.textarea.classList.add('xterm-helper-textarea');\n    this.textarea.setAttribute('aria-label', Strings.promptLabel);\n    this.textarea.setAttribute('aria-multiline', 'false');\n    this.textarea.setAttribute('autocorrect', 'off');\n    this.textarea.setAttribute('autocapitalize', 'off');\n    this.textarea.setAttribute('spellcheck', 'false');\n    this.textarea.tabIndex = 0;\n    this.register(addDisposableDomListener(this.textarea, 'focus', (ev: KeyboardEvent) => this._onTextAreaFocus(ev)));\n    this.register(addDisposableDomListener(this.textarea, 'blur', () => this._onTextAreaBlur()));\n    this._helperContainer.appendChild(this.textarea);\n\n    this._charSizeService = this._instantiationService.createInstance(CharSizeService, this._document, this._helperContainer);\n    this._instantiationService.setService(ICharSizeService, this._charSizeService);\n\n    this._compositionView = document.createElement('div');\n    this._compositionView.classList.add('composition-view');\n    this._compositionHelper = this._instantiationService.createInstance(CompositionHelper, this.textarea, this._compositionView);\n    this._helperContainer.appendChild(this._compositionView);\n\n    // Performance: Add viewport and helper elements from the fragment\n    this.element.appendChild(fragment);\n\n    this._theme = this.options.theme || this._theme;\n    this.options.theme = undefined;\n    this._colorManager = new ColorManager(document, this.options.allowTransparency);\n    this._colorManager.setTheme(this._theme);\n\n    const renderer = this._createRenderer();\n    this._renderService = this._instantiationService.createInstance(RenderService, renderer, this.rows, this.screenElement);\n    this._instantiationService.setService(IRenderService, this._renderService);\n    this._renderService.onRender(e => this._onRender.fire(e));\n    this.onResize(e => this._renderService.resize(e.cols, e.rows));\n\n    this._soundService = this._instantiationService.createInstance(SoundService);\n    this._instantiationService.setService(ISoundService, this._soundService);\n    this._mouseService = this._instantiationService.createInstance(MouseService);\n    this._instantiationService.setService(IMouseService, this._mouseService);\n\n    this.viewport = this._instantiationService.createInstance(Viewport,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this._viewportElement,\n      this._viewportScrollArea\n    );\n    this.viewport.onThemeChange(this._colorManager.colors);\n    this.register(this.viewport);\n\n    this.register(this.onCursorMove(() => this._renderService.onCursorMove()));\n    this.register(this.onResize(() => this._renderService.onResize(this.cols, this.rows)));\n    this.register(this.onBlur(() => this._renderService.onBlur()));\n    this.register(this.onFocus(() => this._renderService.onFocus()));\n    this.register(this._renderService.onDimensionsChange(() => this.viewport.syncScrollArea()));\n\n    this._selectionService = this._instantiationService.createInstance(SelectionService,\n      (amount: number, suppressEvent: boolean) => this.scrollLines(amount, suppressEvent),\n      this.element,\n      this.screenElement);\n    this._instantiationService.setService(ISelectionService, this._selectionService);\n    this.register(this._selectionService.onSelectionChange(() => this._onSelectionChange.fire()));\n    this.register(this._selectionService.onRedrawRequest(e => this._renderService.onSelectionChanged(e.start, e.end, e.columnSelectMode)));\n    this.register(this._selectionService.onLinuxMouseSelection(text => {\n      // If there's a new selection, put it into the textarea, focus and select it\n      // in order to register it as a selection on the OS. This event is fired\n      // only on Linux to enable middle click to paste selection.\n      this.textarea.value = text;\n      this.textarea.focus();\n      this.textarea.select();\n    }));\n    this.register(this.onScroll(() => {\n      this.viewport.syncScrollArea();\n      this._selectionService.refresh();\n    }));\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', () => this._selectionService.refresh()));\n\n    this._mouseZoneManager = this._instantiationService.createInstance(MouseZoneManager, this.element, this.screenElement);\n    this.register(this._mouseZoneManager);\n    this.register(this.onScroll(() => this._mouseZoneManager.clearAll()));\n    this.linkifier.attachToDom(this.element, this._mouseZoneManager);\n\n    // This event listener must be registered aftre MouseZoneManager is created\n    this.register(addDisposableDomListener(this.element, 'mousedown', (e: MouseEvent) => this._selectionService.onMouseDown(e)));\n\n    // apply mouse event classes set by escape codes before terminal was attached\n    if (this.mouseEvents) {\n      this._selectionService.disable();\n      this.element.classList.add('enable-mouse-events');\n    } else {\n      this._selectionService.enable();\n    }\n\n    if (this.options.screenReaderMode) {\n      // Note that this must be done *after* the renderer is created in order to\n      // ensure the correct order of the dprchange event\n      this._accessibilityManager = new AccessibilityManager(this, this._renderService);\n    }\n\n    // Measure the character size\n    this._charSizeService.measure();\n\n    // Setup loop that draws to screen\n    this.refresh(0, this.rows - 1);\n\n    // Initialize global actions that need to be taken on the document.\n    this._initGlobal();\n\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  private _createRenderer(): IRenderer {\n    switch (this.options.rendererType) {\n      case 'canvas': return new Renderer(this._colorManager.colors, this, this._bufferService, this._charSizeService, this.optionsService);\n      case 'dom': return new DomRenderer(this, this._colorManager.colors, this._charSizeService, this.optionsService);\n      default: throw new Error(`Unrecognized rendererType \"${this.options.rendererType}\"`);\n    }\n  }\n\n  /**\n   * Sets the theme on the renderer. The renderer must have been initialized.\n   * @param theme The theme to set.\n   */\n  private _setTheme(theme: ITheme): void {\n    this._theme = theme;\n    if (this._colorManager) {\n      this._colorManager.setTheme(theme);\n    }\n    if (this._renderService) {\n      this._renderService.setColors(this._colorManager.colors);\n    }\n    if (this.viewport) {\n      this.viewport.onThemeChange(this._colorManager.colors);\n    }\n  }\n\n  /**\n   * Bind certain mouse events to the terminal.\n   * By default only 3 button + wheel up/down is ativated. For higher buttons\n   * no mouse report will be created. Typically the standard actions will be active.\n   *\n   * There are several reasons not to enable support for higher buttons/wheel:\n   * - Button 4 and 5 are typically used for history back and forward navigation,\n   *   there is no straight forward way to supress/intercept those standard actions.\n   * - Support for higher buttons does not work in some platform/browser combinations.\n   * - Left/right wheel was not tested.\n   * - Emulators vary in mouse button support, typically only 3 buttons and\n   *   wheel up/down work reliable.\n   *\n   * TODO: Move mouse event code into its own file.\n   */\n  public bindMouse(): void {\n    const self = this;\n    const el = this.element;\n\n    // send event to CoreMouseService\n    function sendEvent(ev: MouseEvent | WheelEvent): boolean {\n      let pos;\n\n      // get mouse coordinates\n      pos = self._mouseService.getRawByteCoords(ev, self.screenElement, self.cols, self.rows);\n      if (!pos) {\n        return false;\n      }\n\n      let but: CoreMouseButton;\n      let action: CoreMouseAction;\n      switch ((<any>ev).overrideType || ev.type) {\n        case 'mousemove':\n          action = CoreMouseAction.MOVE;\n          if (ev.buttons === undefined) {\n            // buttons is not supported on macOS, try to get a value from button instead\n            but = CoreMouseButton.NONE;\n            if (ev.button !== undefined) {\n              but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n            }\n          } else {\n            // according to MDN buttons only reports up to button 5 (AUX2)\n            but = ev.buttons & 1 ? CoreMouseButton.LEFT :\n                  ev.buttons & 4 ? CoreMouseButton.MIDDLE :\n                  ev.buttons & 2 ? CoreMouseButton.RIGHT :\n                  CoreMouseButton.NONE; // fallback to NONE\n          }\n          break;\n        case 'mouseup':\n          action = CoreMouseAction.UP;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'mousedown':\n          action = CoreMouseAction.DOWN;\n          but = ev.button < 3 ? ev.button : CoreMouseButton.NONE;\n          break;\n        case 'wheel':\n          // only UP/DOWN wheel events are respected\n          if ((ev as WheelEvent).deltaY !== 0) {\n            action = (ev as WheelEvent).deltaY < 0 ? CoreMouseAction.UP : CoreMouseAction.DOWN;\n          }\n          but = CoreMouseButton.WHEEL;\n          break;\n        default:\n          // dont handle other event types by accident\n          return false;\n      }\n\n      // exit if we cannot determine valid button/action values\n      // do nothing for higher buttons than wheel\n      if (action === undefined || but === undefined || but > CoreMouseButton.WHEEL) {\n        return false;\n      }\n\n      return self._coreMouseService.triggerMouseEvent({\n        col: pos.x - 33, // FIXME: why -33 here?\n        row: pos.y - 33,\n        button: but,\n        action,\n        ctrl: ev.ctrlKey,\n        alt: ev.altKey,\n        shift: ev.shiftKey\n      });\n    }\n\n    /**\n     * Event listener state handling.\n     * We listen to the onProtocolChange event of CoreMouseService and put\n     * requested listeners in `requestedEvents`. With this the listeners\n     * have all bits to do the event listener juggling.\n     * Note: 'mousedown' currently is \"always on\" and not managed\n     * by onProtocolChange.\n     */\n    const requestedEvents: {[key: string]: ((ev: Event) => void) | null} = {\n      mouseup: null,\n      wheel: null,\n      mousedrag: null,\n      mousemove: null\n    };\n    const eventListeners: {[key: string]: (ev: Event) => void} = {\n      mouseup: (ev: MouseEvent) => {\n        sendEvent(ev);\n        if (!ev.buttons) {\n          // if no other button is held remove global handlers\n          this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n          if (requestedEvents.mousedrag) {\n            this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n          }\n        }\n        return this.cancel(ev);\n      },\n      wheel: (ev: WheelEvent) => {\n        sendEvent(ev);\n        ev.preventDefault();\n        return this.cancel(ev);\n      },\n      mousedrag: (ev: MouseEvent) => {\n        // deal only with move while a button is held\n        if (ev.buttons) {\n          sendEvent(ev);\n        }\n      },\n      mousemove: (ev: MouseEvent) => {\n        // deal only with move without any button\n        if (!ev.buttons) {\n          sendEvent(ev);\n        }\n      }\n    };\n    this._coreMouseService.onProtocolChange(events => {\n      // apply global changes on events\n      this.mouseEvents = events;\n      if (events) {\n        if (this.optionsService.options.logLevel === 'debug') {\n          this._logService.debug('Binding to mouse events:', this._coreMouseService.explainEvents(events));\n        }\n        this.element.classList.add('enable-mouse-events');\n        this._selectionService.disable();\n      } else {\n        this._logService.debug('Unbinding from mouse events.');\n        this.element.classList.remove('enable-mouse-events');\n        this._selectionService.enable();\n      }\n\n      // add/remove handlers from requestedEvents\n\n      if (!(events & CoreMouseEventType.MOVE)) {\n        el.removeEventListener('mousemove', requestedEvents.mousemove);\n        requestedEvents.mousemove = null;\n      } else if (!requestedEvents.mousemove) {\n        el.addEventListener('mousemove', eventListeners.mousemove);\n        requestedEvents.mousemove = eventListeners.mousemove;\n      }\n\n      if (!(events & CoreMouseEventType.WHEEL)) {\n        el.removeEventListener('wheel', requestedEvents.wheel);\n        requestedEvents.wheel = null;\n      } else if (!requestedEvents.wheel) {\n        el.addEventListener('wheel', eventListeners.wheel);\n        requestedEvents.wheel = eventListeners.wheel;\n      }\n\n      if (!(events & CoreMouseEventType.UP)) {\n        this._document.removeEventListener('mouseup', requestedEvents.mouseup);\n        requestedEvents.mouseup = null;\n      } else if (!requestedEvents.mouseup) {\n        requestedEvents.mouseup = eventListeners.mouseup;\n      }\n\n      if (!(events & CoreMouseEventType.DRAG)) {\n        this._document.removeEventListener('mousemove', requestedEvents.mousedrag);\n        requestedEvents.mousedrag = null;\n      } else if (!requestedEvents.mousedrag) {\n        requestedEvents.mousedrag = eventListeners.mousedrag;\n      }\n    });\n    // force initial onProtocolChange so we dont miss early mouse requests\n    this._coreMouseService.activeProtocol = this._coreMouseService.activeProtocol;\n\n    /**\n     * \"Always on\" event listeners.\n     */\n    this.register(addDisposableDomListener(el, 'mousedown', (ev: MouseEvent) => {\n      ev.preventDefault();\n      this.focus();\n\n      // Don't send the mouse button to the pty if mouse events are disabled or\n      // if the selection manager is having selection forced (ie. a modifier is\n      // held).\n      if (!this.mouseEvents || this._selectionService.shouldForceSelection(ev)) {\n        return;\n      }\n\n      sendEvent(ev);\n\n      // Register additional global handlers which should keep reporting outside\n      // of the terminal element.\n      // Note: Other emulators also do this for 'mousedown' while a button\n      // is held, we currently limit 'mousedown' to the terminal only.\n      if (requestedEvents.mouseup) {\n        this._document.addEventListener('mouseup', requestedEvents.mouseup);\n      }\n      if (requestedEvents.mousedrag) {\n        this._document.addEventListener('mousemove', requestedEvents.mousedrag);\n      }\n\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (!requestedEvents.wheel) {\n        // Convert wheel events into up/down events when the buffer does not have scrollback, this\n        // enables scrolling in apps hosted in the alt buffer such as vim or tmux.\n        if (!this.buffer.hasScrollback) {\n          const amount = this.viewport.getLinesScrolled(ev);\n\n          // Do nothing if there's no vertical scroll\n          if (amount === 0) {\n            return;\n          }\n\n          // Construct and send sequences\n          const sequence = C0.ESC + (this._coreService.decPrivateModes.applicationCursorKeys ? 'O' : '[') + ( ev.deltaY < 0 ? 'A' : 'B');\n          let data = '';\n          for (let i = 0; i < Math.abs(amount); i++) {\n            data += sequence;\n          }\n          this._coreService.triggerDataEvent(data, true);\n        }\n        return;\n      }\n    }));\n\n    // allow wheel scrolling in\n    // the shell for example\n    this.register(addDisposableDomListener(el, 'wheel', (ev: WheelEvent) => {\n      if (requestedEvents.wheel) return;\n      if (!this.viewport.onWheel(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchstart', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      this.viewport.onTouchStart(ev);\n      return this.cancel(ev);\n    }));\n\n    this.register(addDisposableDomListener(el, 'touchmove', (ev: TouchEvent) => {\n      if (this.mouseEvents) return;\n      if (!this.viewport.onTouchMove(ev)) {\n        return this.cancel(ev);\n      }\n    }));\n  }\n\n\n  /**\n   * Tells the renderer to refresh terminal content between two rows (inclusive) at the next\n   * opportunity.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  public refresh(start: number, end: number): void {\n    if (this._renderService) {\n      this._renderService.refreshRows(start, end);\n    }\n  }\n\n  /**\n   * Queues linkification for the specified rows.\n   * @param start The row to start from (between 0 and this.rows - 1).\n   * @param end The row to end at (between start and this.rows - 1).\n   */\n  private _queueLinkification(start: number, end: number): void {\n    if (this.linkifier) {\n      this.linkifier.linkifyRows(start, end);\n    }\n  }\n\n  /**\n   * Change the cursor style for different selection modes\n   */\n  public updateCursorStyle(ev: KeyboardEvent): void {\n    if (this._selectionService && this._selectionService.shouldColumnSelect(ev)) {\n      this.element.classList.add('column-select');\n    } else {\n      this.element.classList.remove('column-select');\n    }\n  }\n\n  /**\n   * Display the cursor element\n   */\n  public showCursor(): void {\n    if (!this.cursorState) {\n      this.cursorState = 1;\n      this.refresh(this.buffer.y, this.buffer.y);\n    }\n  }\n\n  /**\n   * Scroll the terminal down 1 row, creating a blank line.\n   * @param isWrapped Whether the new line is wrapped from the previous line.\n   */\n  public scroll(isWrapped: boolean = false): void {\n    let newLine: IBufferLine;\n    newLine = this._blankLine;\n    const eraseAttr = this.eraseAttrData();\n    if (!newLine || newLine.length !== this.cols || newLine.getFg(0) !== eraseAttr.fg || newLine.getBg(0) !== eraseAttr.bg) {\n      newLine = this.buffer.getBlankLine(eraseAttr, isWrapped);\n      this._blankLine = newLine;\n    }\n    newLine.isWrapped = isWrapped;\n\n    const topRow = this.buffer.ybase + this.buffer.scrollTop;\n    const bottomRow = this.buffer.ybase + this.buffer.scrollBottom;\n\n    if (this.buffer.scrollTop === 0) {\n      // Determine whether the buffer is going to be trimmed after insertion.\n      const willBufferBeTrimmed = this.buffer.lines.isFull;\n\n      // Insert the line using the fastest method\n      if (bottomRow === this.buffer.lines.length - 1) {\n        if (willBufferBeTrimmed) {\n          this.buffer.lines.recycle().copyFrom(newLine);\n        } else {\n          this.buffer.lines.push(newLine.clone());\n        }\n      } else {\n        this.buffer.lines.splice(bottomRow + 1, 0, newLine.clone());\n      }\n\n      // Only adjust ybase and ydisp when the buffer is not trimmed\n      if (!willBufferBeTrimmed) {\n        this.buffer.ybase++;\n        // Only scroll the ydisp with ybase if the user has not scrolled up\n        if (!this._userScrolling) {\n          this.buffer.ydisp++;\n        }\n      } else {\n        // When the buffer is full and the user has scrolled up, keep the text\n        // stable unless ydisp is right at the top\n        if (this._userScrolling) {\n          this.buffer.ydisp = Math.max(this.buffer.ydisp - 1, 0);\n        }\n      }\n    } else {\n      // scrollTop is non-zero which means no line will be going to the\n      // scrollback, instead we can just shift them in-place.\n      const scrollRegionHeight = bottomRow - topRow + 1/*as it's zero-based*/;\n      this.buffer.lines.shiftElements(topRow + 1, scrollRegionHeight - 1, -1);\n      this.buffer.lines.set(bottomRow, newLine.clone());\n    }\n\n    // Move the viewport to the bottom of the buffer unless the user is\n    // scrolling.\n    if (!this._userScrolling) {\n      this.buffer.ydisp = this.buffer.ybase;\n    }\n\n    // Flag rows that need updating\n    this._dirtyRowService.markRangeDirty(this.buffer.scrollTop, this.buffer.scrollBottom);\n\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Scroll the display of the terminal\n   * @param disp The number of lines to scroll down (negative scroll up).\n   * @param suppressScrollEvent Don't emit the scroll event as scrollLines. This is used\n   * to avoid unwanted events being handled by the viewport when the event was triggered from the\n   * viewport originally.\n   */\n  public scrollLines(disp: number, suppressScrollEvent?: boolean): void {\n    if (disp < 0) {\n      if (this.buffer.ydisp === 0) {\n        return;\n      }\n      this._userScrolling = true;\n    } else if (disp + this.buffer.ydisp >= this.buffer.ybase) {\n      this._userScrolling = false;\n    }\n\n    const oldYdisp = this.buffer.ydisp;\n    this.buffer.ydisp = Math.max(Math.min(this.buffer.ydisp + disp, this.buffer.ybase), 0);\n\n    // No change occurred, don't trigger scroll/refresh\n    if (oldYdisp === this.buffer.ydisp) {\n      return;\n    }\n\n    if (!suppressScrollEvent) {\n      this._onScroll.fire(this.buffer.ydisp);\n    }\n\n    this.refresh(0, this.rows - 1);\n  }\n\n  /**\n   * Scroll the display of the terminal by a number of pages.\n   * @param pageCount The number of pages to scroll (negative scrolls up).\n   */\n  public scrollPages(pageCount: number): void {\n    this.scrollLines(pageCount * (this.rows - 1));\n  }\n\n  /**\n   * Scrolls the display of the terminal to the top.\n   */\n  public scrollToTop(): void {\n    this.scrollLines(-this.buffer.ydisp);\n  }\n\n  /**\n   * Scrolls the display of the terminal to the bottom.\n   */\n  public scrollToBottom(): void {\n    this.scrollLines(this.buffer.ybase - this.buffer.ydisp);\n  }\n\n  public scrollToLine(line: number): void {\n    const scrollAmount = line - this.buffer.ydisp;\n    if (scrollAmount !== 0) {\n      this.scrollLines(scrollAmount);\n    }\n  }\n\n  public paste(data: string): void {\n    paste(data, this.textarea, this.bracketedPasteMode, this._coreService);\n  }\n\n  /**\n   * Attaches a custom key event handler which is run before keys are processed,\n   * giving consumers of xterm.js ultimate control as to what keys should be\n   * processed by the terminal and what keys should not.\n   * @param customKeyEventHandler The custom KeyboardEvent handler to attach.\n   * This is a function that takes a KeyboardEvent, allowing consumers to stop\n   * propagation and/or prevent the default action. The function returns whether\n   * the event should be processed by xterm.js.\n   */\n  public attachCustomKeyEventHandler(customKeyEventHandler: CustomKeyEventHandler): void {\n    this._customKeyEventHandler = customKeyEventHandler;\n  }\n\n  /** Add handler for ESC escape sequence. See xterm.d.ts for details. */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._inputHandler.addEscHandler(id, callback);\n  }\n\n  /** Add handler for DCS escape sequence. See xterm.d.ts for details. */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._inputHandler.addDcsHandler(id, callback);\n  }\n\n  /** Add handler for CSI escape sequence. See xterm.d.ts for details. */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._inputHandler.addCsiHandler(id, callback);\n  }\n  /** Add handler for OSC escape sequence. See xterm.d.ts for details. */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._inputHandler.addOscHandler(ident, callback);\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for, specifically\n   * this searches the textContent of the rows. You will want to use \\s to match\n   * a space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options?: ILinkMatcherOptions): number {\n    const matcherId = this.linkifier.registerLinkMatcher(regex, handler, options);\n    this.refresh(0, this.rows - 1);\n    return matcherId;\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   */\n  public deregisterLinkMatcher(matcherId: number): void {\n    if (this.linkifier.deregisterLinkMatcher(matcherId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    const joinerId = this._renderService.registerCharacterJoiner(handler);\n    this.refresh(0, this.rows - 1);\n    return joinerId;\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): void {\n    if (this._renderService.deregisterCharacterJoiner(joinerId)) {\n      this.refresh(0, this.rows - 1);\n    }\n  }\n\n  public get markers(): IMarker[] {\n    return this.buffer.markers;\n  }\n\n  public addMarker(cursorYOffset: number): IMarker {\n    // Disallow markers on the alt buffer\n    if (this.buffer !== this.buffers.normal) {\n      return;\n    }\n\n    return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + cursorYOffset);\n  }\n\n  /**\n   * Gets whether the terminal has an active selection.\n   */\n  public hasSelection(): boolean {\n    return this._selectionService ? this._selectionService.hasSelection : false;\n  }\n\n  /**\n   * Selects text within the terminal.\n   * @param column The column the selection starts at..\n   * @param row The row the selection starts at.\n   * @param length The length of the selection.\n   */\n  public select(column: number, row: number, length: number): void {\n    this._selectionService.setSelection(column, row, length);\n  }\n\n  /**\n   * Gets the terminal's current selection, this is useful for implementing copy\n   * behavior outside of xterm.js.\n   */\n  public getSelection(): string {\n    return this._selectionService ? this._selectionService.selectionText : '';\n  }\n\n  public getSelectionPosition(): ISelectionPosition | undefined {\n    if (!this._selectionService.hasSelection) {\n      return undefined;\n    }\n\n    return {\n      startColumn: this._selectionService.selectionStart[0],\n      startRow: this._selectionService.selectionStart[1],\n      endColumn: this._selectionService.selectionEnd[0],\n      endRow: this._selectionService.selectionEnd[1]\n    };\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    if (this._selectionService) {\n      this._selectionService.clearSelection();\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    if (this._selectionService) {\n      this._selectionService.selectAll();\n    }\n  }\n\n  public selectLines(start: number, end: number): void {\n    if (this._selectionService) {\n      this._selectionService.selectLines(start, end);\n    }\n  }\n\n  /**\n   * Handle a keydown event\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keydown event to be handled.\n   */\n  protected _keyDown(event: KeyboardEvent): boolean {\n    this._keyDownHandled = false;\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(event) === false) {\n      return false;\n    }\n\n    if (!this._compositionHelper.keydown(event)) {\n      if (this.buffer.ybase !== this.buffer.ydisp) {\n        this.scrollToBottom();\n      }\n      return false;\n    }\n\n    const result = evaluateKeyboardEvent(event, this._coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);\n\n    this.updateCursorStyle(event);\n\n    if (result.type === KeyboardResultType.PAGE_DOWN || result.type === KeyboardResultType.PAGE_UP) {\n      const scrollCount = this.rows - 1;\n      this.scrollLines(result.type === KeyboardResultType.PAGE_UP ? -scrollCount : scrollCount);\n      return this.cancel(event, true);\n    }\n\n    if (result.type === KeyboardResultType.SELECT_ALL) {\n      this.selectAll();\n    }\n\n    if (this._isThirdLevelShift(this.browser, event)) {\n      return true;\n    }\n\n    if (result.cancel) {\n      // The event is canceled at the end already, is this necessary?\n      this.cancel(event, true);\n    }\n\n    if (!result.key) {\n      return true;\n    }\n\n    // If ctrl+c or enter is being sent, clear out the textarea. This is done so that screen readers\n    // will announce deleted characters. This will not work 100% of the time but it should cover\n    // most scenarios.\n    if (result.key === C0.ETX || result.key === C0.CR) {\n      this.textarea.value = '';\n    }\n\n    this._onKey.fire({ key: result.key, domEvent: event });\n    this.showCursor();\n    this._coreService.triggerDataEvent(result.key, true);\n\n    // Cancel events when not in screen reader mode so events don't get bubbled up and handled by\n    // other listeners. When screen reader mode is enabled, this could cause issues if the event\n    // is handled at a higher level, this is a compromise in order to echo keys to the screen\n    // reader.\n    if (!this.optionsService.options.screenReaderMode) {\n      return this.cancel(event, true);\n    }\n\n    this._keyDownHandled = true;\n  }\n\n  private _isThirdLevelShift(browser: IBrowser, ev: IKeyboardEvent): boolean {\n    const thirdLevelKey =\n        (browser.isMac && !this.options.macOptionIsMeta && ev.altKey && !ev.ctrlKey && !ev.metaKey) ||\n        (browser.isWindows && ev.altKey && ev.ctrlKey && !ev.metaKey);\n\n    if (ev.type === 'keypress') {\n      return thirdLevelKey;\n    }\n\n    // Don't invoke for arrows, pageDown, home, backspace, etc. (on non-keypress events)\n    return thirdLevelKey && (!ev.keyCode || ev.keyCode > 47);\n  }\n\n  /**\n   * Set the G level of the terminal\n   * @param g\n   */\n  public setgLevel(g: number): void {\n    this.glevel = g;\n    this.charset = this.charsets[g];\n  }\n\n  /**\n   * Set the charset for the given G level of the terminal\n   * @param g\n   * @param charset\n   */\n  public setgCharset(g: number, charset: ICharset): void {\n    this.charsets[g] = charset;\n    if (this.glevel === g) {\n      this.charset = charset;\n    }\n  }\n\n  protected _keyUp(ev: KeyboardEvent): void {\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return;\n    }\n\n    if (!wasModifierKeyOnlyEvent(ev)) {\n      this.focus();\n    }\n\n    this.updateCursorStyle(ev);\n  }\n\n  /**\n   * Handle a keypress event.\n   * Key Resources:\n   *   - https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n   * @param ev The keypress event to be handled.\n   */\n  protected _keyPress(ev: KeyboardEvent): boolean {\n    let key;\n\n    if (this._keyDownHandled) {\n      return false;\n    }\n\n    if (this._customKeyEventHandler && this._customKeyEventHandler(ev) === false) {\n      return false;\n    }\n\n    this.cancel(ev);\n\n    if (ev.charCode) {\n      key = ev.charCode;\n    } else if (ev.which === null || ev.which === undefined) {\n      key = ev.keyCode;\n    } else if (ev.which !== 0 && ev.charCode !== 0) {\n      key = ev.which;\n    } else {\n      return false;\n    }\n\n    if (!key || (\n      (ev.altKey || ev.ctrlKey || ev.metaKey) && !this._isThirdLevelShift(this.browser, ev)\n    )) {\n      return false;\n    }\n\n    key = String.fromCharCode(key);\n\n    this._onKey.fire({ key, domEvent: ev });\n    this.showCursor();\n    this._coreService.triggerDataEvent(key, true);\n\n    return true;\n  }\n\n  /**\n   * Ring the bell.\n   * Note: We could do sweet things with webaudio here\n   */\n  public bell(): void {\n    if (this._soundBell()) {\n      this._soundService.playBellSound();\n    }\n\n    if (this._visualBell()) {\n      this.element.classList.add('visual-bell-active');\n      clearTimeout(this._visualBellTimer);\n      this._visualBellTimer = window.setTimeout(() => {\n        this.element.classList.remove('visual-bell-active');\n      }, 200);\n    }\n  }\n\n  /**\n   * Resizes the terminal.\n   *\n   * @param x The number of columns to resize to.\n   * @param y The number of rows to resize to.\n   */\n  public resize(x: number, y: number): void {\n    if (isNaN(x) || isNaN(y)) {\n      return;\n    }\n\n    if (x === this.cols && y === this.rows) {\n      // Check if we still need to measure the char size (fixes #785).\n      if (this._charSizeService && !this._charSizeService.hasValidSize) {\n        this._charSizeService.measure();\n      }\n      return;\n    }\n\n    if (x < MINIMUM_COLS) x = MINIMUM_COLS;\n    if (y < MINIMUM_ROWS) y = MINIMUM_ROWS;\n\n    this.buffers.resize(x, y);\n\n    this._bufferService.resize(x, y);\n    this.buffers.setupTabStops(this.cols);\n\n    if (this._charSizeService) {\n      this._charSizeService.measure();\n    }\n\n    // Sync the scroll area to make sure scroll events don't fire and scroll the viewport to an\n    // invalid location\n    this.viewport.syncScrollArea(true);\n\n    this.refresh(0, this.rows - 1);\n    this._onResize.fire({ cols: x, rows: y });\n  }\n\n  /**\n   * Clear the entire buffer, making the prompt line the new first line.\n   */\n  public clear(): void {\n    if (this.buffer.ybase === 0 && this.buffer.y === 0) {\n      // Don't clear if it's already clear\n      return;\n    }\n    this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y));\n    this.buffer.lines.length = 1;\n    this.buffer.ydisp = 0;\n    this.buffer.ybase = 0;\n    this.buffer.y = 0;\n    for (let i = 1; i < this.rows; i++) {\n      this.buffer.lines.push(this.buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this.refresh(0, this.rows - 1);\n    this._onScroll.fire(this.buffer.ydisp);\n  }\n\n  /**\n   * Evaluate if the current terminal is the given argument.\n   * @param term The terminal name to evaluate\n   */\n  public is(term: string): boolean {\n    return (this.options.termName + '').indexOf(term) === 0;\n  }\n\n  /**\n   * Emit the data event and populate the given data.\n   * @param data The data to populate in the event.\n   */\n  // public handler(data: string): void {\n  //   // Prevents all events to pty process if stdin is disabled\n  //   if (this.options.disableStdin) {\n  //     return;\n  //   }\n\n  //   // Clear the selection if the selection manager is available and has an active selection\n  //   if (this.selectionService && this.selectionService.hasSelection) {\n  //     this.selectionService.clearSelection();\n  //   }\n\n  //   // Input is being sent to the terminal, the terminal should focus the prompt.\n  //   if (this.buffer.ybase !== this.buffer.ydisp) {\n  //     this.scrollToBottom();\n  //   }\n  //   this._onData.fire(data);\n  // }\n\n  /**\n   * Emit the 'title' event and populate the given title.\n   * @param title The title to populate in the event.\n   */\n  public handleTitle(title: string): void {\n    this._onTitleChange.fire(title);\n  }\n\n  /**\n   * Reset terminal.\n   * Note: Calling this directly from JS is synchronous but does not clear\n   * input buffers and does not reset the parser, thus the terminal will\n   * continue to apply pending input data.\n   * If you need in band reset (synchronous with input data) consider\n   * using DECSTR (soft reset, CSI ! p) or RIS instead (hard reset, ESC c).\n   */\n  public reset(): void {\n    /**\n     * Since _setup handles a full terminal creation, we have to carry forward\n     * a few things that should not reset.\n     */\n    this.options.rows = this.rows;\n    this.options.cols = this.cols;\n    const customKeyEventHandler = this._customKeyEventHandler;\n    const inputHandler = this._inputHandler;\n    const cursorState = this.cursorState;\n    const userScrolling = this._userScrolling;\n\n    this._setup();\n    this._bufferService.reset();\n    this._coreService.reset();\n    this._coreMouseService.reset();\n    if (this._selectionService) {\n      this._selectionService.reset();\n    }\n\n    // reattach\n    this._customKeyEventHandler = customKeyEventHandler;\n    this._inputHandler = inputHandler;\n    this.cursorState = cursorState;\n    this._userScrolling = userScrolling;\n\n    // do a full screen refresh\n    this.refresh(0, this.rows - 1);\n    if (this.viewport) {\n      this.viewport.syncScrollArea();\n    }\n  }\n\n  // TODO: Remove cancel function and cancelEvents option\n  public cancel(ev: Event, force?: boolean): boolean {\n    if (!this.options.cancelEvents && !force) {\n      return;\n    }\n    ev.preventDefault();\n    ev.stopPropagation();\n    return false;\n  }\n\n  private _visualBell(): boolean {\n    return false;\n    // return this.options.bellStyle === 'visual' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  private _soundBell(): boolean {\n    return this.options.bellStyle === 'sound';\n    // return this.options.bellStyle === 'sound' ||\n    //     this.options.bellStyle === 'both';\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    this._writeBuffer.write(data, callback);\n  }\n\n  public writeSync(data: string | Uint8Array): void {\n    this._writeBuffer.writeSync(data);\n  }\n}\n\n/**\n * Helpers\n */\n\nfunction wasModifierKeyOnlyEvent(ev: KeyboardEvent): boolean {\n  return ev.keyCode === 16 || // Shift\n    ev.keyCode === 17 || // Ctrl\n    ev.keyCode === 18; // Alt\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, ICoreService, IOptionsService } from 'common/services/Services';\n\ninterface IPosition {\n  start: number;\n  end: number;\n}\n\n/**\n * Encapsulates the logic for handling compositionstart, compositionupdate and compositionend\n * events, displaying the in-progress composition to the UI and forwarding the final composition\n * to the handler.\n */\nexport class CompositionHelper {\n  /**\n   * Whether input composition is currently happening, eg. via a mobile keyboard, speech input or\n   * IME. This variable determines whether the compositionText should be displayed on the UI.\n   */\n  private _isComposing: boolean;\n\n  /**\n   * The position within the input textarea's value of the current composition.\n   */\n  private _compositionPosition: IPosition;\n\n  /**\n   * Whether a composition is in the process of being sent, setting this to false will cancel any\n   * in-progress composition.\n   */\n  private _isSendingComposition: boolean;\n\n  constructor(\n    private readonly _textarea: HTMLTextAreaElement,\n    private readonly _compositionView: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    this._isComposing = false;\n    this._isSendingComposition = false;\n    this._compositionPosition = { start: 0, end: 0 };\n  }\n\n  /**\n   * Handles the compositionstart event, activating the composition view.\n   */\n  public compositionstart(): void {\n    this._isComposing = true;\n    this._compositionPosition.start = this._textarea.value.length;\n    this._compositionView.textContent = '';\n    this._compositionView.classList.add('active');\n  }\n\n  /**\n   * Handles the compositionupdate event, updating the composition view.\n   * @param ev The event.\n   */\n  public compositionupdate(ev: CompositionEvent): void {\n    this._compositionView.textContent = ev.data;\n    this.updateCompositionElements();\n    setTimeout(() => {\n      this._compositionPosition.end = this._textarea.value.length;\n    }, 0);\n  }\n\n  /**\n   * Handles the compositionend event, hiding the composition view and sending the composition to\n   * the handler.\n   */\n  public compositionend(): void {\n    this._finalizeComposition(true);\n  }\n\n  /**\n   * Handles the keydown event, routing any necessary events to the CompositionHelper functions.\n   * @param ev The keydown event.\n   * @return Whether the Terminal should continue processing the keydown event.\n   */\n  public keydown(ev: KeyboardEvent): boolean {\n    if (this._isComposing || this._isSendingComposition) {\n      if (ev.keyCode === 229) {\n        // Continue composing if the keyCode is the \"composition character\"\n        return false;\n      } else if (ev.keyCode === 16 || ev.keyCode === 17 || ev.keyCode === 18) {\n        // Continue composing if the keyCode is a modifier key\n        return false;\n      }\n      // Finish composition immediately. This is mainly here for the case where enter is\n      // pressed and the handler needs to be triggered before the command is executed.\n      this._finalizeComposition(false);\n    }\n\n    if (ev.keyCode === 229) {\n      // If the \"composition character\" is used but gets to this point it means a non-composition\n      // character (eg. numbers and punctuation) was pressed when the IME was active.\n      this._handleAnyTextareaChanges();\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Finalizes the composition, resuming regular input actions. This is called when a composition\n   * is ending.\n   * @param waitForPropagation Whether to wait for events to propagate before sending\n   *   the input. This should be false if a non-composition keystroke is entered before the\n   *   compositionend event is triggered, such as enter, so that the composition is sent before\n   *   the command is executed.\n   */\n  private _finalizeComposition(waitForPropagation: boolean): void {\n    this._compositionView.classList.remove('active');\n    this._isComposing = false;\n    this._clearTextareaPosition();\n\n    if (!waitForPropagation) {\n      // Cancel any delayed composition send requests and send the input immediately.\n      this._isSendingComposition = false;\n      const input = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);\n      this._coreService.triggerDataEvent(input, true);\n    } else {\n      // Make a deep copy of the composition position here as a new compositionstart event may\n      // fire before the setTimeout executes.\n      const currentCompositionPosition = {\n        start: this._compositionPosition.start,\n        end: this._compositionPosition.end\n      };\n\n      // Since composition* events happen before the changes take place in the textarea on most\n      // browsers, use a setTimeout with 0ms time to allow the native compositionend event to\n      // complete. This ensures the correct character is retrieved.\n      // This solution was used because:\n      // - The compositionend event's data property is unreliable, at least on Chromium\n      // - The last compositionupdate event's data property does not always accurately describe\n      //   the character, a counter example being Korean where an ending consonsant can move to\n      //   the following character if the following input is a vowel.\n      this._isSendingComposition = true;\n      setTimeout(() => {\n        // Ensure that the input has not already been sent\n        if (this._isSendingComposition) {\n          this._isSendingComposition = false;\n          let input;\n          if (this._isComposing) {\n            // Use the end position to get the string if a new composition has started.\n            input = this._textarea.value.substring(currentCompositionPosition.start, currentCompositionPosition.end);\n          } else {\n            // Don't use the end position here in order to pick up any characters after the\n            // composition has finished, for example when typing a non-composition character\n            // (eg. 2) after a composition character.\n            input = this._textarea.value.substring(currentCompositionPosition.start);\n          }\n          this._coreService.triggerDataEvent(input, true);\n        }\n      }, 0);\n    }\n  }\n\n  /**\n   * Apply any changes made to the textarea after the current event chain is allowed to complete.\n   * This should be called when not currently composing but a keydown event with the \"composition\n   * character\" (229) is triggered, in order to allow non-composition text to be entered when an\n   * IME is active.\n   */\n  private _handleAnyTextareaChanges(): void {\n    const oldValue = this._textarea.value;\n    setTimeout(() => {\n      // Ignore if a composition has started since the timeout\n      if (!this._isComposing) {\n        const newValue = this._textarea.value;\n        const diff = newValue.replace(oldValue, '');\n        if (diff.length > 0) {\n          this._coreService.triggerDataEvent(diff, true);\n        }\n      }\n    }, 0);\n  }\n\n  /**\n   * Positions the composition view on top of the cursor and the textarea just below it (so the\n   * IME helper dialog is positioned correctly).\n   * @param dontRecurse Whether to use setTimeout to recursively trigger another update, this is\n   *   necessary as the IME events across browsers are not consistently triggered.\n   */\n  public updateCompositionElements(dontRecurse?: boolean): void {\n    if (!this._isComposing) {\n      return;\n    }\n\n    if (this._bufferService.buffer.isCursorInViewport) {\n      const cellHeight = Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n      const cursorTop = this._bufferService.buffer.y * cellHeight;\n      const cursorLeft = this._bufferService.buffer.x * this._charSizeService.width;\n\n      this._compositionView.style.left = cursorLeft + 'px';\n      this._compositionView.style.top = cursorTop + 'px';\n      this._compositionView.style.height = cellHeight + 'px';\n      this._compositionView.style.lineHeight = cellHeight + 'px';\n      this._compositionView.style.fontFamily = this._optionsService.options.fontFamily;\n      this._compositionView.style.fontSize = this._optionsService.options.fontSize + 'px';\n      // Sync the textarea to the exact position of the composition view so the IME knows where the\n      // text is.\n      const compositionViewBounds = this._compositionView.getBoundingClientRect();\n      this._textarea.style.left = cursorLeft + 'px';\n      this._textarea.style.top = cursorTop + 'px';\n      this._textarea.style.width = compositionViewBounds.width + 'px';\n      this._textarea.style.height = compositionViewBounds.height + 'px';\n      this._textarea.style.lineHeight = compositionViewBounds.height + 'px';\n    }\n\n    if (!dontRecurse) {\n      setTimeout(() => this.updateCompositionElements(true), 0);\n    }\n  }\n\n  /**\n   * Clears the textarea's position so that the cursor does not blink on IE.\n   * @private\n   */\n  private _clearTextareaPosition(): void {\n    this._textarea.style.left = '';\n    this._textarea.style.top = '';\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet, IViewport } from 'browser/Types';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nconst FALLBACK_SCROLL_BAR_WIDTH = 15;\n\n/**\n * Represents the viewport of a terminal, the visible area within the larger buffer of output.\n * Logic for the virtual scroll bar is included in this object.\n */\nexport class Viewport extends Disposable implements IViewport {\n  public scrollBarWidth: number = 0;\n  private _currentRowHeight: number = 0;\n  private _lastRecordedBufferLength: number = 0;\n  private _lastRecordedViewportHeight: number = 0;\n  private _lastRecordedBufferHeight: number = 0;\n  private _lastTouchY: number = 0;\n  private _lastScrollTop: number = 0;\n\n  // Stores a partial line amount when scrolling, this is used to keep track of how much of a line\n  // is scrolled so we can \"scroll\" over partial lines and feel natural on touchpads. This is a\n  // quick fix and could have a more robust solution in place that reset the value when needed.\n  private _wheelPartialScroll: number = 0;\n\n  private _refreshAnimationFrame: number | null = null;\n  private _ignoreNextScrollEvent: boolean = false;\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _viewportElement: HTMLElement,\n    private readonly _scrollArea: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IOptionsService private readonly _optionsService: IOptionsService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IRenderService private readonly _renderService: IRenderService\n  ) {\n    super();\n\n    // Measure the width of the scrollbar. If it is 0 we can assume it's an OSX overlay scrollbar.\n    // Unfortunately the overlay scrollbar would be hidden underneath the screen element in that case,\n    // therefore we account for a standard amount to make it visible\n    this.scrollBarWidth = (this._viewportElement.offsetWidth - this._scrollArea.offsetWidth) || FALLBACK_SCROLL_BAR_WIDTH;\n    this.register(addDisposableDomListener(this._viewportElement, 'scroll', this._onScroll.bind(this)));\n\n    // Perform this async to ensure the ICharSizeService is ready.\n    setTimeout(() => this.syncScrollArea(), 0);\n  }\n\n  public onThemeChange(colors: IColorSet): void {\n    this._viewportElement.style.backgroundColor = colors.background.css;\n  }\n\n  /**\n   * Refreshes row height, setting line-height, viewport height and scroll area height if\n   * necessary.\n   */\n  private _refresh(immediate: boolean): void {\n    if (immediate) {\n      this._innerRefresh();\n      if (this._refreshAnimationFrame !== null) {\n        cancelAnimationFrame(this._refreshAnimationFrame);\n      }\n      return;\n    }\n    if (this._refreshAnimationFrame === null) {\n      this._refreshAnimationFrame = requestAnimationFrame(() => this._innerRefresh());\n    }\n  }\n\n  private _innerRefresh(): void {\n    if (this._charSizeService.height > 0) {\n      this._currentRowHeight = this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio;\n      this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;\n      const newBufferHeight = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderService.dimensions.canvasHeight);\n      if (this._lastRecordedBufferHeight !== newBufferHeight) {\n        this._lastRecordedBufferHeight = newBufferHeight;\n        this._scrollArea.style.height = this._lastRecordedBufferHeight + 'px';\n      }\n    }\n\n    // Sync scrollTop\n    const scrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._viewportElement.scrollTop !== scrollTop) {\n      // Ignore the next scroll event which will be triggered by setting the scrollTop as we do not\n      // want this event to scroll the terminal\n      this._ignoreNextScrollEvent = true;\n      this._viewportElement.scrollTop = scrollTop;\n    }\n\n    this._refreshAnimationFrame = null;\n  }\n  /**\n   * Updates dimensions and synchronizes the scroll area if necessary.\n   */\n  public syncScrollArea(immediate: boolean = false): void {\n    // If buffer height changed\n    if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) {\n      this._lastRecordedBufferLength = this._bufferService.buffer.lines.length;\n      this._refresh(immediate);\n      return;\n    }\n\n    // If viewport height changed\n    if (this._lastRecordedViewportHeight !== this._renderService.dimensions.canvasHeight) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If the buffer position doesn't match last scroll top\n    const newScrollTop = this._bufferService.buffer.ydisp * this._currentRowHeight;\n    if (this._lastScrollTop !== newScrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If element's scroll top changed, this can happen when hiding the element\n    if (this._lastScrollTop !== this._viewportElement.scrollTop) {\n      this._refresh(immediate);\n      return;\n    }\n\n    // If row height changed\n    if (this._renderService.dimensions.scaledCellHeight / window.devicePixelRatio !== this._currentRowHeight) {\n      this._refresh(immediate);\n      return;\n    }\n  }\n\n  /**\n   * Handles scroll events on the viewport, calculating the new viewport and requesting the\n   * terminal to scroll to it.\n   * @param ev The scroll event.\n   */\n  private _onScroll(ev: Event): void {\n    // Record current scroll top position\n    this._lastScrollTop = this._viewportElement.scrollTop;\n\n    // Don't attempt to scroll if the element is not visible, otherwise scrollTop will be corrupt\n    // which causes the terminal to scroll the buffer to the top\n    if (!this._viewportElement.offsetParent) {\n      return;\n    }\n\n    // Ignore the event if it was flagged to ignore (when the source of the event is from Viewport)\n    if (this._ignoreNextScrollEvent) {\n      this._ignoreNextScrollEvent = false;\n      return;\n    }\n\n    const newRow = Math.round(this._lastScrollTop / this._currentRowHeight);\n    const diff = newRow - this._bufferService.buffer.ydisp;\n    this._scrollLines(diff, true);\n  }\n\n  /**\n   * Handles bubbling of scroll event in case the viewport has reached top or bottom\n   * @param ev The scroll event.\n   * @param amount The amount scrolled\n   */\n  private _bubbleScroll(ev: Event, amount: number): boolean {\n    const scrollPosFromTop = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;\n    if ((amount < 0 && this._viewportElement.scrollTop !== 0) ||\n        (amount > 0 &&  scrollPosFromTop < this._lastRecordedBufferHeight)) {\n      if (ev.cancelable) {\n        ev.preventDefault();\n      }\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handles mouse wheel events by adjusting the viewport's scrollTop and delegating the actual\n   * scrolling to `onScroll`, this event needs to be attached manually by the consumer of\n   * `Viewport`.\n   * @param ev The mouse wheel event.\n   */\n  public onWheel(ev: WheelEvent): boolean {\n    const amount = this._getPixelsScrolled(ev);\n    if (amount === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += amount;\n    return this._bubbleScroll(ev, amount);\n  }\n\n  private _getPixelsScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_PIXEL\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      amount *= this._currentRowHeight;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._currentRowHeight * this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  /**\n   * Gets the number of pixels scrolled by the mouse event taking into account what type of delta\n   * is being used.\n   * @param ev The mouse wheel event.\n   */\n  public getLinesScrolled(ev: WheelEvent): number {\n    // Do nothing if it's not a vertical scroll event\n    if (ev.deltaY === 0) {\n      return 0;\n    }\n\n    // Fallback to WheelEvent.DOM_DELTA_LINE\n    let amount = this._applyScrollModifier(ev.deltaY, ev);\n    if (ev.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      amount /= this._currentRowHeight + 0.0; // Prevent integer division\n      this._wheelPartialScroll += amount;\n      amount = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1);\n      this._wheelPartialScroll %= 1;\n    } else if (ev.deltaMode === WheelEvent.DOM_DELTA_PAGE) {\n      amount *= this._bufferService.rows;\n    }\n    return amount;\n  }\n\n  private _applyScrollModifier(amount: number, ev: WheelEvent): number {\n    const modifier = this._optionsService.options.fastScrollModifier;\n    // Multiply the scroll speed when the modifier is down\n    if ((modifier === 'alt' && ev.altKey) ||\n        (modifier === 'ctrl' && ev.ctrlKey) ||\n        (modifier === 'shift' && ev.shiftKey)) {\n      return amount * this._optionsService.options.fastScrollSensitivity * this._optionsService.options.scrollSensitivity;\n    }\n\n    return amount * this._optionsService.options.scrollSensitivity;\n  }\n\n  /**\n   * Handles the touchstart event, recording the touch occurred.\n   * @param ev The touch event.\n   */\n  public onTouchStart(ev: TouchEvent): void {\n    this._lastTouchY = ev.touches[0].pageY;\n  }\n\n  /**\n   * Handles the touchmove event, scrolling the viewport if the position shifted.\n   * @param ev The touch event.\n   */\n  public onTouchMove(ev: TouchEvent): boolean {\n    const deltaY = this._lastTouchY - ev.touches[0].pageY;\n    this._lastTouchY = ev.touches[0].pageY;\n    if (deltaY === 0) {\n      return false;\n    }\n    this._viewportElement.scrollTop += deltaY;\n    return this._bubbleScroll(ev, deltaY);\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionService } from 'browser/services/Services';\nimport { ICoreService } from 'common/services/Services';\n\n/**\n * Prepares text to be pasted into the terminal by normalizing the line endings\n * @param text The pasted text that needs processing before inserting into the terminal\n */\nexport function prepareTextForTerminal(text: string): string {\n  return text.replace(/\\r?\\n/g, '\\r');\n}\n\n/**\n * Bracket text for paste, if necessary, as per https://cirw.in/blog/bracketed-paste\n * @param text The pasted text to bracket\n */\nexport function bracketTextForPaste(text: string, bracketedPasteMode: boolean): string {\n  if (bracketedPasteMode) {\n    return '\\x1b[200~' + text + '\\x1b[201~';\n  }\n  return text;\n}\n\n/**\n * Binds copy functionality to the given terminal.\n * @param ev The original copy event to be handled\n */\nexport function copyHandler(ev: ClipboardEvent, selectionService: ISelectionService): void {\n  if (ev.clipboardData) {\n    ev.clipboardData.setData('text/plain', selectionService.selectionText);\n  }\n  // Prevent or the original text will be copied.\n  ev.preventDefault();\n}\n\n/**\n * Redirect the clipboard's data to the terminal's input handler.\n * @param ev The original paste event to be handled\n * @param term The terminal on which to apply the handled paste event\n */\nexport function handlePasteEvent(ev: ClipboardEvent, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  ev.stopPropagation();\n  if (ev.clipboardData) {\n    const text = ev.clipboardData.getData('text/plain');\n    paste(text, textarea, bracketedPasteMode, coreService);\n  }\n}\n\nexport function paste(text: string, textarea: HTMLTextAreaElement, bracketedPasteMode: boolean, coreService: ICoreService): void {\n  text = prepareTextForTerminal(text);\n  text = bracketTextForPaste(text, bracketedPasteMode);\n  coreService.triggerDataEvent(text, true);\n  textarea.value = '';\n}\n\n/**\n * Moves the textarea under the mouse cursor and focuses it.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n */\nexport function moveTextAreaUnderMouseCursor(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement): void {\n\n  // Calculate textarea position relative to the screen element\n  const pos = screenElement.getBoundingClientRect();\n  const left = ev.clientX - pos.left - 10;\n  const top = ev.clientY - pos.top - 10;\n\n  // Bring textarea at the cursor position\n  textarea.style.position = 'absolute';\n  textarea.style.width = '20px';\n  textarea.style.height = '20px';\n  textarea.style.left = `${left}px`;\n  textarea.style.top = `${top}px`;\n  textarea.style.zIndex = '1000';\n\n  textarea.focus();\n\n  // Reset the terminal textarea's styling\n  // Timeout needs to be long enough for click event to be handled.\n  setTimeout(() => {\n    textarea.style.position = null;\n    textarea.style.width = null;\n    textarea.style.height = null;\n    textarea.style.left = null;\n    textarea.style.top = null;\n    textarea.style.zIndex = null;\n  }, 200);\n}\n\n/**\n * Bind to right-click event and allow right-click copy and paste.\n * @param ev The original right click event to be handled.\n * @param textarea The terminal's textarea.\n * @param selectionService The terminal's selection manager.\n * @param shouldSelectWord If true and there is no selection the current word will be selected\n */\nexport function rightClickHandler(ev: MouseEvent, textarea: HTMLTextAreaElement, screenElement: HTMLElement, selectionService: ISelectionService, shouldSelectWord: boolean): void {\n  moveTextAreaUnderMouseCursor(ev, textarea, screenElement);\n\n  if (shouldSelectWord && !selectionService.isClickInSelection(ev)) {\n    selectionService.selectWordAtCursor(ev);\n  }\n\n  // Get textarea ready to copy from the context menu\n  textarea.value = selectionService.selectionText;\n  textarea.select();\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IInputHandler, IInputHandlingTerminal } from './Types';\nimport { C0, C1 } from 'common/data/EscapeSequences';\nimport { CHARSETS, DEFAULT_CHARSET } from 'common/data/Charsets';\nimport { wcwidth } from 'common/CharWidth';\nimport { EscapeSequenceParser } from 'common/parser/EscapeSequenceParser';\nimport { Disposable } from 'common/Lifecycle';\nimport { concat } from 'common/TypedArrayUtils';\nimport { StringToUtf32, stringFromCodePoint, utf32ToString, Utf8ToUtf32 } from 'common/input/TextDecoder';\nimport { DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IFunctionIdentifier } from 'common/parser/Types';\nimport { NULL_CELL_CODE, NULL_CELL_WIDTH, Attributes, FgFlags, BgFlags, Content } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { IAttributeData, IDisposable } from 'common/Types';\nimport { ICoreService, IBufferService, IOptionsService, ILogService, IDirtyRowService, ICoreMouseService } from 'common/services/Services';\nimport { OscHandler } from 'common/parser/OscParser';\nimport { DcsHandler } from 'common/parser/DcsParser';\n\n/**\n * Map collect to glevel. Used in `selectCharset`.\n */\nconst GLEVEL: {[key: string]: number} = {'(': 0, ')': 1, '*': 2, '+': 3, '-': 1, '.': 2};\n\n/**\n * Max length of the UTF32 input buffer. Real memory consumption is 4 times higher.\n */\nconst MAX_PARSEBUFFER_LENGTH = 131072;\n\n\n/**\n * DCS subparser implementations\n */\n\n/**\n * DCS $ q Pt ST\n *   DECRQSS (https://vt100.net/docs/vt510-rm/DECRQSS.html)\n *   Request Status String (DECRQSS), VT420 and up.\n *   Response: DECRPSS (https://vt100.net/docs/vt510-rm/DECRPSS.html)\n */\nclass DECRQSS implements IDcsHandler {\n  private _data: Uint32Array = new Uint32Array(0);\n\n  constructor(\n    private _bufferService: IBufferService,\n    private _coreService: ICoreService,\n    private _logService: ILogService,\n    private _optionsService: IOptionsService\n  ) { }\n\n  hook(params: IParams): void {\n    this._data = new Uint32Array(0);\n  }\n\n  put(data: Uint32Array, start: number, end: number): void {\n    this._data = concat(this._data, data.subarray(start, end));\n  }\n\n  unhook(success: boolean): void {\n    if (!success) {\n      this._data = new Uint32Array(0);\n      return;\n    }\n    const data = utf32ToString(this._data);\n    this._data = new Uint32Array(0);\n    switch (data) {\n      // valid: DCS 1 $ r Pt ST (xterm)\n      case '\"q': // DECSCA\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0\"q${C0.ESC}\\\\`);\n      case '\"p': // DECSCL\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r61\"p${C0.ESC}\\\\`);\n      case 'r': // DECSTBM\n        const pt = '' + (this._bufferService.buffer.scrollTop + 1) +\n                ';' + (this._bufferService.buffer.scrollBottom + 1) + 'r';\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${pt}${C0.ESC}\\\\`);\n      case 'm': // SGR\n        // TODO: report real settings instead of 0m\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r0m${C0.ESC}\\\\`);\n      case ' q': // DECSCUSR\n        const STYLES: {[key: string]: number} = {'block': 2, 'underline': 4, 'bar': 6};\n        let style = STYLES[this._optionsService.options.cursorStyle];\n        style -= this._optionsService.options.cursorBlink ? 1 : 0;\n        return this._coreService.triggerDataEvent(`${C0.ESC}P1$r${style} q${C0.ESC}\\\\`);\n      default:\n        // invalid: DCS 0 $ r Pt ST (xterm)\n        this._logService.debug('Unknown DCS $q %s', data);\n        this._coreService.triggerDataEvent(`${C0.ESC}P0$r${C0.ESC}\\\\`);\n    }\n  }\n}\n\n/**\n * DCS Ps; Ps| Pt ST\n *   DECUDK (https://vt100.net/docs/vt510-rm/DECUDK.html)\n *   not supported\n */\n\n/**\n * DCS + q Pt ST (xterm)\n *   Request Terminfo String\n *   not implemented\n */\n\n/**\n * DCS + p Pt ST (xterm)\n *   Set Terminfo Data\n *   not supported\n */\n\n\n\n/**\n * The terminal's standard implementation of IInputHandler, this handles all\n * input from the Parser.\n *\n * Refer to http://invisible-island.net/xterm/ctlseqs/ctlseqs.html to understand\n * each function's header comment.\n */\nexport class InputHandler extends Disposable implements IInputHandler {\n  private _parseBuffer: Uint32Array = new Uint32Array(4096);\n  private _stringDecoder: StringToUtf32 = new StringToUtf32();\n  private _utf8Decoder: Utf8ToUtf32 = new Utf8ToUtf32();\n  private _workCell: CellData = new CellData();\n\n  private _onCursorMove = new EventEmitter<void>();\n  public get onCursorMove(): IEvent<void> { return this._onCursorMove.event; }\n  private _onLineFeed = new EventEmitter<void>();\n  public get onLineFeed(): IEvent<void> { return this._onLineFeed.event; }\n  private _onScroll = new EventEmitter<number>();\n  public get onScroll(): IEvent<number> { return this._onScroll.event; }\n\n  constructor(\n    protected _terminal: IInputHandlingTerminal,\n    private readonly _bufferService: IBufferService,\n    private readonly _coreService: ICoreService,\n    private readonly _dirtyRowService: IDirtyRowService,\n    private readonly _logService: ILogService,\n    private readonly _optionsService: IOptionsService,\n    private readonly _coreMouseService: ICoreMouseService,\n    private readonly _parser: IEscapeSequenceParser = new EscapeSequenceParser())\n  {\n    super();\n\n    this.register(this._parser);\n\n    /**\n     * custom fallback handlers\n     */\n    this._parser.setCsiHandlerFallback((ident, params) => {\n      this._logService.debug('Unknown CSI code: ', { identifier: this._parser.identToString(ident), params: params.toArray() });\n    });\n    this._parser.setEscHandlerFallback(ident => {\n      this._logService.debug('Unknown ESC code: ', { identifier: this._parser.identToString(ident) });\n    });\n    this._parser.setExecuteHandlerFallback(code => {\n      this._logService.debug('Unknown EXECUTE code: ', { code });\n    });\n    this._parser.setOscHandlerFallback((identifier, action, data) => {\n      this._logService.debug('Unknown OSC code: ', { identifier, action, data });\n    });\n    this._parser.setDcsHandlerFallback((ident, action, payload) => {\n      if (action === 'HOOK') {\n        payload = payload.toArray();\n      }\n      this._logService.debug('Unknown DCS code: ', { identifier: this._parser.identToString(ident), action, payload });\n    });\n\n    /**\n     * print handler\n     */\n    this._parser.setPrintHandler((data, start, end) => this.print(data, start, end));\n\n    /**\n     * CSI handler\n     */\n    this._parser.setCsiHandler({final: '@'}, params => this.insertChars(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: '@'}, params => this.scrollLeft(params));\n    this._parser.setCsiHandler({final: 'A'}, params => this.cursorUp(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'A'}, params => this.scrollRight(params));\n    this._parser.setCsiHandler({final: 'B'}, params => this.cursorDown(params));\n    this._parser.setCsiHandler({final: 'C'}, params => this.cursorForward(params));\n    this._parser.setCsiHandler({final: 'D'}, params => this.cursorBackward(params));\n    this._parser.setCsiHandler({final: 'E'}, params => this.cursorNextLine(params));\n    this._parser.setCsiHandler({final: 'F'}, params => this.cursorPrecedingLine(params));\n    this._parser.setCsiHandler({final: 'G'}, params => this.cursorCharAbsolute(params));\n    this._parser.setCsiHandler({final: 'H'}, params => this.cursorPosition(params));\n    this._parser.setCsiHandler({final: 'I'}, params => this.cursorForwardTab(params));\n    this._parser.setCsiHandler({final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'J'}, params => this.eraseInDisplay(params));\n    this._parser.setCsiHandler({final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'K'}, params => this.eraseInLine(params));\n    this._parser.setCsiHandler({final: 'L'}, params => this.insertLines(params));\n    this._parser.setCsiHandler({final: 'M'}, params => this.deleteLines(params));\n    this._parser.setCsiHandler({final: 'P'}, params => this.deleteChars(params));\n    this._parser.setCsiHandler({final: 'S'}, params => this.scrollUp(params));\n    this._parser.setCsiHandler({final: 'T'}, params => this.scrollDown(params));\n    this._parser.setCsiHandler({final: 'X'}, params => this.eraseChars(params));\n    this._parser.setCsiHandler({final: 'Z'}, params => this.cursorBackwardTab(params));\n    this._parser.setCsiHandler({final: '`'}, params => this.charPosAbsolute(params));\n    this._parser.setCsiHandler({final: 'a'}, params => this.hPositionRelative(params));\n    this._parser.setCsiHandler({final: 'b'}, params => this.repeatPrecedingCharacter(params));\n    this._parser.setCsiHandler({final: 'c'}, params => this.sendDeviceAttributesPrimary(params));\n    this._parser.setCsiHandler({prefix: '>', final: 'c'}, params => this.sendDeviceAttributesSecondary(params));\n    this._parser.setCsiHandler({final: 'd'}, params => this.linePosAbsolute(params));\n    this._parser.setCsiHandler({final: 'e'}, params => this.vPositionRelative(params));\n    this._parser.setCsiHandler({final: 'f'}, params => this.hVPosition(params));\n    this._parser.setCsiHandler({final: 'g'}, params => this.tabClear(params));\n    this._parser.setCsiHandler({final: 'h'}, params => this.setMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'h'}, params => this.setModePrivate(params));\n    this._parser.setCsiHandler({final: 'l'}, params => this.resetMode(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'l'}, params => this.resetModePrivate(params));\n    this._parser.setCsiHandler({final: 'm'}, params => this.charAttributes(params));\n    this._parser.setCsiHandler({final: 'n'}, params => this.deviceStatus(params));\n    this._parser.setCsiHandler({prefix: '?', final: 'n'}, params => this.deviceStatusPrivate(params));\n    this._parser.setCsiHandler({intermediates: '!', final: 'p'}, params => this.softReset(params));\n    this._parser.setCsiHandler({intermediates: ' ', final: 'q'}, params => this.setCursorStyle(params));\n    this._parser.setCsiHandler({final: 'r'}, params => this.setScrollRegion(params));\n    this._parser.setCsiHandler({final: 's'}, params => this.saveCursor(params));\n    this._parser.setCsiHandler({final: 'u'}, params => this.restoreCursor(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '}'}, params => this.insertColumns(params));\n    this._parser.setCsiHandler({intermediates: '\\'', final: '~'}, params => this.deleteColumns(params));\n\n    /**\n     * execute handler\n     */\n    this._parser.setExecuteHandler(C0.BEL, () => this.bell());\n    this._parser.setExecuteHandler(C0.LF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.VT, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.FF, () => this.lineFeed());\n    this._parser.setExecuteHandler(C0.CR, () => this.carriageReturn());\n    this._parser.setExecuteHandler(C0.BS, () => this.backspace());\n    this._parser.setExecuteHandler(C0.HT, () => this.tab());\n    this._parser.setExecuteHandler(C0.SO, () => this.shiftOut());\n    this._parser.setExecuteHandler(C0.SI, () => this.shiftIn());\n    // FIXME:   What do to with missing? Old code just added those to print.\n\n    this._parser.setExecuteHandler(C1.IND, () => this.index());\n    this._parser.setExecuteHandler(C1.NEL, () => this.nextLine());\n    this._parser.setExecuteHandler(C1.HTS, () => this.tabSet());\n\n    /**\n     * OSC handler\n     */\n    //   0 - icon name + title\n    this._parser.setOscHandler(0, new OscHandler((data: string) => this.setTitle(data)));\n    //   1 - icon name\n    //   2 - title\n    this._parser.setOscHandler(2, new OscHandler((data: string) => this.setTitle(data)));\n    //   3 - set property X in the form \"prop=value\"\n    //   4 - Change Color Number\n    //   5 - Change Special Color Number\n    //   6 - Enable/disable Special Color Number c\n    //   7 - current directory? (not in xterm spec, see https://gitlab.com/gnachman/iterm2/issues/3939)\n    //  10 - Change VT100 text foreground color to Pt.\n    //  11 - Change VT100 text background color to Pt.\n    //  12 - Change text cursor color to Pt.\n    //  13 - Change mouse foreground color to Pt.\n    //  14 - Change mouse background color to Pt.\n    //  15 - Change Tektronix foreground color to Pt.\n    //  16 - Change Tektronix background color to Pt.\n    //  17 - Change highlight background color to Pt.\n    //  18 - Change Tektronix cursor color to Pt.\n    //  19 - Change highlight foreground color to Pt.\n    //  46 - Change Log File to Pt.\n    //  50 - Set Font to Pt.\n    //  51 - reserved for Emacs shell.\n    //  52 - Manipulate Selection Data.\n    // 104 ; c - Reset Color Number c.\n    // 105 ; c - Reset Special Color Number c.\n    // 106 ; c; f - Enable/disable Special Color Number c.\n    // 110 - Reset VT100 text foreground color.\n    // 111 - Reset VT100 text background color.\n    // 112 - Reset text cursor color.\n    // 113 - Reset mouse foreground color.\n    // 114 - Reset mouse background color.\n    // 115 - Reset Tektronix foreground color.\n    // 116 - Reset Tektronix background color.\n    // 117 - Reset highlight color.\n    // 118 - Reset Tektronix cursor color.\n    // 119 - Reset highlight foreground color.\n\n    /**\n     * ESC handlers\n     */\n    this._parser.setEscHandler({final: '7'}, () => this.saveCursor());\n    this._parser.setEscHandler({final: '8'}, () => this.restoreCursor());\n    this._parser.setEscHandler({final: 'D'}, () => this.index());\n    this._parser.setEscHandler({final: 'E'}, () => this.nextLine());\n    this._parser.setEscHandler({final: 'H'}, () => this.tabSet());\n    this._parser.setEscHandler({final: 'M'}, () => this.reverseIndex());\n    this._parser.setEscHandler({final: '='}, () => this.keypadApplicationMode());\n    this._parser.setEscHandler({final: '>'}, () => this.keypadNumericMode());\n    this._parser.setEscHandler({final: 'c'}, () => this.reset());\n    this._parser.setEscHandler({final: 'n'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: 'o'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '|'}, () => this.setgLevel(3));\n    this._parser.setEscHandler({final: '}'}, () => this.setgLevel(2));\n    this._parser.setEscHandler({final: '~'}, () => this.setgLevel(1));\n    this._parser.setEscHandler({intermediates: '%', final: '@'}, () => this.selectDefaultCharset());\n    this._parser.setEscHandler({intermediates: '%', final: 'G'}, () => this.selectDefaultCharset());\n    for (const flag in CHARSETS) {\n      this._parser.setEscHandler({intermediates: '(', final: flag}, () => this.selectCharset('(' + flag));\n      this._parser.setEscHandler({intermediates: ')', final: flag}, () => this.selectCharset(')' + flag));\n      this._parser.setEscHandler({intermediates: '*', final: flag}, () => this.selectCharset('*' + flag));\n      this._parser.setEscHandler({intermediates: '+', final: flag}, () => this.selectCharset('+' + flag));\n      this._parser.setEscHandler({intermediates: '-', final: flag}, () => this.selectCharset('-' + flag));\n      this._parser.setEscHandler({intermediates: '.', final: flag}, () => this.selectCharset('.' + flag));\n      this._parser.setEscHandler({intermediates: '/', final: flag}, () => this.selectCharset('/' + flag)); // TODO: supported?\n    }\n    this._parser.setEscHandler({intermediates: '#', final: '8'}, () => this.screenAlignmentPattern());\n\n    /**\n     * error handler\n     */\n    this._parser.setErrorHandler((state: IParsingState) => {\n      this._logService.error('Parsing error: ', state);\n      return state;\n    });\n\n    /**\n     * DCS handler\n     */\n    this._parser.setDcsHandler({intermediates: '$', final: 'q'}, new DECRQSS(this._bufferService, this._coreService, this._logService, this._optionsService));\n  }\n\n  public dispose(): void {\n    super.dispose();\n  }\n\n  public parse(data: string | Uint8Array): void {\n    let buffer = this._bufferService.buffer;\n    const cursorStartX = buffer.x;\n    const cursorStartY = buffer.y;\n\n    this._logService.debug('parsing data', data);\n\n    // resize input buffer if needed\n    if (this._parseBuffer.length < data.length) {\n      if (this._parseBuffer.length < MAX_PARSEBUFFER_LENGTH) {\n        this._parseBuffer = new Uint32Array(Math.min(data.length, MAX_PARSEBUFFER_LENGTH));\n      }\n    }\n\n    // process big data in smaller chunks\n    if (data.length > MAX_PARSEBUFFER_LENGTH) {\n      for (let i = 0; i < data.length; i += MAX_PARSEBUFFER_LENGTH) {\n        const end = i + MAX_PARSEBUFFER_LENGTH < data.length ? i + MAX_PARSEBUFFER_LENGTH : data.length;\n        const len = (typeof data === 'string')\n          ? this._stringDecoder.decode(data.substring(i, end), this._parseBuffer)\n          : this._utf8Decoder.decode(data.subarray(i, end), this._parseBuffer);\n        this._parser.parse(this._parseBuffer, len);\n      }\n    } else {\n      const len = (typeof data === 'string')\n        ? this._stringDecoder.decode(data, this._parseBuffer)\n        : this._utf8Decoder.decode(data, this._parseBuffer);\n      this._parser.parse(this._parseBuffer, len);\n    }\n\n    buffer = this._bufferService.buffer;\n    if (buffer.x !== cursorStartX || buffer.y !== cursorStartY) {\n      this._onCursorMove.fire();\n    }\n    this._terminal.refresh(this._dirtyRowService.start, this._dirtyRowService.end);\n  }\n\n  public print(data: Uint32Array, start: number, end: number): void {\n    let code: number;\n    let chWidth: number;\n    const buffer = this._bufferService.buffer;\n    const charset = this._terminal.charset;\n    const screenReaderMode = this._optionsService.options.screenReaderMode;\n    const cols = this._bufferService.cols;\n    const wraparoundMode = this._terminal.wraparoundMode;\n    const insertMode = this._terminal.insertMode;\n    const curAttr = this._terminal.curAttrData;\n    let bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n\n    this._dirtyRowService.markDirty(buffer.y);\n    for (let pos = start; pos < end; ++pos) {\n      code = data[pos];\n\n      // calculate print space\n      // expensive call, therefore we save width in line buffer\n      chWidth = wcwidth(code);\n\n      // get charset replacement character\n      // charset is only defined for ASCII, therefore we only\n      // search for an replacement char if code < 127\n      if (code < 127 && charset) {\n        const ch = charset[String.fromCharCode(code)];\n        if (ch) {\n          code = ch.charCodeAt(0);\n        }\n      }\n\n      if (screenReaderMode) {\n        this._terminal.onA11yCharEmitter.fire(stringFromCodePoint(code));\n      }\n\n      // insert combining char at last cursor position\n      // FIXME: needs handling after cursor jumps\n      // buffer.x should never be 0 for a combining char\n      // since they always follow a cell consuming char\n      // therefore we can test for buffer.x to avoid overflow left\n      if (!chWidth && buffer.x) {\n        if (!bufferRow.getWidth(buffer.x - 1)) {\n          // found empty cell after fullwidth, need to go 2 cells back\n          // it is save to step 2 cells back here\n          // since an empty cell is only set by fullwidth chars\n          bufferRow.addCodepointToCell(buffer.x - 2, code);\n        } else {\n          bufferRow.addCodepointToCell(buffer.x - 1, code);\n        }\n        continue;\n      }\n\n      // goto next line if ch would overflow\n      // TODO: needs a global min terminal width of 2\n      // FIXME: additionally ensure chWidth fits into a line\n      //   -->  maybe forbid cols<xy at higher level as it would\n      //        introduce a bad runtime penalty here\n      if (buffer.x + chWidth - 1 >= cols) {\n        // autowrap - DECAWM\n        // automatically wraps to the beginning of the next line\n        if (wraparoundMode) {\n          buffer.x = 0;\n          buffer.y++;\n          if (buffer.y === buffer.scrollBottom + 1) {\n            buffer.y--;\n            this._terminal.scroll(true);\n          } else {\n            if (buffer.y >= this._bufferService.rows) {\n              buffer.y = this._bufferService.rows - 1;\n            }\n            // The line already exists (eg. the initial viewport), mark it as a\n            // wrapped line\n            buffer.lines.get(buffer.y).isWrapped = true;\n          }\n          // row changed, get it again\n          bufferRow = buffer.lines.get(buffer.y + buffer.ybase);\n        } else {\n          buffer.x = cols - 1;\n          if (chWidth === 2) {\n            // FIXME: check for xterm behavior\n            // What to do here? We got a wide char that does not fit into last cell\n            continue;\n          }\n        }\n      }\n\n      // insert mode: move characters to right\n      if (insertMode) {\n        // right shift cells according to the width\n        bufferRow.insertCells(buffer.x, chWidth, buffer.getNullCell(curAttr));\n        // test last cell - since the last cell has only room for\n        // a halfwidth char any fullwidth shifted there is lost\n        // and will be set to empty cell\n        if (bufferRow.getWidth(cols - 1) === 2) {\n          bufferRow.setCellFromCodePoint(cols - 1, NULL_CELL_CODE, NULL_CELL_WIDTH, curAttr.fg, curAttr.bg);\n        }\n      }\n\n      // write current char to buffer and advance cursor\n      bufferRow.setCellFromCodePoint(buffer.x++, code, chWidth, curAttr.fg, curAttr.bg);\n\n      // fullwidth char - also set next cell to placeholder stub and advance cursor\n      // for graphemes bigger than fullwidth we can simply loop to zero\n      // we already made sure above, that buffer.x + chWidth will not overflow right\n      if (chWidth > 0) {\n        while (--chWidth) {\n          // other than a regular empty cell a cell following a wide char has no width\n          bufferRow.setCellFromCodePoint(buffer.x++, 0, 0, curAttr.fg, curAttr.bg);\n        }\n      }\n    }\n    // store last char in Parser.precedingCodepoint for REP to work correctly\n    // This needs to check whether:\n    //  - fullwidth + surrogates: reset\n    //  - combining: only base char gets carried on (bug in xterm?)\n    if (end) {\n      bufferRow.loadCell(buffer.x - 1, this._workCell);\n      if (this._workCell.getWidth() === 2 || this._workCell.getCode() > 0xFFFF) {\n        this._parser.precedingCodepoint = 0;\n      } else if (this._workCell.isCombined()) {\n        this._parser.precedingCodepoint = this._workCell.getChars().charCodeAt(0);\n      } else {\n        this._parser.precedingCodepoint = this._workCell.content;\n      }\n    }\n    this._dirtyRowService.markDirty(buffer.y);\n  }\n\n  /**\n   * Forward addCsiHandler from parser.\n   */\n  public addCsiHandler(id: IFunctionIdentifier, callback: (params: IParams) => boolean): IDisposable {\n    return this._parser.addCsiHandler(id, callback);\n  }\n\n  /**\n   * Forward addDcsHandler from parser.\n   */\n  public addDcsHandler(id: IFunctionIdentifier, callback: (data: string, param: IParams) => boolean): IDisposable {\n    return this._parser.addDcsHandler(id, new DcsHandler(callback));\n  }\n\n  /**\n   * Forward addEscHandler from parser.\n   */\n  public addEscHandler(id: IFunctionIdentifier, callback: () => boolean): IDisposable {\n    return this._parser.addEscHandler(id, callback);\n  }\n\n  /**\n   * Forward addOscHandler from parser.\n   */\n  public addOscHandler(ident: number, callback: (data: string) => boolean): IDisposable {\n    return this._parser.addOscHandler(ident, new OscHandler(callback));\n  }\n\n  /**\n   * BEL\n   * Bell (Ctrl-G).\n   */\n  public bell(): void {\n    this._terminal.bell();\n  }\n\n  /**\n   * LF\n   * Line Feed or New Line (NL).  (LF  is Ctrl-J).\n   */\n  public lineFeed(): void {\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (this._optionsService.options.convertEol) {\n      buffer.x = 0;\n    }\n    buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    // If the end of the line is hit, prevent this action from wrapping around to the next line.\n    if (buffer.x >= this._bufferService.cols) {\n      buffer.x--;\n    }\n\n    this._onLineFeed.fire();\n  }\n\n  /**\n   * CR\n   * Carriage Return (Ctrl-M).\n   */\n  public carriageReturn(): void {\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * BS\n   * Backspace (Ctrl-H).\n   */\n  public backspace(): void {\n    this._restrictCursor();\n    if (this._bufferService.buffer.x > 0) {\n      this._bufferService.buffer.x--;\n    }\n  }\n\n  /**\n   * TAB\n   * Horizontal Tab (HT) (Ctrl-I).\n   */\n  public tab(): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    const originalX = this._bufferService.buffer.x;\n    this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    if (this._optionsService.options.screenReaderMode) {\n      this._terminal.onA11yTabEmitter.fire(this._bufferService.buffer.x - originalX);\n    }\n  }\n\n  /**\n   * SO\n   * Shift Out (Ctrl-N) -> Switch to Alternate Character Set.  This invokes the\n   * G1 character set.\n   */\n  public shiftOut(): void {\n    this._terminal.setgLevel(1);\n  }\n\n  /**\n   * SI\n   * Shift In (Ctrl-O) -> Switch to Standard Character Set.  This invokes the G0\n   * character set (the default).\n   */\n  public shiftIn(): void {\n    this._terminal.setgLevel(0);\n  }\n\n  /**\n   * Restrict cursor to viewport size / scroll margin (origin mode).\n   */\n  private _restrictCursor(): void {\n    this._bufferService.buffer.x = Math.min(this._bufferService.cols - 1, Math.max(0, this._bufferService.buffer.x));\n    this._bufferService.buffer.y = this._terminal.originMode\n      ? Math.min(this._bufferService.buffer.scrollBottom, Math.max(this._bufferService.buffer.scrollTop, this._bufferService.buffer.y))\n      : Math.min(this._bufferService.rows - 1, Math.max(0, this._bufferService.buffer.y));\n  }\n\n  /**\n   * Set absolute cursor position.\n   */\n  private _setCursor(x: number, y: number): void {\n    if (this._terminal.originMode) {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = this._bufferService.buffer.scrollTop + y;\n    } else {\n      this._bufferService.buffer.x = x;\n      this._bufferService.buffer.y = y;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * Set relative cursor position.\n   */\n  private _moveCursor(x: number, y: number): void {\n    // for relative changes we have to make sure we are within 0 .. cols/rows - 1\n    // before calculating the new position\n    this._restrictCursor();\n    this._setCursor(this._bufferService.buffer.x + x, this._bufferService.buffer.y + y);\n  }\n\n  /**\n   * CSI Ps A\n   * Cursor Up Ps Times (default = 1) (CUU).\n   */\n  public cursorUp(params: IParams): void {\n    // stop at scrollTop\n    const diffToTop = this._bufferService.buffer.y - this._bufferService.buffer.scrollTop;\n    if (diffToTop >= 0) {\n      this._moveCursor(0, -Math.min(diffToTop, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, -(params.params[0] || 1));\n    }\n  }\n\n  /**\n   * CSI Ps B\n   * Cursor Down Ps Times (default = 1) (CUD).\n   */\n  public cursorDown(params: IParams): void {\n    // stop at scrollBottom\n    const diffToBottom = this._bufferService.buffer.scrollBottom - this._bufferService.buffer.y;\n    if (diffToBottom >= 0) {\n      this._moveCursor(0, Math.min(diffToBottom, params.params[0] || 1));\n    } else {\n      this._moveCursor(0, params.params[0] || 1);\n    }\n  }\n\n  /**\n   * CSI Ps C\n   * Cursor Forward Ps Times (default = 1) (CUF).\n   */\n  public cursorForward(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Ps D\n   * Cursor Backward Ps Times (default = 1) (CUB).\n   */\n  public cursorBackward(params: IParams): void {\n    this._moveCursor(-(params.params[0] || 1), 0);\n  }\n\n  /**\n   * CSI Ps E\n   * Cursor Next Line Ps Times (default = 1) (CNL).\n   * Other than cursorDown (CUD) also set the cursor to first column.\n   */\n  public cursorNextLine(params: IParams): void {\n    this.cursorDown(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps F\n   * Cursor Previous Line Ps Times (default = 1) (CPL).\n   * Other than cursorUp (CUU) also set the cursor to first column.\n   */\n  public cursorPrecedingLine(params: IParams): void {\n    this.cursorUp(params);\n    this._bufferService.buffer.x = 0;\n  }\n\n  /**\n   * CSI Ps G\n   * Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n   */\n  public cursorCharAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps ; Ps H\n   * Cursor Position [row;column] (default = [1,1]) (CUP).\n   */\n  public cursorPosition(params: IParams): void {\n    this._setCursor(\n      // col\n      (params.length >= 2) ? (params.params[1] || 1) - 1 : 0,\n      // row\n      (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm `  Character Position Absolute\n   *   [column] (default = [row,1]) (HPA).\n   * Currently same functionality as CHA.\n   */\n  public charPosAbsolute(params: IParams): void {\n    this._setCursor((params.params[0] || 1) - 1, this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Pm a  Character Position Relative\n   *   [columns] (default = [row,col+1]) (HPR)\n   * Currently same functionality as CUF.\n   */\n  public hPositionRelative(params: IParams): void {\n    this._moveCursor(params.params[0] || 1, 0);\n  }\n\n  /**\n   * CSI Pm d  Vertical Position Absolute (VPA)\n   *   [row] (default = [1,column])\n   */\n  public linePosAbsolute(params: IParams): void {\n    this._setCursor(this._bufferService.buffer.x, (params.params[0] || 1) - 1);\n  }\n\n  /**\n   * CSI Pm e  Vertical Position Relative (VPR)\n   *   [rows] (default = [row+1,column])\n   * reuse CSI Ps B ?\n   */\n  public vPositionRelative(params: IParams): void {\n    this._moveCursor(0, params.params[0] || 1);\n  }\n\n  /**\n   * CSI Ps ; Ps f\n   *   Horizontal and Vertical Position [row;column] (default =\n   *   [1,1]) (HVP).\n   *   Same as CUP.\n   */\n  public hVPosition(params: IParams): void {\n    this.cursorPosition(params);\n  }\n\n  /**\n   * CSI Ps g  Tab Clear (TBC).\n   *     Ps = 0  -> Clear Current Column (default).\n   *     Ps = 3  -> Clear All.\n   * Potentially:\n   *   Ps = 2  -> Clear Stops on Line.\n   *   http://vt100.net/annarbor/aaa-ug/section6.html\n   */\n  public tabClear(params: IParams): void {\n    const param = params.params[0];\n    if (param === 0) {\n      delete this._bufferService.buffer.tabs[this._bufferService.buffer.x];\n    } else if (param === 3) {\n      this._bufferService.buffer.tabs = {};\n    }\n  }\n\n  /**\n   * CSI Ps I\n   *   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n   */\n  public cursorForwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n    while (param--) {\n      this._bufferService.buffer.x = this._bufferService.buffer.nextStop();\n    }\n  }\n\n  /**\n   * CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n   */\n  public cursorBackwardTab(params: IParams): void {\n    if (this._bufferService.buffer.x >= this._bufferService.cols) {\n      return;\n    }\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.x = buffer.prevStop();\n    }\n  }\n\n\n  /**\n   * Helper method to erase cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal.\n   * @param y row index\n   * @param start first cell index to be erased\n   * @param end   end - 1 is last erased cell\n   */\n  private _eraseInBufferLine(y: number, start: number, end: number, clearWrap: boolean = false): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.replaceCells(\n      start,\n      end,\n      this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n    );\n    if (clearWrap) {\n      line.isWrapped = false;\n    }\n  }\n\n  /**\n   * Helper method to reset cells in a terminal row.\n   * The cell gets replaced with the eraseChar of the terminal and the isWrapped property is set to false.\n   * @param y row index\n   */\n  private _resetBufferLine(y: number): void {\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.ybase + y);\n    line.fill(this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData()));\n    line.isWrapped = false;\n  }\n\n  /**\n   * CSI Ps J  Erase in Display (ED).\n   *     Ps = 0  -> Erase Below (default).\n   *     Ps = 1  -> Erase Above.\n   *     Ps = 2  -> Erase All.\n   *     Ps = 3  -> Erase Saved Lines (xterm).\n   * CSI ? Ps J\n   *   Erase in Display (DECSED).\n   *     Ps = 0  -> Selective Erase Below (default).\n   *     Ps = 1  -> Selective Erase Above.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInDisplay(params: IParams): void {\n    this._restrictCursor();\n    let j;\n    switch (params.params[0]) {\n      case 0:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        this._eraseInBufferLine(j++, this._bufferService.buffer.x, this._bufferService.cols, this._bufferService.buffer.x === 0);\n        for (; j < this._bufferService.rows; j++) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(j);\n        break;\n      case 1:\n        j = this._bufferService.buffer.y;\n        this._dirtyRowService.markDirty(j);\n        // Deleted front part of line and everything before. This line will no longer be wrapped.\n        this._eraseInBufferLine(j, 0, this._bufferService.buffer.x + 1, true);\n        if (this._bufferService.buffer.x + 1 >= this._bufferService.cols) {\n          // Deleted entire previous line. This next line can no longer be wrapped.\n          this._bufferService.buffer.lines.get(j + 1).isWrapped = false;\n        }\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 2:\n        j = this._bufferService.rows;\n        this._dirtyRowService.markDirty(j - 1);\n        while (j--) {\n          this._resetBufferLine(j);\n        }\n        this._dirtyRowService.markDirty(0);\n        break;\n      case 3:\n        // Clear scrollback (everything not in viewport)\n        const scrollBackSize = this._bufferService.buffer.lines.length - this._bufferService.rows;\n        if (scrollBackSize > 0) {\n          this._bufferService.buffer.lines.trimStart(scrollBackSize);\n          this._bufferService.buffer.ybase = Math.max(this._bufferService.buffer.ybase - scrollBackSize, 0);\n          this._bufferService.buffer.ydisp = Math.max(this._bufferService.buffer.ydisp - scrollBackSize, 0);\n          // Force a scroll event to refresh viewport\n          this._onScroll.fire(0);\n        }\n        break;\n    }\n  }\n\n  /**\n   * CSI Ps K  Erase in Line (EL).\n   *     Ps = 0  -> Erase to Right (default).\n   *     Ps = 1  -> Erase to Left.\n   *     Ps = 2  -> Erase All.\n   * CSI ? Ps K\n   *   Erase in Line (DECSEL).\n   *     Ps = 0  -> Selective Erase to Right (default).\n   *     Ps = 1  -> Selective Erase to Left.\n   *     Ps = 2  -> Selective Erase All.\n   */\n  public eraseInLine(params: IParams): void {\n    this._restrictCursor();\n    switch (params.params[0]) {\n      case 0:\n        this._eraseInBufferLine(this._bufferService.buffer.y, this._bufferService.buffer.x, this._bufferService.cols);\n        break;\n      case 1:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.buffer.x + 1);\n        break;\n      case 2:\n        this._eraseInBufferLine(this._bufferService.buffer.y, 0, this._bufferService.cols);\n        break;\n    }\n    this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n  }\n\n  /**\n   * CSI Ps L\n   * Insert Ps Line(s) (default = 1) (IL).\n   */\n  public insertLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    const scrollBottomRowsOffset = this._bufferService.rows - 1 - buffer.scrollBottom;\n    const scrollBottomAbsolute = this._bufferService.rows - 1 + buffer.ybase - scrollBottomRowsOffset + 1;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1L\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(scrollBottomAbsolute - 1, 1);\n      buffer.lines.splice(row, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps M\n   * Delete Ps Line(s) (default = 1) (DL).\n   */\n  public deleteLines(params: IParams): void {\n    this._restrictCursor();\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n\n    const row: number = buffer.y + buffer.ybase;\n\n    let j: number;\n    j = this._bufferService.rows - 1 - buffer.scrollBottom;\n    j = this._bufferService.rows - 1 + buffer.ybase - j;\n    while (param--) {\n      // test: echo -e '\\e[44m\\e[1M\\e[0m'\n      // blankLine(true) - xterm/linux behavior\n      buffer.lines.splice(row, 1);\n      buffer.lines.splice(j, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n\n    this._dirtyRowService.markRangeDirty(buffer.y, buffer.scrollBottom);\n    buffer.x = 0; // see https://vt100.net/docs/vt220-rm/chapter4.html - vt220 only?\n  }\n\n  /**\n   * CSI Ps @\n   * Insert Ps (Blank) Character(s) (default = 1) (ICH).\n   */\n  public insertChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.insertCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps P\n   * Delete Ps Character(s) (default = 1) (DCH).\n   */\n  public deleteChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.deleteCells(\n        this._bufferService.buffer.x,\n        params.params[0] || 1,\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n   */\n  public scrollUp(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 0, buffer.getBlankLine(this._terminal.eraseAttrData()));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n   */\n  public scrollDown(params: IParams): void {\n    let param = params.params[0] || 1;\n\n    // make buffer local for faster access\n    const buffer = this._bufferService.buffer;\n\n    while (param--) {\n      buffer.lines.splice(buffer.ybase + buffer.scrollBottom, 1);\n      buffer.lines.splice(buffer.ybase + buffer.scrollTop, 0, buffer.getBlankLine(DEFAULT_ATTR_DATA));\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP @  Scroll left Ps columns (default = 1) (SL) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/00\n   * Parameter default value: Pn = 1\n   * SL causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the left; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always left shift (no line orientation setting respected)\n   */\n  public scrollLeft(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps SP A  Scroll right Ps columns (default = 1) (SR) ECMA-48\n   *\n   * Notation: (Pn)\n   * Representation: CSI Pn 02/00 04/01\n   * Parameter default value: Pn = 1\n   * SR causes the data in the presentation component to be moved by n character positions\n   * if the line orientation is horizontal, or by n line positions if the line orientation\n   * is vertical, such that the data appear to move to the right; where n equals the value of Pn.\n   * The active presentation position is not affected by this control function.\n   *\n   * Supported:\n   *   - always right shift (no line orientation setting respected)\n   */\n  public scrollRight(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.insertCells(0, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' }\n   * Insert Ps Column(s) (default = 1) (DECIC), VT420 and up.\n   */\n  public insertColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = this._bufferService.buffer.lines.get(buffer.ybase + y);\n      line.insertCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Pm ' ~\n   * Delete Ps Column(s) (default = 1) (DECDC), VT420 and up.\n   */\n  public deleteColumns(params: IParams): void {\n    const buffer = this._bufferService.buffer;\n    if (buffer.y > buffer.scrollBottom || buffer.y < buffer.scrollTop) {\n      return;\n    }\n    const param = params.params[0] || 1;\n    for (let y = buffer.scrollTop; y <= buffer.scrollBottom; ++y) {\n      const line = buffer.lines.get(buffer.ybase + y);\n      line.deleteCells(buffer.x, param, buffer.getNullCell(this._terminal.eraseAttrData()));\n      line.isWrapped = false;\n    }\n    this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n  }\n\n  /**\n   * CSI Ps X\n   * Erase Ps Character(s) (default = 1) (ECH).\n   */\n  public eraseChars(params: IParams): void {\n    this._restrictCursor();\n    const line = this._bufferService.buffer.lines.get(this._bufferService.buffer.y + this._bufferService.buffer.ybase);\n    if (line) {\n      line.replaceCells(\n        this._bufferService.buffer.x,\n        this._bufferService.buffer.x + (params.params[0] || 1),\n        this._bufferService.buffer.getNullCell(this._terminal.eraseAttrData())\n      );\n      this._dirtyRowService.markDirty(this._bufferService.buffer.y);\n    }\n  }\n\n  /**\n   * CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n   * From ECMA 48 (@see http://www.ecma-international.org/publications/files/ECMA-ST/Ecma-048.pdf)\n   *    Notation: (Pn)\n   *    Representation: CSI Pn 06/02\n   *    Parameter default value: Pn = 1\n   *    REP is used to indicate that the preceding character in the data stream,\n   *    if it is a graphic character (represented by one or more bit combinations) including SPACE,\n   *    is to be repeated n times, where n equals the value of Pn.\n   *    If the character preceding REP is a control function or part of a control function,\n   *    the effect of REP is not defined by this Standard.\n   *\n   * Since we propagate the terminal as xterm-256color we have to follow xterm's behavior:\n   *    - fullwidth + surrogate chars are ignored\n   *    - for combining chars only the base char gets repeated\n   *    - text attrs are applied normally\n   *    - wrap around is respected\n   *    - any valid sequence resets the carried forward char\n   *\n   * Note: To get reset on a valid sequence working correctly without much runtime penalty,\n   * the preceding codepoint is stored on the parser in `this.print` and reset during `parser.parse`.\n   */\n  public repeatPrecedingCharacter(params: IParams): void {\n    if (!this._parser.precedingCodepoint) {\n      return;\n    }\n    // call print to insert the chars and handle correct wrapping\n    const length = params.params[0] || 1;\n    const data = new Uint32Array(length);\n    for (let i = 0; i < length; ++i) {\n      data[i] = this._parser.precedingCodepoint;\n    }\n    this.print(data, 0, data.length);\n  }\n\n  /**\n   * CSI Ps c  Send Device Attributes (Primary DA).\n   *     Ps = 0  or omitted -> request attributes from terminal.  The\n   *     response depends on the decTerminalID resource setting.\n   *     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n   *     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n   *     -> CSI ? 6 c  (``VT102'')\n   *     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n   *   The VT100-style response parameters do not mean anything by\n   *   themselves.  VT220 parameters do, telling the host what fea-\n   *   tures the terminal supports:\n   *     Ps = 1  -> 132-columns.\n   *     Ps = 2  -> Printer.\n   *     Ps = 6  -> Selective erase.\n   *     Ps = 8  -> User-defined keys.\n   *     Ps = 9  -> National replacement character sets.\n   *     Ps = 1 5  -> Technical characters.\n   *     Ps = 2 2  -> ANSI color, e.g., VT525.\n   *     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n   * CSI > Ps c\n   *   Send Device Attributes (Secondary DA).\n   *     Ps = 0  or omitted -> request the terminal's identification\n   *     code.  The response depends on the decTerminalID resource set-\n   *     ting.  It should apply only to VT220 and up, but xterm extends\n   *     this to VT100.\n   *     -> CSI  > Pp ; Pv ; Pc c\n   *   where Pp denotes the terminal type\n   *     Pp = 0  -> ``VT100''.\n   *     Pp = 1  -> ``VT220''.\n   *   and Pv is the firmware version (for xterm, this was originally\n   *   the XFree86 patch number, starting with 95).  In a DEC termi-\n   *   nal, Pc indicates the ROM cartridge registration number and is\n   *   always zero.\n   * More information:\n   *   xterm/charproc.c - line 2012, for more information.\n   *   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n   */\n  public sendDeviceAttributesPrimary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    if (this._terminal.is('xterm') || this._terminal.is('rxvt-unicode') || this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?1;2c');\n    } else if (this._terminal.is('linux')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[?6c');\n    }\n  }\n  public sendDeviceAttributesSecondary(params: IParams): void {\n    if (params.params[0] > 0) {\n      return;\n    }\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this._terminal.is('xterm')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>0;276;0c');\n    } else if (this._terminal.is('rxvt-unicode')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>85;95;0c');\n    } else if (this._terminal.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this._coreService.triggerDataEvent(params.params[0] + 'c');\n    } else if (this._terminal.is('screen')) {\n      this._coreService.triggerDataEvent(C0.ESC + '[>83;40003;0c');\n    }\n  }\n\n  /**\n   * CSI Pm h  Set Mode (SM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Insert Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Automatic Newline (LNM).\n   * CSI ? Pm h\n   *   DEC Private Mode Set (DECSET).\n   *     Ps = 1  -> Application Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate USASCII for character sets G0-G3\n   *     (DECANM), and set VT100 mode.\n   *     Ps = 3  -> 132 Column Mode (DECCOLM).\n   *     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n   *     Ps = 5  -> Reverse Video (DECSCNM).\n   *     Ps = 6  -> Origin Mode (DECOM).\n   *     Ps = 7  -> Wraparound Mode (DECAWM).\n   *     Ps = 8  -> Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n   *     tion Mouse Tracking.\n   *     Ps = 1 0  -> Show toolbar (rxvt).\n   *     Ps = 1 2  -> Start Blinking Cursor (att610).\n   *     Ps = 1 8  -> Print form feed (DECPFF).\n   *     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n   *     Ps = 2 5  -> Show Cursor (DECTCEM).\n   *     Ps = 3 0  -> Show scrollbar (rxvt).\n   *     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n   *     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n   *     Ps = 4 0  -> Allow 80 -> 132 Mode.\n   *     Ps = 4 1  -> more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n   *     RCM).\n   *     Ps = 4 4  -> Turn On Margin Bell.\n   *     Ps = 4 5  -> Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n   *     compile-time option.\n   *     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 6 6  -> Application keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n   *     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n   *     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n   *     (enables the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n   *     Lock keys.  (This enables the numLock resource).\n   *     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n   *     enables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n   *     key.\n   *     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n   *     enables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n   *     (This enables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n   *     Control-G is received.  (This enables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n   *     is received.  (enables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n   *     abled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n   *     Screen Buffer, clearing it first.  (This may be disabled by\n   *     the titeInhibit resource).  This combines the effects of the 1\n   *     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n   *     applications rather than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Set Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Set HP function-key mode.\n   *     Ps = 1 0 5 3  -> Set SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n   *     Ps = 2 0 0 4  -> Set bracketed paste mode.\n   * Modes:\n   *   http: *vt100.net/docs/vt220-rm/chapter4.html\n   */\n  public setMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = true;\n          break;\n        case 20:\n          // this._t.convertEol = true;\n          break;\n      }\n    }\n  }\n  public setModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = true;\n          break;\n        case 2:\n          this._terminal.setgCharset(0, DEFAULT_CHARSET);\n          this._terminal.setgCharset(1, DEFAULT_CHARSET);\n          this._terminal.setgCharset(2, DEFAULT_CHARSET);\n          this._terminal.setgCharset(3, DEFAULT_CHARSET);\n          // set VT100 mode here\n          break;\n        case 3: // 132 col mode\n          // TODO: move DECCOLM into compat addon\n          this._terminal.savedCols = this._bufferService.cols;\n          this._terminal.resize(132, this._bufferService.rows);\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = true;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = true;\n          break;\n        case 12:\n          // this.cursorBlink = true;\n          break;\n        case 66:\n          this._logService.debug('Serial port requested application keypad.');\n          this._terminal.applicationKeypad = true;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n          // no release, no motion, no wheel, no modifiers.\n          this._coreMouseService.activeProtocol = 'X10';\n          break;\n        case 1000: // vt200 mouse\n          // no motion.\n          this._coreMouseService.activeProtocol = 'VT200';\n          break;\n        case 1002: // button event mouse\n          this._coreMouseService.activeProtocol = 'DRAG';\n          break;\n        case 1003: // any event mouse\n          // any event - sends motion events,\n          // even if there is no button held down.\n          this._coreMouseService.activeProtocol = 'ANY';\n          break;\n        case 1004: // send focusin/focusout events\n          // focusin: ^[[I\n          // focusout: ^[[O\n          this._terminal.sendFocus = true;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'SGR';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n          this._logService.debug('DECSET 1015 not supported (see #2507)');\n          break;\n        case 25: // show cursor\n          this._terminal.cursorHidden = false;\n          break;\n        case 1048: // alt screen cursor\n          this.saveCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n          this.saveCursor();\n          // FALL-THROUGH\n        case 47: // alt screen buffer\n        case 1047: // alt screen buffer\n          this._bufferService.buffers.activateAltBuffer(this._terminal.eraseAttrData());\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = true;\n          break;\n      }\n    }\n  }\n\n\n  /**\n   * CSI Pm l  Reset Mode (RM).\n   *     Ps = 2  -> Keyboard Action Mode (AM).\n   *     Ps = 4  -> Replace Mode (IRM).\n   *     Ps = 1 2  -> Send/receive (SRM).\n   *     Ps = 2 0  -> Normal Linefeed (LNM).\n   * CSI ? Pm l\n   *   DEC Private Mode Reset (DECRST).\n   *     Ps = 1  -> Normal Cursor Keys (DECCKM).\n   *     Ps = 2  -> Designate VT52 mode (DECANM).\n   *     Ps = 3  -> 80 Column Mode (DECCOLM).\n   *     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n   *     Ps = 5  -> Normal Video (DECSCNM).\n   *     Ps = 6  -> Normal Cursor Mode (DECOM).\n   *     Ps = 7  -> No Wraparound Mode (DECAWM).\n   *     Ps = 8  -> No Auto-repeat Keys (DECARM).\n   *     Ps = 9  -> Don't send Mouse X & Y on button press.\n   *     Ps = 1 0  -> Hide toolbar (rxvt).\n   *     Ps = 1 2  -> Stop Blinking Cursor (att610).\n   *     Ps = 1 8  -> Don't print form feed (DECPFF).\n   *     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n   *     Ps = 2 5  -> Hide Cursor (DECTCEM).\n   *     Ps = 3 0  -> Don't show scrollbar (rxvt).\n   *     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n   *     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n   *     Ps = 4 1  -> No more(1) fix (see curses resource).\n   *     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n   *     NRCM).\n   *     Ps = 4 4  -> Turn Off Margin Bell.\n   *     Ps = 4 5  -> No Reverse-wraparound Mode.\n   *     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n   *     compile-time option).\n   *     Ps = 4 7  -> Use Normal Screen Buffer.\n   *     Ps = 6 6  -> Numeric keypad (DECNKM).\n   *     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n   *     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n   *     release.  See the section Mouse Tracking.\n   *     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n   *     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n   *     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n   *     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n   *     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n   *     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n   *     (rxvt).\n   *     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n   *     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n   *     the eightBitInput resource).\n   *     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n   *     Lock keys.  (This disables the numLock resource).\n   *     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n   *     (This disables the metaSendsEscape resource).\n   *     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n   *     Delete key.\n   *     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n   *     (This disables the altSendsEscape resource).\n   *     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n   *     (This disables the keepSelection resource).\n   *     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n   *     the selectToClipboard resource).\n   *     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n   *     Control-G is received.  (This disables the bellIsUrgent\n   *     resource).\n   *     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n   *     G is received.  (This disables the popOnBell resource).\n   *     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n   *     first if in the Alternate Screen.  (This may be disabled by\n   *     the titeInhibit resource).\n   *     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n   *     disabled by the titeInhibit resource).\n   *     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n   *     as in DECRC.  (This may be disabled by the titeInhibit\n   *     resource).  This combines the effects of the 1 0 4 7  and 1 0\n   *     4 8  modes.  Use this with terminfo-based applications rather\n   *     than the 4 7  mode.\n   *     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n   *     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n   *     Ps = 1 0 5 2  -> Reset HP function-key mode.\n   *     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n   *     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n   *     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n   *     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n   */\n  public resetMode(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 4:\n          this._terminal.insertMode = false;\n          break;\n        case 20:\n          // this._t.convertEol = false;\n          break;\n      }\n    }\n  }\n  public resetModePrivate(params: IParams): void {\n    for (let i = 0; i < params.length; i++) {\n      switch (params.params[i]) {\n        case 1:\n          this._coreService.decPrivateModes.applicationCursorKeys = false;\n          break;\n        case 3:\n          // TODO: move DECCOLM into compat addon\n          // Note: This impl currently does not enforce col 80, instead reverts\n          // to previous terminal width before entering DECCOLM 132\n          if (this._bufferService.cols === 132 && this._terminal.savedCols) {\n            this._terminal.resize(this._terminal.savedCols, this._bufferService.rows);\n          }\n          delete this._terminal.savedCols;\n          this._terminal.reset();\n          break;\n        case 6:\n          this._terminal.originMode = false;\n          this._setCursor(0, 0);\n          break;\n        case 7:\n          this._terminal.wraparoundMode = false;\n          break;\n        case 12:\n          // this.cursorBlink = false;\n          break;\n        case 66:\n          this._logService.debug('Switching back to normal keypad.');\n          this._terminal.applicationKeypad = false;\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          break;\n        case 9: // X10 Mouse\n        case 1000: // vt200 mouse\n        case 1002: // button event mouse\n        case 1003: // any event mouse\n          this._coreMouseService.activeProtocol = 'NONE';\n          break;\n        case 1004: // send focusin/focusout events\n          this._terminal.sendFocus = false;\n          break;\n        case 1005: // utf8 ext mode mouse - removed in #2507\n          this._logService.debug('DECRST 1005 not supported (see #2507)');\n          break;\n        case 1006: // sgr ext mode mouse\n          this._coreMouseService.activeEncoding = 'DEFAULT';\n          break;\n        case 1015: // urxvt ext mode mouse - removed in #2507\n        this._logService.debug('DECRST 1015 not supported (see #2507)');\n          break;\n        case 25: // hide cursor\n          this._terminal.cursorHidden = true;\n          break;\n        case 1048: // alt screen cursor\n          this.restoreCursor();\n          break;\n        case 1049: // alt screen buffer cursor\n           // FALL-THROUGH\n        case 47: // normal screen buffer\n        case 1047: // normal screen buffer - clearing it first\n          // Ensure the selection manager has the correct buffer\n          this._bufferService.buffers.activateNormalBuffer();\n          if (params.params[i] === 1049) {\n            this.restoreCursor();\n          }\n          this._terminal.refresh(0, this._bufferService.rows - 1);\n          if (this._terminal.viewport) {\n            this._terminal.viewport.syncScrollArea();\n          }\n          this._terminal.showCursor();\n          break;\n        case 2004: // bracketed paste mode (https://cirw.in/blog/bracketed-paste)\n          this._terminal.bracketedPasteMode = false;\n          break;\n      }\n    }\n  }\n\n  /**\n   * Helper to extract and apply color params/subparams.\n   * Returns advance for params index.\n   */\n  private _extractColor(params: IParams, pos: number, attr: IAttributeData): number {\n    // normalize params\n    // meaning: [target, CM, ign, val, val, val]\n    // RGB    : [ 38/48,  2, ign,   r,   g,   b]\n    // P256   : [ 38/48,  5, ign,   v, ign, ign]\n    const accu = [0, 0, -1, 0, 0, 0];\n\n    // alignment placeholder for non color space sequences\n    let cSpace = 0;\n\n    // return advance we took in params\n    let advance = 0;\n\n    do {\n      accu[advance + cSpace] = params.params[pos + advance];\n      if (params.hasSubParams(pos + advance)) {\n        const subparams = params.getSubParams(pos + advance);\n        let i = 0;\n        do {\n          if (accu[1] === 5) {\n            cSpace = 1;\n          }\n          accu[advance + i + 1 + cSpace] = subparams[i];\n        } while (++i < subparams.length && i + advance + 1 + cSpace < accu.length);\n        break;\n      }\n      // exit early if can decide color mode with semicolons\n      if ((accu[1] === 5 && advance + cSpace >= 2)\n          || (accu[1] === 2 && advance + cSpace >= 5)) {\n        break;\n      }\n      // offset colorSpace slot for semicolon mode\n      if (accu[1]) {\n        cSpace = 1;\n      }\n    } while (++advance + pos < params.length && advance + cSpace < accu.length);\n\n    // set default values to 0\n    for (let i = 2; i < accu.length; ++i) {\n      if (accu[i] === -1) {\n        accu[i] = 0;\n      }\n    }\n\n    // apply colors\n    if (accu[0] === 38) {\n      if (accu[1] === 2) {\n        attr.fg |= Attributes.CM_RGB;\n        attr.fg &= ~Attributes.RGB_MASK;\n        attr.fg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    } else if (accu[0] === 48) {\n      if (accu[1] === 2) {\n        attr.bg |= Attributes.CM_RGB;\n        attr.bg &= ~Attributes.RGB_MASK;\n        attr.bg |= AttributeData.fromColorRGB([accu[3], accu[4], accu[5]]);\n      } else if (accu[1] === 5) {\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P256 | (accu[3] & 0xff);\n      }\n    }\n\n    return advance;\n  }\n\n  /**\n   * CSI Pm m  Character Attributes (SGR).\n   *     Ps = 0  -> Normal (default).\n   *     Ps = 1  -> Bold.\n   *     Ps = 2  -> Faint, decreased intensity (ISO 6429).\n   *     Ps = 4  -> Underlined.\n   *     Ps = 5  -> Blink (appears as Bold).\n   *     Ps = 7  -> Inverse.\n   *     Ps = 8  -> Invisible, i.e., hidden (VT300).\n   *     Ps = 2 2  -> Normal (neither bold nor faint).\n   *     Ps = 2 4  -> Not underlined.\n   *     Ps = 2 5  -> Steady (not blinking).\n   *     Ps = 2 7  -> Positive (not inverse).\n   *     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n   *     Ps = 3 0  -> Set foreground color to Black.\n   *     Ps = 3 1  -> Set foreground color to Red.\n   *     Ps = 3 2  -> Set foreground color to Green.\n   *     Ps = 3 3  -> Set foreground color to Yellow.\n   *     Ps = 3 4  -> Set foreground color to Blue.\n   *     Ps = 3 5  -> Set foreground color to Magenta.\n   *     Ps = 3 6  -> Set foreground color to Cyan.\n   *     Ps = 3 7  -> Set foreground color to White.\n   *     Ps = 3 9  -> Set foreground color to default (original).\n   *     Ps = 4 0  -> Set background color to Black.\n   *     Ps = 4 1  -> Set background color to Red.\n   *     Ps = 4 2  -> Set background color to Green.\n   *     Ps = 4 3  -> Set background color to Yellow.\n   *     Ps = 4 4  -> Set background color to Blue.\n   *     Ps = 4 5  -> Set background color to Magenta.\n   *     Ps = 4 6  -> Set background color to Cyan.\n   *     Ps = 4 7  -> Set background color to White.\n   *     Ps = 4 9  -> Set background color to default (original).\n   *\n   *   If 16-color support is compiled, the following apply.  Assume\n   *   that xterm's resources are set so that the ISO color codes are\n   *   the first 8 of a set of 16.  Then the aixterm colors are the\n   *   bright versions of the ISO colors:\n   *     Ps = 9 0  -> Set foreground color to Black.\n   *     Ps = 9 1  -> Set foreground color to Red.\n   *     Ps = 9 2  -> Set foreground color to Green.\n   *     Ps = 9 3  -> Set foreground color to Yellow.\n   *     Ps = 9 4  -> Set foreground color to Blue.\n   *     Ps = 9 5  -> Set foreground color to Magenta.\n   *     Ps = 9 6  -> Set foreground color to Cyan.\n   *     Ps = 9 7  -> Set foreground color to White.\n   *     Ps = 1 0 0  -> Set background color to Black.\n   *     Ps = 1 0 1  -> Set background color to Red.\n   *     Ps = 1 0 2  -> Set background color to Green.\n   *     Ps = 1 0 3  -> Set background color to Yellow.\n   *     Ps = 1 0 4  -> Set background color to Blue.\n   *     Ps = 1 0 5  -> Set background color to Magenta.\n   *     Ps = 1 0 6  -> Set background color to Cyan.\n   *     Ps = 1 0 7  -> Set background color to White.\n   *\n   *   If xterm is compiled with the 16-color support disabled, it\n   *   supports the following, from rxvt:\n   *     Ps = 1 0 0  -> Set foreground and background color to\n   *     default.\n   *\n   *   If 88- or 256-color support is compiled, the following apply.\n   *     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n   *     Ps.\n   *     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n   *     Ps.\n   */\n  public charAttributes(params: IParams): void {\n    // Optimize a single SGR0.\n    if (params.length === 1 && params.params[0] === 0) {\n      this._terminal.curAttrData.fg = DEFAULT_ATTR_DATA.fg;\n      this._terminal.curAttrData.bg = DEFAULT_ATTR_DATA.bg;\n      return;\n    }\n\n    const l = params.length;\n    let p;\n    const attr = this._terminal.curAttrData;\n\n    for (let i = 0; i < l; i++) {\n      p = params.params[i];\n      if (p >= 30 && p <= 37) {\n        // fg color 8\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 30);\n      } else if (p >= 40 && p <= 47) {\n        // bg color 8\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 40);\n      } else if (p >= 90 && p <= 97) {\n        // fg color 16\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.fg |= Attributes.CM_P16 | (p - 90) | 8;\n      } else if (p >= 100 && p <= 107) {\n        // bg color 16\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.PCOLOR_MASK);\n        attr.bg |= Attributes.CM_P16 | (p - 100) | 8;\n      } else if (p === 0) {\n        // default\n        attr.fg = DEFAULT_ATTR_DATA.fg;\n        attr.bg = DEFAULT_ATTR_DATA.bg;\n      } else if (p === 1) {\n        // bold text\n        attr.fg |= FgFlags.BOLD;\n      } else if (p === 3) {\n        // italic text\n        attr.bg |= BgFlags.ITALIC;\n      } else if (p === 4) {\n        // underlined text\n        attr.fg |= FgFlags.UNDERLINE;\n      } else if (p === 5) {\n        // blink\n        attr.fg |= FgFlags.BLINK;\n      } else if (p === 7) {\n        // inverse and positive\n        // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n        attr.fg |= FgFlags.INVERSE;\n      } else if (p === 8) {\n        // invisible\n        attr.fg |= FgFlags.INVISIBLE;\n      } else if (p === 2) {\n        // dimmed text\n        attr.bg |= BgFlags.DIM;\n      } else if (p === 22) {\n        // not bold nor faint\n        attr.fg &= ~FgFlags.BOLD;\n        attr.bg &= ~BgFlags.DIM;\n      } else if (p === 23) {\n        // not italic\n        attr.bg &= ~BgFlags.ITALIC;\n      } else if (p === 24) {\n        // not underlined\n        attr.fg &= ~FgFlags.UNDERLINE;\n      } else if (p === 25) {\n        // not blink\n        attr.fg &= ~FgFlags.BLINK;\n      } else if (p === 27) {\n        // not inverse\n        attr.fg &= ~FgFlags.INVERSE;\n      } else if (p === 28) {\n        // not invisible\n        attr.fg &= ~FgFlags.INVISIBLE;\n      } else if (p === 39) {\n        // reset fg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 49) {\n        // reset bg\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else if (p === 38 || p === 48) {\n        // fg color 256 and RGB\n        i += this._extractColor(params, i, attr);\n      } else if (p === 100) {\n        // reset fg/bg\n        attr.fg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.fg |= DEFAULT_ATTR_DATA.fg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n        attr.bg &= ~(Attributes.CM_MASK | Attributes.RGB_MASK);\n        attr.bg |= DEFAULT_ATTR_DATA.bg & (Attributes.PCOLOR_MASK | Attributes.RGB_MASK);\n      } else {\n        this._logService.debug('Unknown SGR attribute: %d.', p);\n      }\n    }\n  }\n\n  /**\n   * CSI Ps n  Device Status Report (DSR).\n   *     Ps = 5  -> Status Report.  Result (``OK'') is\n   *   CSI 0 n\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n   *   Result is\n   *   CSI r ; c R\n   * CSI ? Ps n\n   *   Device Status Report (DSR, DEC-specific).\n   *     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n   *     ? r ; c R (assumes page is zero).\n   *     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n   *     or CSI ? 1 1  n  (not ready).\n   *     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n   *     or CSI ? 2 1  n  (locked).\n   *     Ps = 2 6  -> Report Keyboard status as\n   *   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n   *   The last two parameters apply to VT400 & up, and denote key-\n   *   board ready and LK01 respectively.\n   *     Ps = 5 3  -> Report Locator status as\n   *   CSI ? 5 3  n  Locator available, if compiled-in, or\n   *   CSI ? 5 0  n  No Locator, if not.\n   */\n  public deviceStatus(params: IParams): void {\n    switch (params.params[0]) {\n      case 5:\n        // status report\n        this._coreService.triggerDataEvent(`${C0.ESC}[0n`);\n        break;\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[${y};${x}R`);\n        break;\n    }\n  }\n\n  public deviceStatusPrivate(params: IParams): void {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params.params[0]) {\n      case 6:\n        // cursor position\n        const y = this._bufferService.buffer.y + 1;\n        const x = this._bufferService.buffer.x + 1;\n        this._coreService.triggerDataEvent(`${C0.ESC}[?${y};${x}R`);\n        break;\n      case 15:\n        // no printer\n        // this.handler(C0.ESC + '[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.handler(C0.ESC + '[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.handler(C0.ESC + '[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.handler(C0.ESC + '[?50n');\n        break;\n    }\n  }\n\n  /**\n   * CSI ! p   Soft terminal reset (DECSTR).\n   * http://vt100.net/docs/vt220-rm/table4-10.html\n   */\n  public softReset(params: IParams): void {\n    this._terminal.cursorHidden = false;\n    this._terminal.insertMode = false;\n    this._terminal.originMode = false;\n    this._terminal.wraparoundMode = true;  // defaults: xterm - true, vt100 - false\n    this._terminal.applicationKeypad = false; // ?\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n    this._coreService.decPrivateModes.applicationCursorKeys = false;\n    this._bufferService.buffer.scrollTop = 0;\n    this._bufferService.buffer.scrollBottom = this._bufferService.rows - 1;\n    this._terminal.curAttrData = DEFAULT_ATTR_DATA.clone();\n    this._bufferService.buffer.x = this._bufferService.buffer.y = 0; // ?\n    this._terminal.charset = null;\n    this._terminal.glevel = 0; // ??\n    this._terminal.charsets = [null]; // ??\n  }\n\n  /**\n   * CSI Ps SP q  Set cursor style (DECSCUSR, VT520).\n   *   Ps = 0  -> blinking block.\n   *   Ps = 1  -> blinking block (default).\n   *   Ps = 2  -> steady block.\n   *   Ps = 3  -> blinking underline.\n   *   Ps = 4  -> steady underline.\n   *   Ps = 5  -> blinking bar (xterm).\n   *   Ps = 6  -> steady bar (xterm).\n   */\n  public setCursorStyle(params: IParams): void {\n    const param = params.params[0] || 1;\n    switch (param) {\n      case 1:\n      case 2:\n        this._optionsService.options.cursorStyle = 'block';\n        break;\n      case 3:\n      case 4:\n        this._optionsService.options.cursorStyle = 'underline';\n        break;\n      case 5:\n      case 6:\n        this._optionsService.options.cursorStyle = 'bar';\n        break;\n    }\n    const isBlinking = param % 2 === 1;\n    this._optionsService.options.cursorBlink = isBlinking;\n  }\n\n  /**\n   * CSI Ps ; Ps r\n   *   Set Scrolling Region [top;bottom] (default = full size of win-\n   *   dow) (DECSTBM).\n   */\n  public setScrollRegion(params: IParams): void {\n    const top = params.params[0] || 1;\n    let bottom: number;\n\n    if (params.length < 2 || (bottom = params.params[1]) >  this._bufferService.rows || bottom === 0) {\n      bottom = this._bufferService.rows;\n    }\n\n    if (bottom > top) {\n      this._bufferService.buffer.scrollTop = top - 1;\n      this._bufferService.buffer.scrollBottom = bottom - 1;\n      this._setCursor(0, 0);\n    }\n  }\n\n\n  /**\n   * CSI s\n   * ESC 7\n   *   Save cursor (ANSI.SYS).\n   */\n  public saveCursor(params?: IParams): void {\n    this._bufferService.buffer.savedX = this._bufferService.buffer.x;\n    this._bufferService.buffer.savedY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    this._bufferService.buffer.savedCurAttrData.fg = this._terminal.curAttrData.fg;\n    this._bufferService.buffer.savedCurAttrData.bg = this._terminal.curAttrData.bg;\n    this._bufferService.buffer.savedCharset = this._terminal.charset;\n  }\n\n\n  /**\n   * CSI u\n   * ESC 8\n   *   Restore cursor (ANSI.SYS).\n   */\n  public restoreCursor(params?: IParams): void {\n    this._bufferService.buffer.x = this._bufferService.buffer.savedX || 0;\n    this._bufferService.buffer.y = Math.max(this._bufferService.buffer.savedY - this._bufferService.buffer.ybase, 0);\n    this._terminal.curAttrData.fg = this._bufferService.buffer.savedCurAttrData.fg;\n    this._terminal.curAttrData.bg = this._bufferService.buffer.savedCurAttrData.bg;\n    this._terminal.charset = (this as any)._savedCharset;\n    if (this._bufferService.buffer.savedCharset) {\n      this._terminal.charset = this._bufferService.buffer.savedCharset;\n    }\n    this._restrictCursor();\n  }\n\n\n  /**\n   * OSC 0; <data> ST (set icon name + window title)\n   * OSC 2; <data> ST (set window title)\n   *   Proxy to set window title. Icon name is not supported.\n   */\n  public setTitle(data: string): void {\n    this._terminal.handleTitle(data);\n  }\n\n  /**\n   * ESC E\n   * C1.NEL\n   *   DEC mnemonic: NEL (https://vt100.net/docs/vt510-rm/NEL)\n   *   Moves cursor to first position on next line.\n   */\n  public nextLine(): void {\n    this._bufferService.buffer.x = 0;\n    this.index();\n  }\n\n  /**\n   * ESC =\n   *   DEC mnemonic: DECKPAM (https://vt100.net/docs/vt510-rm/DECKPAM.html)\n   *   Enables the numeric keypad to send application sequences to the host.\n   */\n  public keypadApplicationMode(): void {\n    this._logService.debug('Serial port requested application keypad.');\n    this._terminal.applicationKeypad = true;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC >\n   *   DEC mnemonic: DECKPNM (https://vt100.net/docs/vt510-rm/DECKPNM.html)\n   *   Enables the keypad to send numeric characters to the host.\n   */\n  public keypadNumericMode(): void {\n    this._logService.debug('Switching back to normal keypad.');\n    this._terminal.applicationKeypad = false;\n    if (this._terminal.viewport) {\n      this._terminal.viewport.syncScrollArea();\n    }\n  }\n\n  /**\n   * ESC % @\n   * ESC % G\n   *   Select default character set. UTF-8 is not supported (string are unicode anyways)\n   *   therefore ESC % G does the same.\n   */\n  public selectDefaultCharset(): void {\n    this._terminal.setgLevel(0);\n    this._terminal.setgCharset(0, DEFAULT_CHARSET); // US (default)\n  }\n\n  /**\n   * ESC ( C\n   *   Designate G0 Character Set, VT100, ISO 2022.\n   * ESC ) C\n   *   Designate G1 Character Set (ISO 2022, VT100).\n   * ESC * C\n   *   Designate G2 Character Set (ISO 2022, VT220).\n   * ESC + C\n   *   Designate G3 Character Set (ISO 2022, VT220).\n   * ESC - C\n   *   Designate G1 Character Set (VT300).\n   * ESC . C\n   *   Designate G2 Character Set (VT300).\n   * ESC / C\n   *   Designate G3 Character Set (VT300). C = A  -> ISO Latin-1 Supplemental. - Supported?\n   */\n  public selectCharset(collectAndFlag: string): void {\n    if (collectAndFlag.length !== 2) {\n      this.selectDefaultCharset();\n      return;\n    }\n    if (collectAndFlag[0] === '/') {\n      return;  // TODO: Is this supported?\n    }\n    this._terminal.setgCharset(GLEVEL[collectAndFlag[0]], CHARSETS[collectAndFlag[1]] || DEFAULT_CHARSET);\n    return;\n  }\n\n  /**\n   * ESC D\n   * C1.IND\n   *   DEC mnemonic: IND (https://vt100.net/docs/vt510-rm/IND.html)\n   *   Moves the cursor down one line in the same column.\n   */\n  public index(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    this._bufferService.buffer.y++;\n    if (buffer.y === buffer.scrollBottom + 1) {\n      buffer.y--;\n      this._terminal.scroll();\n    } else if (buffer.y >= this._bufferService.rows) {\n      buffer.y = this._bufferService.rows - 1;\n    }\n    this._restrictCursor();\n  }\n\n  /**\n   * ESC H\n   * C1.HTS\n   *   DEC mnemonic: HTS (https://vt100.net/docs/vt510-rm/HTS.html)\n   *   Sets a horizontal tab stop at the column position indicated by\n   *   the value of the active column when the terminal receives an HTS.\n   */\n  public tabSet(): void {\n    this._bufferService.buffer.tabs[this._bufferService.buffer.x] = true;\n  }\n\n  /**\n   * ESC M\n   * C1.RI\n   *   DEC mnemonic: HTS\n   *   Moves the cursor up one line in the same column. If the cursor is at the top margin,\n   *   the page scrolls down.\n   */\n  public reverseIndex(): void {\n    this._restrictCursor();\n    const buffer = this._bufferService.buffer;\n    if (buffer.y === buffer.scrollTop) {\n      // possibly move the code below to term.reverseScroll();\n      // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n      // blankLine(true) is xterm/linux behavior\n      const scrollRegionHeight = buffer.scrollBottom - buffer.scrollTop;\n      buffer.lines.shiftElements(buffer.y + buffer.ybase, scrollRegionHeight, 1);\n      buffer.lines.set(buffer.y + buffer.ybase, buffer.getBlankLine(this._terminal.eraseAttrData()));\n      this._dirtyRowService.markRangeDirty(buffer.scrollTop, buffer.scrollBottom);\n    } else {\n      buffer.y--;\n      this._restrictCursor(); // quickfix to not run out of bounds\n    }\n  }\n\n  /**\n   * ESC c\n   *   DEC mnemonic: RIS (https://vt100.net/docs/vt510-rm/RIS.html)\n   *   Reset to initial state.\n   */\n  public reset(): void {\n    this._parser.reset();\n    this._terminal.reset();  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC n\n   * ESC o\n   * ESC |\n   * ESC }\n   * ESC ~\n   *   DEC mnemonic: LS (https://vt100.net/docs/vt510-rm/LS.html)\n   *   When you use a locking shift, the character set remains in GL or GR until\n   *   you use another locking shift. (partly supported)\n   */\n  public setgLevel(level: number): void {\n    this._terminal.setgLevel(level);  // TODO: save to move from terminal?\n  }\n\n  /**\n   * ESC # 8\n   *   DEC mnemonic: DECALN (https://vt100.net/docs/vt510-rm/DECALN.html)\n   *   This control function fills the complete screen area with\n   *   a test pattern (E) used for adjusting screen alignment.\n   *\n   * TODO: move DECALN into compat addon\n   */\n  public screenAlignmentPattern(): void {\n    // prepare cell data\n    const cell = new CellData();\n    cell.content = 1 << Content.WIDTH_SHIFT | 'E'.charCodeAt(0);\n    cell.fg = this._terminal.curAttrData.fg;\n    cell.bg = this._terminal.curAttrData.bg;\n\n    const buffer = this._bufferService.buffer;\n\n    this._setCursor(0, 0);\n    for (let yOffset = 0; yOffset < this._bufferService.rows; ++yOffset) {\n      const row = buffer.y + buffer.ybase + yOffset;\n      buffer.lines.get(row).fill(cell);\n      buffer.lines.get(row).isWrapped = false;\n    }\n    this._dirtyRowService.markAllDirty();\n    this._setCursor(0, 0);\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IParsingState, IDcsHandler, IEscapeSequenceParser, IParams, IOscHandler, IHandlerCollection, CsiHandlerType, OscFallbackHandlerType, IOscParser, EscHandlerType, IDcsParser, DcsFallbackHandlerType, IFunctionIdentifier, ExecuteFallbackHandlerType, CsiFallbackHandlerType, EscFallbackHandlerType, PrintHandlerType, PrintFallbackHandlerType, ExecuteHandlerType } from 'common/parser/Types';\nimport { ParserState, ParserAction } from 'common/parser/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IDisposable } from 'common/Types';\nimport { fill } from 'common/TypedArrayUtils';\nimport { Params } from 'common/parser/Params';\nimport { OscParser } from 'common/parser/OscParser';\nimport { DcsParser } from 'common/parser/DcsParser';\n\n/**\n * Table values are generated like this:\n *    index:  currentState << TableValue.INDEX_STATE_SHIFT | charCode\n *    value:  action << TableValue.TRANSITION_ACTION_SHIFT | nextState\n */\nconst enum TableAccess {\n  TRANSITION_ACTION_SHIFT = 4,\n  TRANSITION_STATE_MASK = 15,\n  INDEX_STATE_SHIFT = 8\n}\n\n/**\n * Transition table for EscapeSequenceParser.\n */\nexport class TransitionTable {\n  public table: Uint8Array;\n\n  constructor(length: number) {\n    this.table = new Uint8Array(length);\n  }\n\n  /**\n   * Set default transition.\n   * @param action default action\n   * @param next default next state\n   */\n  public setDefault(action: ParserAction, next: ParserState): void {\n    fill(this.table, action << TableAccess.TRANSITION_ACTION_SHIFT | next);\n  }\n\n  /**\n   * Add a transition to the transition table.\n   * @param code input character code\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public add(code: number, state: ParserState, action: ParserAction, next: ParserState): void {\n    this.table[state << TableAccess.INDEX_STATE_SHIFT | code] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n  }\n\n  /**\n   * Add transitions for multiple input character codes.\n   * @param codes input character code array\n   * @param state current parser state\n   * @param action parser action to be done\n   * @param next next parser state\n   */\n  public addMany(codes: number[], state: ParserState, action: ParserAction, next: ParserState): void {\n    for (let i = 0; i < codes.length; i++) {\n      this.table[state << TableAccess.INDEX_STATE_SHIFT | codes[i]] = action << TableAccess.TRANSITION_ACTION_SHIFT | next;\n    }\n  }\n}\n\n\n// Pseudo-character placeholder for printable non-ascii characters (unicode).\nconst NON_ASCII_PRINTABLE = 0xA0;\n\n\n/**\n * VT500 compatible transition table.\n * Taken from https://vt100.net/emu/dec_ansi_parser.\n */\nexport const VT500_TRANSITION_TABLE = (function (): TransitionTable {\n  const table: TransitionTable = new TransitionTable(4095);\n\n  // range macro for byte\n  const BYTE_VALUES = 256;\n  const blueprint = Array.apply(null, Array(BYTE_VALUES)).map((unused: any, i: number) => i);\n  const r = (start: number, end: number) => blueprint.slice(start, end);\n\n  // Default definitions.\n  const PRINTABLES = r(0x20, 0x7f); // 0x20 (SP) included, 0x7F (DEL) excluded\n  const EXECUTABLES = r(0x00, 0x18);\n  EXECUTABLES.push(0x19);\n  EXECUTABLES.push.apply(EXECUTABLES, r(0x1c, 0x20));\n\n  const states: number[] = r(ParserState.GROUND, ParserState.DCS_PASSTHROUGH + 1);\n  let state: any;\n\n  // set default transition\n  table.setDefault(ParserAction.ERROR, ParserState.GROUND);\n  // printables\n  table.addMany(PRINTABLES, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  // global anywhere rules\n  for (state in states) {\n    table.addMany([0x18, 0x1a, 0x99, 0x9a], state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x80, 0x90), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.addMany(r(0x90, 0x98), state, ParserAction.EXECUTE, ParserState.GROUND);\n    table.add(0x9c, state, ParserAction.IGNORE, ParserState.GROUND); // ST as terminator\n    table.add(0x1b, state, ParserAction.CLEAR, ParserState.ESCAPE);  // ESC\n    table.add(0x9d, state, ParserAction.OSC_START, ParserState.OSC_STRING);  // OSC\n    table.addMany([0x98, 0x9e, 0x9f], state, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n    table.add(0x9b, state, ParserAction.CLEAR, ParserState.CSI_ENTRY);  // CSI\n    table.add(0x90, state, ParserAction.CLEAR, ParserState.DCS_ENTRY);  // DCS\n  }\n  // rules for executables and 7f\n  table.addMany(EXECUTABLES, ParserState.GROUND, ParserAction.EXECUTE, ParserState.GROUND);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE, ParserAction.EXECUTE, ParserState.ESCAPE);\n  table.add(0x7f, ParserState.ESCAPE, ParserAction.IGNORE, ParserState.ESCAPE);\n  table.addMany(EXECUTABLES, ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  table.addMany(EXECUTABLES, ParserState.CSI_ENTRY, ParserAction.EXECUTE, ParserState.CSI_ENTRY);\n  table.add(0x7f, ParserState.CSI_ENTRY, ParserAction.IGNORE, ParserState.CSI_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.CSI_PARAM, ParserAction.EXECUTE, ParserState.CSI_PARAM);\n  table.add(0x7f, ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_PARAM);\n  table.addMany(EXECUTABLES, ParserState.CSI_IGNORE, ParserAction.EXECUTE, ParserState.CSI_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.CSI_INTERMEDIATE, ParserAction.EXECUTE, ParserState.CSI_INTERMEDIATE);\n  table.add(0x7f, ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.ESCAPE_INTERMEDIATE, ParserAction.EXECUTE, ParserState.ESCAPE_INTERMEDIATE);\n  table.add(0x7f, ParserState.ESCAPE_INTERMEDIATE, ParserAction.IGNORE, ParserState.ESCAPE_INTERMEDIATE);\n  // osc\n  table.add(0x5d, ParserState.ESCAPE, ParserAction.OSC_START, ParserState.OSC_STRING);\n  table.addMany(PRINTABLES, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(0x7f, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.addMany([0x9c, 0x1b, 0x18, 0x1a, 0x07], ParserState.OSC_STRING, ParserAction.OSC_END, ParserState.GROUND);\n  table.addMany(r(0x1c, 0x20), ParserState.OSC_STRING, ParserAction.IGNORE, ParserState.OSC_STRING);\n  // sos/pm/apc does nothing\n  table.addMany([0x58, 0x5e, 0x5f], ParserState.ESCAPE, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(PRINTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.addMany(EXECUTABLES, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  table.add(0x9c, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.GROUND);\n  table.add(0x7f, ParserState.SOS_PM_APC_STRING, ParserAction.IGNORE, ParserState.SOS_PM_APC_STRING);\n  // csi entries\n  table.add(0x5b, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.CSI_ENTRY);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_ENTRY, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_ENTRY, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.CSI_PARAM, ParserAction.PARAM, ParserState.CSI_PARAM);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_PARAM, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.CSI_PARAM, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x20, 0x40), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(0x7f, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_ENTRY, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_INTERMEDIATE, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.CSI_INTERMEDIATE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.CSI_INTERMEDIATE, ParserAction.CSI_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x20, 0x30), ParserState.CSI_PARAM, ParserAction.COLLECT, ParserState.CSI_INTERMEDIATE);\n  // esc_intermediate\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.ESCAPE_INTERMEDIATE, ParserAction.COLLECT, ParserState.ESCAPE_INTERMEDIATE);\n  table.addMany(r(0x30, 0x7f), ParserState.ESCAPE_INTERMEDIATE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x30, 0x50), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x51, 0x58), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany([0x59, 0x5a, 0x5c], ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  table.addMany(r(0x60, 0x7f), ParserState.ESCAPE, ParserAction.ESC_DISPATCH, ParserState.GROUND);\n  // dcs entry\n  table.add(0x50, ParserState.ESCAPE, ParserAction.CLEAR, ParserState.DCS_ENTRY);\n  table.addMany(EXECUTABLES, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.add(0x7f, ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_ENTRY, ParserAction.IGNORE, ParserState.DCS_ENTRY);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_ENTRY, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_ENTRY, ParserAction.COLLECT, ParserState.DCS_PARAM);\n  table.addMany(EXECUTABLES, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x80), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(EXECUTABLES, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.add(0x7f, ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_PARAM);\n  table.addMany(r(0x30, 0x3c), ParserState.DCS_PARAM, ParserAction.PARAM, ParserState.DCS_PARAM);\n  table.addMany([0x3c, 0x3d, 0x3e, 0x3f], ParserState.DCS_PARAM, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_PARAM, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(EXECUTABLES, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.add(0x7f, ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x1c, 0x20), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x20, 0x30), ParserState.DCS_INTERMEDIATE, ParserAction.COLLECT, ParserState.DCS_INTERMEDIATE);\n  table.addMany(r(0x30, 0x40), ParserState.DCS_INTERMEDIATE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_INTERMEDIATE, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_PARAM, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(r(0x40, 0x7f), ParserState.DCS_ENTRY, ParserAction.DCS_HOOK, ParserState.DCS_PASSTHROUGH);\n  table.addMany(EXECUTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.addMany(PRINTABLES, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  table.add(0x7f, ParserState.DCS_PASSTHROUGH, ParserAction.IGNORE, ParserState.DCS_PASSTHROUGH);\n  table.addMany([0x1b, 0x9c, 0x18, 0x1a], ParserState.DCS_PASSTHROUGH, ParserAction.DCS_UNHOOK, ParserState.GROUND);\n  // special handling of unicode chars\n  table.add(NON_ASCII_PRINTABLE, ParserState.GROUND, ParserAction.PRINT, ParserState.GROUND);\n  table.add(NON_ASCII_PRINTABLE, ParserState.OSC_STRING, ParserAction.OSC_PUT, ParserState.OSC_STRING);\n  table.add(NON_ASCII_PRINTABLE, ParserState.CSI_IGNORE, ParserAction.IGNORE, ParserState.CSI_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_IGNORE, ParserAction.IGNORE, ParserState.DCS_IGNORE);\n  table.add(NON_ASCII_PRINTABLE, ParserState.DCS_PASSTHROUGH, ParserAction.DCS_PUT, ParserState.DCS_PASSTHROUGH);\n  return table;\n})();\n\n\n/**\n * EscapeSequenceParser.\n * This class implements the ANSI/DEC compatible parser described by\n * Paul Williams (https://vt100.net/emu/dec_ansi_parser).\n *\n * To implement custom ANSI compliant escape sequences it is not needed to\n * alter this parser, instead consider registering a custom handler.\n * For non ANSI compliant sequences change the transition table with\n * the optional `transitions` constructor argument and\n * reimplement the `parse` method.\n *\n * This parser is currently hardcoded to operate in ZDM (Zero Default Mode)\n * as suggested by the original parser, thus empty parameters are set to 0.\n * This this is not in line with the latest ECMA-48 specification\n * (ZDM was part of the early specs and got completely removed later on).\n *\n * Other than the original parser from vt100.net this parser supports\n * sub parameters in digital parameters separated by colons. Empty sub parameters\n * are set to -1 (no ZDM for sub parameters).\n *\n * About prefix and intermediate bytes:\n * This parser follows the assumptions of the vt100.net parser with these restrictions:\n * - only one prefix byte is allowed as first parameter byte, byte range 0x3c .. 0x3f\n * - max. two intermediates are respected, byte range 0x20 .. 0x2f\n * Note that this is not in line with ECMA-48 which does not limit either of those.\n * Furthermore ECMA-48 allows the prefix byte range at any param byte position. Currently\n * there are no known sequences that follow the broader definition of the specification.\n *\n * TODO: implement error recovery hook via error handler return values\n */\nexport class EscapeSequenceParser extends Disposable implements IEscapeSequenceParser {\n  public initialState: number;\n  public currentState: number;\n  public precedingCodepoint: number;\n\n  // buffers over several parse calls\n  protected _params: Params;\n  protected _collect: number;\n\n  // handler lookup containers\n  protected _printHandler: PrintHandlerType;\n  protected _executeHandlers: {[flag: number]: ExecuteHandlerType};\n  protected _csiHandlers: IHandlerCollection<CsiHandlerType>;\n  protected _escHandlers: IHandlerCollection<EscHandlerType>;\n  protected _oscParser: IOscParser;\n  protected _dcsParser: IDcsParser;\n  protected _errorHandler: (state: IParsingState) => IParsingState;\n\n  // fallback handlers\n  protected _printHandlerFb: PrintFallbackHandlerType;\n  protected _executeHandlerFb: ExecuteFallbackHandlerType;\n  protected _csiHandlerFb: CsiFallbackHandlerType;\n  protected _escHandlerFb: EscFallbackHandlerType;\n  protected _errorHandlerFb: (state: IParsingState) => IParsingState;\n\n  constructor(readonly TRANSITIONS: TransitionTable = VT500_TRANSITION_TABLE) {\n    super();\n\n    this.initialState = ParserState.GROUND;\n    this.currentState = this.initialState;\n    this._params = new Params(); // defaults to 32 storable params/subparams\n    this._params.addParam(0);    // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n\n    // set default fallback handlers and handler lookup containers\n    this._printHandlerFb = (data, start, end): void => { };\n    this._executeHandlerFb = (code: number): void => { };\n    this._csiHandlerFb = (ident: number, params: IParams): void => { };\n    this._escHandlerFb = (ident: number): void => { };\n    this._errorHandlerFb = (state: IParsingState): IParsingState => state;\n    this._printHandler = this._printHandlerFb;\n    this._executeHandlers = Object.create(null);\n    this._csiHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser = new OscParser();\n    this._dcsParser = new DcsParser();\n    this._errorHandler = this._errorHandlerFb;\n\n    // swallow 7bit ST (ESC+\\)\n    this.setEscHandler({final: '\\\\'}, () => {});\n  }\n\n  protected _identifier(id: IFunctionIdentifier, finalRange: number[] = [0x40, 0x7e]): number {\n    let res = 0;\n    if (id.prefix) {\n      if (id.prefix.length > 1) {\n        throw new Error('only one byte as prefix supported');\n      }\n      res = id.prefix.charCodeAt(0);\n      if (res && 0x3c > res || res > 0x3f) {\n        throw new Error('prefix must be in range 0x3c .. 0x3f');\n      }\n    }\n    if (id.intermediates) {\n      if (id.intermediates.length > 2) {\n        throw new Error('only two bytes as intermediates are supported');\n      }\n      for (let i = 0; i < id.intermediates.length; ++i) {\n        const intermediate = id.intermediates.charCodeAt(i);\n        if (0x20 > intermediate || intermediate > 0x2f) {\n          throw new Error('intermediate must be in range 0x20 .. 0x2f');\n        }\n        res <<= 8;\n        res |= intermediate;\n      }\n    }\n    if (id.final.length !== 1) {\n      throw new Error('final must be a single byte');\n    }\n    const finalCode = id.final.charCodeAt(0);\n    if (finalRange[0] > finalCode || finalCode > finalRange[1]) {\n      throw new Error(`final must be in range ${finalRange[0]} .. ${finalRange[1]}`);\n    }\n    res <<= 8;\n    res |= finalCode;\n\n    return res;\n  }\n\n  public identToString(ident: number): string {\n    const res: string[] = [];\n    while (ident) {\n      res.push(String.fromCharCode(ident & 0xFF));\n      ident >>= 8;\n    }\n    return res.reverse().join('');\n  }\n\n  public dispose(): void {\n    this._csiHandlers = Object.create(null);\n    this._executeHandlers = Object.create(null);\n    this._escHandlers = Object.create(null);\n    this._oscParser.dispose();\n    this._dcsParser.dispose();\n  }\n\n  public setPrintHandler(handler: PrintHandlerType): void {\n    this._printHandler = handler;\n  }\n  public clearPrintHandler(): void {\n    this._printHandler = this._printHandlerFb;\n  }\n\n  public addEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): IDisposable {\n    const ident = this._identifier(id, [0x30, 0x7e]);\n    if (this._escHandlers[ident] === undefined) {\n      this._escHandlers[ident] = [];\n    }\n    const handlerList = this._escHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setEscHandler(id: IFunctionIdentifier, handler: EscHandlerType): void {\n    this._escHandlers[this._identifier(id, [0x30, 0x7e])] = [handler];\n  }\n  public clearEscHandler(id: IFunctionIdentifier): void {\n    if (this._escHandlers[this._identifier(id, [0x30, 0x7e])]) delete this._escHandlers[this._identifier(id, [0x30, 0x7e])];\n  }\n  public setEscHandlerFallback(handler: EscFallbackHandlerType): void {\n    this._escHandlerFb = handler;\n  }\n\n  public setExecuteHandler(flag: string, handler: ExecuteHandlerType): void {\n    this._executeHandlers[flag.charCodeAt(0)] = handler;\n  }\n  public clearExecuteHandler(flag: string): void {\n    if (this._executeHandlers[flag.charCodeAt(0)]) delete this._executeHandlers[flag.charCodeAt(0)];\n  }\n  public setExecuteHandlerFallback(handler: ExecuteFallbackHandlerType): void {\n    this._executeHandlerFb = handler;\n  }\n\n  public addCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): IDisposable {\n    const ident = this._identifier(id);\n    if (this._csiHandlers[ident] === undefined) {\n      this._csiHandlers[ident] = [];\n    }\n    const handlerList = this._csiHandlers[ident];\n    handlerList.push(handler);\n    return {\n      dispose: () => {\n        const handlerIndex = handlerList.indexOf(handler);\n        if (handlerIndex !== -1) {\n          handlerList.splice(handlerIndex, 1);\n        }\n      }\n    };\n  }\n  public setCsiHandler(id: IFunctionIdentifier, handler: CsiHandlerType): void {\n    this._csiHandlers[this._identifier(id)] = [handler];\n  }\n  public clearCsiHandler(id: IFunctionIdentifier): void {\n    if (this._csiHandlers[this._identifier(id)]) delete this._csiHandlers[this._identifier(id)];\n  }\n  public setCsiHandlerFallback(callback: (ident: number, params: IParams) => void): void {\n    this._csiHandlerFb = callback;\n  }\n\n  public addDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): IDisposable {\n    return this._dcsParser.addHandler(this._identifier(id), handler);\n  }\n  public setDcsHandler(id: IFunctionIdentifier, handler: IDcsHandler): void {\n    this._dcsParser.setHandler(this._identifier(id), handler);\n  }\n  public clearDcsHandler(id: IFunctionIdentifier): void {\n    this._dcsParser.clearHandler(this._identifier(id));\n  }\n  public setDcsHandlerFallback(handler: DcsFallbackHandlerType): void {\n    this._dcsParser.setHandlerFallback(handler);\n  }\n\n  public addOscHandler(ident: number, handler: IOscHandler): IDisposable {\n    return this._oscParser.addHandler(ident, handler);\n  }\n  public setOscHandler(ident: number, handler: IOscHandler): void {\n    this._oscParser.setHandler(ident, handler);\n  }\n  public clearOscHandler(ident: number): void {\n    this._oscParser.clearHandler(ident);\n  }\n  public setOscHandlerFallback(handler: OscFallbackHandlerType): void {\n    this._oscParser.setHandlerFallback(handler);\n  }\n\n  public setErrorHandler(callback: (state: IParsingState) => IParsingState): void {\n    this._errorHandler = callback;\n  }\n  public clearErrorHandler(): void {\n    this._errorHandler = this._errorHandlerFb;\n  }\n\n  public reset(): void {\n    this.currentState = this.initialState;\n    this._oscParser.reset();\n    this._dcsParser.reset();\n    this._params.reset();\n    this._params.addParam(0); // ZDM\n    this._collect = 0;\n    this.precedingCodepoint = 0;\n  }\n\n\n\n  /**\n   * Parse UTF32 codepoints in `data` up to `length`.\n   *\n   * Note: For several actions with high data load the parsing is optimized\n   * by using local read ahead loops with hardcoded conditions to\n   * avoid costly table lookups. Make sure that any change of table values\n   * will be reflected in the loop conditions as well and vice versa.\n   * Affected states/actions:\n   * - GROUND:PRINT\n   * - CSI_PARAM:PARAM\n   * - DCS_PARAM:PARAM\n   * - OSC_STRING:OSC_PUT\n   * - DCS_PASSTHROUGH:DCS_PUT\n   */\n  public parse(data: Uint32Array, length: number): void {\n    let code = 0;\n    let transition = 0;\n    let currentState = this.currentState;\n    const osc = this._oscParser;\n    const dcs = this._dcsParser;\n    let collect = this._collect;\n    const params = this._params;\n    const table: Uint8Array = this.TRANSITIONS.table;\n\n    // process input string\n    for (let i = 0; i < length; ++i) {\n      code = data[i];\n\n      // normal transition & action lookup\n      transition = table[currentState << TableAccess.INDEX_STATE_SHIFT | (code < 0xa0 ? code : NON_ASCII_PRINTABLE)];\n      switch (transition >> TableAccess.TRANSITION_ACTION_SHIFT) {\n        case ParserAction.PRINT:\n          // read ahead with loop unrolling\n          // Note: 0x20 (SP) is included, 0x7F (DEL) is excluded\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n            if (++j >= length || (code = data[j]) < 0x20 || (code > 0x7e && code < NON_ASCII_PRINTABLE)) {\n              this._printHandler(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.EXECUTE:\n          if (this._executeHandlers[code]) this._executeHandlers[code]();\n          else this._executeHandlerFb(code);\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.IGNORE:\n          break;\n        case ParserAction.ERROR:\n          const inject: IParsingState = this._errorHandler(\n            {\n              position: i,\n              code,\n              currentState,\n              collect,\n              params,\n              abort: false\n            });\n          if (inject.abort) return;\n          // inject values: currently not implemented\n          break;\n        case ParserAction.CSI_DISPATCH:\n          // Trigger CSI Handler\n          const handlers = this._csiHandlers[collect << 8 | code];\n          let j = handlers ? handlers.length - 1 : -1;\n          for (; j >= 0; j--) {\n            // undefined or true means success and to stop bubbling\n            if (handlers[j](params) !== false) {\n              break;\n            }\n          }\n          if (j < 0) {\n            this._csiHandlerFb(collect << 8 | code, params);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.PARAM:\n          // inner loop: digits (0x30 - 0x39) and ; (0x3b) and : (0x3a)\n          do {\n            switch (code) {\n              case 0x3b:\n                params.addParam(0);  // ZDM\n                break;\n              case 0x3a:\n                params.addSubParam(-1);\n                break;\n              default:  // 0x30 - 0x39\n                params.addDigit(code - 48);\n            }\n          } while (++i < length && (code = data[i]) > 0x2f && code < 0x3c);\n          i--;\n          break;\n        case ParserAction.COLLECT:\n          collect <<= 8;\n          collect |= code;\n          break;\n        case ParserAction.ESC_DISPATCH:\n          const handlersEsc = this._escHandlers[collect << 8 | code];\n          let jj = handlersEsc ? handlersEsc.length - 1 : -1;\n          for (; jj >= 0; jj--) {\n            // undefined or true means success and to stop bubbling\n            if (handlersEsc[jj]() !== false) {\n              break;\n            }\n          }\n          if (jj < 0) {\n            this._escHandlerFb(collect << 8 | code);\n          }\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.CLEAR:\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          break;\n        case ParserAction.DCS_HOOK:\n          dcs.hook(collect << 8 | code, params);\n          break;\n        case ParserAction.DCS_PUT:\n          // inner loop - exit DCS_PUT: 0x18, 0x1a, 0x1b, 0x7f, 0x80 - 0x9f\n          // unhook triggered by: 0x1b, 0x9c (success) and 0x18, 0x1a (abort)\n          for (let j = i + 1; ; ++j) {\n            if (j >= length || (code = data[j]) === 0x18 || code === 0x1a || code === 0x1b || (code > 0x7f && code < NON_ASCII_PRINTABLE)) {\n              dcs.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.DCS_UNHOOK:\n          dcs.unhook(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n        case ParserAction.OSC_START:\n          osc.start();\n          break;\n        case ParserAction.OSC_PUT:\n          // inner loop: 0x20 (SP) included, 0x7F (DEL) included\n          for (let j = i + 1; ; j++) {\n            if (j >= length || (code = data[j]) < 0x20 || (code > 0x7f && code <= 0x9f)) {\n              osc.put(data, i, j);\n              i = j - 1;\n              break;\n            }\n          }\n          break;\n        case ParserAction.OSC_END:\n          osc.end(code !== 0x18 && code !== 0x1a);\n          if (code === 0x1b) transition |= ParserState.ESCAPE;\n          params.reset();\n          params.addParam(0); // ZDM\n          collect = 0;\n          this.precedingCodepoint = 0;\n          break;\n      }\n      currentState = transition & TableAccess.TRANSITION_STATE_MASK;\n    }\n\n    // save collected intermediates\n    this._collect = collect;\n\n    // save state\n    this.currentState = currentState;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { TextRenderLayer } from '../browser/renderer/TextRenderLayer';\nimport { SelectionRenderLayer } from '../browser/renderer/SelectionRenderLayer';\nimport { CursorRenderLayer } from './CursorRenderLayer';\nimport { IRenderLayer, IRenderer, IRenderDimensions, CharacterJoinerHandler, ICharacterJoinerRegistry } from 'browser/renderer/Types';\nimport { ITerminal } from '../Types';\nimport { LinkRenderLayer } from '../browser/renderer/LinkRenderLayer';\nimport { CharacterJoinerRegistry } from 'browser/renderer/CharacterJoinerRegistry';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { removeTerminalFromCache } from 'browser/renderer/atlas/CharAtlasCache';\n\nlet nextRendererId = 1;\n\nexport class Renderer extends Disposable implements IRenderer {\n  private _id = nextRendererId++;\n\n  private _renderLayers: IRenderLayer[];\n  private _devicePixelRatio: number;\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _colors: IColorSet,\n    private readonly _terminal: ITerminal,\n    readonly bufferService: IBufferService,\n    private readonly _charSizeService: ICharSizeService,\n    readonly optionsService: IOptionsService\n  ) {\n    super();\n    const allowTransparency = this._terminal.options.allowTransparency;\n    this._characterJoinerRegistry = new CharacterJoinerRegistry(bufferService);\n\n    this._renderLayers = [\n      new TextRenderLayer(this._terminal.screenElement, 0, this._colors, this._characterJoinerRegistry, allowTransparency, this._id, bufferService, optionsService),\n      new SelectionRenderLayer(this._terminal.screenElement, 1, this._colors, this._id, bufferService, optionsService),\n      new LinkRenderLayer(this._terminal.screenElement, 2, this._colors, this._id, this._terminal.linkifier, bufferService, optionsService),\n      new CursorRenderLayer(this._terminal.screenElement, 3, this._colors, this._terminal, this._id, bufferService, optionsService)\n    ];\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._devicePixelRatio = window.devicePixelRatio;\n    this._updateDimensions();\n    this.onOptionsChanged();\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._renderLayers.forEach(l => l.dispose());\n    removeTerminalFromCache(this._id);\n  }\n\n  public onDevicePixelRatioChange(): void {\n    // If the device pixel ratio changed, the char atlas needs to be regenerated\n    // and the terminal needs to refreshed\n    if (this._devicePixelRatio !== window.devicePixelRatio) {\n      this._devicePixelRatio = window.devicePixelRatio;\n      this.onResize(this._terminal.cols, this._terminal.rows);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n\n    // Clear layers and force a full render\n    this._renderLayers.forEach(l => {\n      l.setColors(this._colors);\n      l.reset();\n    });\n  }\n\n  public onResize(cols: number, rows: number): void {\n    // Update character and canvas dimensions\n    this._updateDimensions();\n\n    // Resize all render layers\n    this._renderLayers.forEach(l => l.resize(this.dimensions));\n\n    // Resize the screen\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public onCharSizeChanged(): void {\n    this.onResize(this._terminal.cols, this._terminal.rows);\n  }\n\n  public onBlur(): void {\n    this._runOperation(l => l.onBlur());\n  }\n\n  public onFocus(): void {\n    this._runOperation(l => l.onFocus());\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean = false): void {\n    this._runOperation(l => l.onSelectionChanged(start, end, columnSelectMode));\n  }\n\n  public onCursorMove(): void {\n    this._runOperation(l => l.onCursorMove());\n  }\n\n  public onOptionsChanged(): void {\n    this._runOperation(l => l.onOptionsChanged());\n  }\n\n  public clear(): void {\n    this._runOperation(l => l.reset());\n  }\n\n  private _runOperation(operation: (layer: IRenderLayer) => void): void {\n    this._renderLayers.forEach(l => operation(l));\n  }\n\n  /**\n   * Performs the refresh loop callback, calling refresh only if a refresh is\n   * necessary before queueing up the next one.\n   */\n  public renderRows(start: number, end: number): void {\n    this._renderLayers.forEach(l => l.onGridChanged(start, end));\n  }\n\n  /**\n   * Recalculates the character and canvas dimensions.\n   */\n  private _updateDimensions(): void {\n    if (!this._charSizeService.hasValidSize) {\n      return;\n    }\n\n    // Calculate the scaled character width. Width is floored as it must be\n    // drawn to an integer grid in order for the CharAtlas \"stamps\" to not be\n    // blurry. When text is drawn to the grid not using the CharAtlas, it is\n    // clipped to ensure there is no overlap with the next cell.\n    this.dimensions.scaledCharWidth = Math.floor(this._charSizeService.width * window.devicePixelRatio);\n\n    // Calculate the scaled character height. Height is ceiled in case\n    // devicePixelRatio is a floating point number in order to ensure there is\n    // enough space to draw the character to the cell.\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n\n    // Calculate the scaled cell height, if lineHeight is not 1 then the value\n    // will be floored because since lineHeight can never be lower then 1, there\n    // is a guarentee that the scaled line height will always be larger than\n    // scaled char height.\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n\n    // Calculate the y coordinate within a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharTop = this._terminal.options.lineHeight === 1 ? 0 : Math.round((this.dimensions.scaledCellHeight - this.dimensions.scaledCharHeight) / 2);\n\n    // Calculate the scaled cell width, taking the letterSpacing into account.\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n\n    // Calculate the x coordinate with a cell that text should draw from in\n    // order to draw in the center of a cell.\n    this.dimensions.scaledCharLeft = Math.floor(this._terminal.options.letterSpacing / 2);\n\n    // Recalculate the canvas dimensions; scaled* define the actual number of\n    // pixel in the canvas\n    this.dimensions.scaledCanvasHeight = this._terminal.rows * this.dimensions.scaledCellHeight;\n    this.dimensions.scaledCanvasWidth = this._terminal.cols * this.dimensions.scaledCellWidth;\n\n    // The the size of the canvas on the page. It's very important that this\n    // rounds to nearest integer and not ceils as browsers often set\n    // window.devicePixelRatio as something like 1.100000023841858, when it's\n    // actually 1.1. Ceiling causes blurriness as the backing canvas image is 1\n    // pixel too large for the canvas element size.\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n\n    // Get the _actual_ dimensions of an individual cell. This needs to be\n    // derived from the canvasWidth/Height calculated above which takes into\n    // account window.devicePixelRatio. ICharSizeService.width/height by itself\n    // is insufficient when the page is not at 100% zoom level as it's measured\n    // in CSS pixels, but the actual char size on the canvas can differ.\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._characterJoinerRegistry.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._characterJoinerRegistry.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharacterJoinerRegistry, IRenderDimensions } from 'browser/renderer/Types';\nimport { CharData, ICellData } from 'common/Types';\nimport { GridCache } from 'browser/renderer/GridCache';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, Content } from 'common/buffer/Constants';\nimport { JoinedCellData } from 'browser/renderer/CharacterJoinerRegistry';\nimport { IColorSet } from 'browser/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * This CharData looks like a null character, which will forc a clear and render\n * when the character changes (a regular space ' ' character may not as it's\n * drawn state is a cleared cell).\n */\n// const OVERLAP_OWNED_CHAR_DATA: CharData = [null, '', 0, -1];\n\nexport class TextRenderLayer extends BaseRenderLayer {\n  private _state: GridCache<CharData>;\n  private _characterWidth: number = 0;\n  private _characterFont: string = '';\n  private _characterOverlapCache: { [key: string]: boolean } = {};\n  private _characterJoinerRegistry: ICharacterJoinerRegistry;\n  private _workCell = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    characterJoinerRegistry: ICharacterJoinerRegistry,\n    alpha: boolean,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'text', zIndex, alpha, colors, rendererId, bufferService, optionsService);\n    this._state = new GridCache<CharData>();\n    this._characterJoinerRegistry = characterJoinerRegistry;\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n\n    // Clear the character width cache if the font or width has changed\n    const terminalFont = this._getFont(false, false);\n    if (this._characterWidth !== dim.scaledCharWidth || this._characterFont !== terminalFont) {\n      this._characterWidth = dim.scaledCharWidth;\n      this._characterFont = terminalFont;\n      this._characterOverlapCache = {};\n    }\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state.clear();\n    this._state.resize(this._bufferService.cols, this._bufferService.rows);\n  }\n\n  public reset(): void {\n    this._state.clear();\n    this._clearAll();\n  }\n\n  private _forEachCell(\n    firstRow: number,\n    lastRow: number,\n    joinerRegistry: ICharacterJoinerRegistry | null,\n    callback: (\n      cell: ICellData,\n      x: number,\n      y: number\n    ) => void\n  ): void {\n    for (let y = firstRow; y <= lastRow; y++) {\n      const row = y + this._bufferService.buffer.ydisp;\n      const line = this._bufferService.buffer.lines.get(row);\n      const joinedRanges = joinerRegistry ? joinerRegistry.getJoinedCharacters(row) : [];\n      for (let x = 0; x < this._bufferService.cols; x++) {\n        line!.loadCell(x, this._workCell);\n        let cell = this._workCell;\n\n        // If true, indicates that the current character(s) to draw were joined.\n        let isJoined = false;\n        let lastCharX = x;\n\n        // The character to the left is a wide character, drawing is owned by\n        // the char at x-1\n        if (cell.getWidth() === 0) {\n          continue;\n        }\n\n        // Process any joined character ranges as needed. Because of how the\n        // ranges are produced, we know that they are valid for the characters\n        // and attributes of our input.\n        if (joinedRanges.length > 0 && x === joinedRanges[0][0]) {\n          isJoined = true;\n          const range = joinedRanges.shift()!;\n\n          // We already know the exact start and end column of the joined range,\n          // so we get the string and width representing it directly\n\n          cell = new JoinedCellData(\n            this._workCell,\n            line!.translateToString(true, range[0], range[1]),\n            range[1] - range[0]\n          );\n\n          // Skip over the cells occupied by this range in the loop\n          lastCharX = range[1] - 1;\n        }\n\n        // If the character is an overlapping char and the character to the\n        // right is a space, take ownership of the cell to the right. We skip\n        // this check for joined characters because their rendering likely won't\n        // yield the same result as rendering the last character individually.\n        if (!isJoined && this._isOverlapping(cell)) {\n          // If the character is overlapping, we want to force a re-render on every\n          // frame. This is specifically to work around the case where two\n          // overlaping chars `a` and `b` are adjacent, the cursor is moved to b and a\n          // space is added. Without this, the first half of `b` would never\n          // get removed, and `a` would not re-render because it thinks it's\n          // already in the correct state.\n          // this._state.cache[x][y] = OVERLAP_OWNED_CHAR_DATA;\n          if (lastCharX < line!.length - 1 && line!.getCodePoint(lastCharX + 1) === NULL_CELL_CODE) {\n            // patch width to 2\n            cell.content &= ~Content.WIDTH_MASK;\n            cell.content |= 2 << Content.WIDTH_SHIFT;\n            // this._clearChar(x + 1, y);\n            // The overlapping char's char data will force a clear and render when the\n            // overlapping char is no longer to the left of the character and also when\n            // the space changes to another character.\n            // this._state.cache[x + 1][y] = OVERLAP_OWNED_CHAR_DATA;\n          }\n        }\n\n        callback(\n          cell,\n          x,\n          y\n        );\n\n        x = lastCharX;\n      }\n    }\n  }\n\n  /**\n   * Draws the background for a specified range of columns. Tries to batch adjacent cells of the\n   * same color together to reduce draw calls.\n   */\n  private _drawBackground(firstRow: number, lastRow: number): void {\n    const ctx = this._ctx;\n    const cols = this._bufferService.cols;\n    let startX: number = 0;\n    let startY: number = 0;\n    let prevFillStyle: string | null = null;\n\n    ctx.save();\n\n    this._forEachCell(firstRow, lastRow, null, (cell, x, y) => {\n      // libvte and xterm both draw the background (but not foreground) of invisible characters,\n      // so we should too.\n      let nextFillStyle = null; // null represents default background color\n\n      if (cell.isInverse()) {\n        if (cell.isFgDefault()) {\n          nextFillStyle = this._colors.foreground.css;\n        } else if (cell.isFgRGB()) {\n          nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n        } else {\n          nextFillStyle = this._colors.ansi[cell.getFgColor()].css;\n        }\n      } else if (cell.isBgRGB()) {\n        nextFillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n      } else if (cell.isBgPalette()) {\n        nextFillStyle = this._colors.ansi[cell.getBgColor()].css;\n      }\n\n      if (prevFillStyle === null) {\n        // This is either the first iteration, or the default background was set. Either way, we\n        // don't need to draw anything.\n        startX = x;\n        startY = y;\n      }\n\n      if (y !== startY) {\n        // our row changed, draw the previous row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, cols - startX, 1);\n        startX = x;\n        startY = y;\n      } else if (prevFillStyle !== nextFillStyle) {\n        // our color changed, draw the previous characters in this row\n        ctx.fillStyle = prevFillStyle ? prevFillStyle : '';\n        this._fillCells(startX, startY, x - startX, 1);\n        startX = x;\n        startY = y;\n      }\n\n      prevFillStyle = nextFillStyle;\n    });\n\n    // flush the last color we encountered\n    if (prevFillStyle !== null) {\n      ctx.fillStyle = prevFillStyle;\n      this._fillCells(startX, startY, cols - startX, 1);\n    }\n\n    ctx.restore();\n  }\n\n  private _drawForeground(firstRow: number, lastRow: number): void {\n    this._forEachCell(firstRow, lastRow, this._characterJoinerRegistry, (cell, x, y) => {\n      if (cell.isInvisible()) {\n        return;\n      }\n      this._drawChars(cell, x, y);\n      if (cell.isUnderline()) {\n        this._ctx.save();\n\n        if (cell.isInverse()) {\n          if (cell.isBgDefault()) {\n            this._ctx.fillStyle = this._colors.background.css;\n          } else if (cell.isBgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getBgColor()).join(',')})`;\n          } else {\n            this._ctx.fillStyle = this._colors.ansi[cell.getBgColor()].css;\n          }\n        } else {\n          if (cell.isFgDefault()) {\n            this._ctx.fillStyle = this._colors.foreground.css;\n          } else if (cell.isFgRGB()) {\n            this._ctx.fillStyle = `rgb(${AttributeData.toColorRGB(cell.getFgColor()).join(',')})`;\n          } else {\n            let fg = cell.getFgColor();\n            if (this._optionsService.options.drawBoldTextInBrightColors && cell.isBold() && fg < 8) {\n              fg += 8;\n            }\n            this._ctx.fillStyle = this._colors.ansi[fg].css;\n          }\n        }\n\n        this._fillBottomLineAtCells(x, y, cell.getWidth());\n        this._ctx.restore();\n      }\n    });\n  }\n\n  public onGridChanged(firstRow: number, lastRow: number): void {\n    // Resize has not been called yet\n    if (this._state.cache.length === 0) {\n      return;\n    }\n\n    if (this._charAtlas) {\n      this._charAtlas.beginFrame();\n    }\n\n    this._clearCells(0, firstRow, this._bufferService.cols, lastRow - firstRow + 1);\n    this._drawBackground(firstRow, lastRow);\n    this._drawForeground(firstRow, lastRow);\n  }\n\n  public onOptionsChanged(): void {\n    this._setTransparency(this._optionsService.options.allowTransparency);\n  }\n\n  /**\n   * Whether a character is overlapping to the next cell.\n   */\n  private _isOverlapping(cell: ICellData): boolean {\n    // Only single cell characters can be overlapping, rendering issues can\n    // occur without this check\n    if (cell.getWidth() !== 1) {\n      return false;\n    }\n\n    // We assume that any ascii character will not overlap\n    if (cell.getCode() < 256) {\n      return false;\n    }\n\n    const chars = cell.getChars();\n\n    // Deliver from cache if available\n    if (this._characterOverlapCache.hasOwnProperty(chars)) {\n      return this._characterOverlapCache[chars];\n    }\n\n    // Setup the font\n    this._ctx.save();\n    this._ctx.font = this._characterFont;\n\n    // Measure the width of the character, but Math.floor it\n    // because that is what the renderer does when it calculates\n    // the character dimensions we are comparing against\n    const overlaps = Math.floor(this._ctx.measureText(chars).width) > this._characterWidth;\n\n    // Restore the original context\n    this._ctx.restore();\n\n    // Cache and return\n    this._characterOverlapCache[chars] = overlaps;\n    return overlaps;\n  }\n\n  /**\n   * Clear the charcater at the cell specified.\n   * @param x The column of the char.\n   * @param y The row of the char.\n   */\n  // private _clearChar(x: number, y: number): void {\n  //   let colsToClear = 1;\n  //   // Clear the adjacent character if it was wide\n  //   const state = this._state.cache[x][y];\n  //   if (state && state[CHAR_DATA_WIDTH_INDEX] === 2) {\n  //     colsToClear = 2;\n  //   }\n  //   this.clearCells(x, y, colsToClear, 1);\n  // }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nexport class GridCache<T> {\n  public cache: (T | undefined)[][];\n\n  public constructor() {\n    this.cache = [];\n  }\n\n  public resize(width: number, height: number): void {\n    for (let x = 0; x < width; x++) {\n      if (this.cache.length <= x) {\n        this.cache.push([]);\n      }\n      for (let y = this.cache[x].length; y < height; y++) {\n        this.cache[x].push(undefined);\n      }\n      this.cache[x].length = height;\n    }\n    this.cache.length = width;\n  }\n\n  public clear(): void {\n    for (let x = 0; x < this.cache.length; x++) {\n      for (let y = 0; y < this.cache[x].length; y++) {\n        this.cache[x][y] = undefined;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { DIM_OPACITY, INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { IGlyphIdentifier, ICharAtlasConfig } from 'browser/renderer/atlas/Types';\nimport { BaseCharAtlas } from 'browser/renderer/atlas/BaseCharAtlas';\nimport { DEFAULT_ANSI_COLORS } from 'browser/ColorManager';\nimport { LRUMap } from 'browser/renderer/atlas/LRUMap';\nimport { isFirefox, isSafari } from 'common/Platform';\nimport { IColor } from 'browser/Types';\nimport { throwIfFalsy } from 'browser/renderer/RendererUtils';\n\n// In practice we're probably never going to exhaust a texture this large. For debugging purposes,\n// however, it can be useful to set this to a really tiny value, to verify that LRU eviction works.\nconst TEXTURE_WIDTH = 1024;\nconst TEXTURE_HEIGHT = 1024;\n\nconst TRANSPARENT_COLOR = {\n  css: 'rgba(0, 0, 0, 0)',\n  rgba: 0\n};\n\n// Drawing to the cache is expensive: If we have to draw more than this number of glyphs to the\n// cache in a single frame, give up on trying to cache anything else, and try to finish the current\n// frame ASAP.\n//\n// This helps to limit the amount of damage a program can do when it would otherwise thrash the\n// cache.\nconst FRAME_CACHE_DRAW_LIMIT = 100;\n\n/**\n * The number of milliseconds to wait before generating the ImageBitmap, this is to debounce/batch\n * the operation as window.createImageBitmap is asynchronous.\n */\nconst GLYPH_BITMAP_COMMIT_DELAY = 100;\n\ninterface IGlyphCacheValue {\n  index: number;\n  isEmpty: boolean;\n  inBitmap: boolean;\n}\n\nexport function getGlyphCacheKey(glyph: IGlyphIdentifier): number {\n  // Note that this only returns a valid key when code < 256\n  // Layout:\n  // 0b00000000000000000000000000000001: italic (1)\n  // 0b00000000000000000000000000000010: dim (1)\n  // 0b00000000000000000000000000000100: bold (1)\n  // 0b00000000000000000000111111111000: fg (9)\n  // 0b00000000000111111111000000000000: bg (9)\n  // 0b00011111111000000000000000000000: code (8)\n  // 0b11100000000000000000000000000000: unused (3)\n  return glyph.code << 21 | glyph.bg << 12 | glyph.fg << 3 | (glyph.bold ? 0 : 4) + (glyph.dim ? 0 : 2) + (glyph.italic ? 0 : 1);\n}\n\nexport class DynamicCharAtlas extends BaseCharAtlas {\n  // An ordered map that we're using to keep track of where each glyph is in the atlas texture.\n  // It's ordered so that we can determine when to remove the old entries.\n  private _cacheMap: LRUMap<IGlyphCacheValue>;\n\n  // The texture that the atlas is drawn to\n  private _cacheCanvas: HTMLCanvasElement;\n  private _cacheCtx: CanvasRenderingContext2D;\n\n  // A temporary context that glyphs are drawn to before being transfered to the atlas.\n  private _tmpCtx: CanvasRenderingContext2D;\n\n  // The number of characters stored in the atlas by width/height\n  private _width: number;\n  private _height: number;\n\n  private _drawToCacheCount: number = 0;\n\n  // An array of glyph keys that are waiting on the bitmap to be generated.\n  private _glyphsWaitingOnBitmap: IGlyphCacheValue[] = [];\n\n  // The timeout that is used to batch bitmap generation so it's not requested for every new glyph.\n  private _bitmapCommitTimeout: number | null = null;\n\n  // The bitmap to draw from, this is much faster on other browsers than others.\n  private _bitmap: ImageBitmap | null = null;\n\n  constructor(document: Document, private _config: ICharAtlasConfig) {\n    super();\n    this._cacheCanvas = document.createElement('canvas');\n    this._cacheCanvas.width = TEXTURE_WIDTH;\n    this._cacheCanvas.height = TEXTURE_HEIGHT;\n    // The canvas needs alpha because we use clearColor to convert the background color to alpha.\n    // It might also contain some characters with transparent backgrounds if allowTransparency is\n    // set.\n    this._cacheCtx = throwIfFalsy(this._cacheCanvas.getContext('2d', {alpha: true}));\n\n    const tmpCanvas = document.createElement('canvas');\n    tmpCanvas.width = this._config.scaledCharWidth;\n    tmpCanvas.height = this._config.scaledCharHeight;\n    this._tmpCtx = throwIfFalsy(tmpCanvas.getContext('2d', {alpha: this._config.allowTransparency}));\n\n    this._width = Math.floor(TEXTURE_WIDTH / this._config.scaledCharWidth);\n    this._height = Math.floor(TEXTURE_HEIGHT / this._config.scaledCharHeight);\n    const capacity = this._width * this._height;\n    this._cacheMap = new LRUMap(capacity);\n    this._cacheMap.prealloc(capacity);\n\n    // This is useful for debugging\n    // document.body.appendChild(this._cacheCanvas);\n  }\n\n  public dispose(): void {\n    if (this._bitmapCommitTimeout !== null) {\n      window.clearTimeout(this._bitmapCommitTimeout);\n      this._bitmapCommitTimeout = null;\n    }\n  }\n\n  public beginFrame(): void {\n    this._drawToCacheCount = 0;\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    // Space is always an empty cell, special case this as it's so common\n    if (glyph.code === 32) {\n      return true;\n    }\n\n    // Exit early for uncachable glyphs\n    if (!this._canCache(glyph)) {\n      return false;\n    }\n\n    const glyphKey = getGlyphCacheKey(glyph);\n    const cacheValue = this._cacheMap.get(glyphKey);\n    if (cacheValue !== null && cacheValue !== undefined) {\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    } else if (this._drawToCacheCount < FRAME_CACHE_DRAW_LIMIT) {\n      let index;\n      if (this._cacheMap.size < this._cacheMap.capacity) {\n        index = this._cacheMap.size;\n      } else {\n        // we're out of space, so our call to set will delete this item\n        index = this._cacheMap.peek()!.index;\n      }\n      const cacheValue = this._drawToCache(glyph, index);\n      this._cacheMap.set(glyphKey, cacheValue);\n      this._drawFromCache(ctx, cacheValue, x, y);\n      return true;\n    }\n    return false;\n  }\n\n  private _canCache(glyph: IGlyphIdentifier): boolean {\n    // Only cache ascii and extended characters for now, to be safe. In the future, we could do\n    // something more complicated to determine the expected width of a character.\n    //\n    // If we switch the renderer over to webgl at some point, we may be able to use blending modes\n    // to draw overlapping glyphs from the atlas:\n    // https://github.com/servo/webrender/issues/464#issuecomment-255632875\n    // https://webglfundamentals.org/webgl/lessons/webgl-text-texture.html\n    return glyph.code < 256;\n  }\n\n  private _toCoordinateX(index: number): number {\n    return (index % this._width) * this._config.scaledCharWidth;\n  }\n\n  private _toCoordinateY(index: number): number {\n    return Math.floor(index / this._width) * this._config.scaledCharHeight;\n  }\n\n  private _drawFromCache(\n    ctx: CanvasRenderingContext2D,\n    cacheValue: IGlyphCacheValue,\n    x: number,\n    y: number\n  ): void {\n    // We don't actually need to do anything if this is whitespace.\n    if (cacheValue.isEmpty) {\n      return;\n    }\n    const cacheX = this._toCoordinateX(cacheValue.index);\n    const cacheY = this._toCoordinateY(cacheValue.index);\n    ctx.drawImage(\n      cacheValue.inBitmap ? this._bitmap! : this._cacheCanvas,\n      cacheX,\n      cacheY,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight,\n      x,\n      y,\n      this._config.scaledCharWidth,\n      this._config.scaledCharHeight\n    );\n  }\n\n  private _getColorFromAnsiIndex(idx: number): IColor {\n    if (idx < this._config.colors.ansi.length) {\n      return this._config.colors.ansi[idx];\n    }\n    return DEFAULT_ANSI_COLORS[idx];\n  }\n\n  private _getBackgroundColor(glyph: IGlyphIdentifier): IColor {\n    if (this._config.allowTransparency) {\n      // The background color might have some transparency, so we need to render it as fully\n      // transparent in the atlas. Otherwise we'd end up drawing the transparent background twice\n      // around the anti-aliased edges of the glyph, and it would look too dark.\n      return TRANSPARENT_COLOR;\n    } else if (glyph.bg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.foreground;\n    } else if (glyph.bg < 256) {\n      return this._getColorFromAnsiIndex(glyph.bg);\n    }\n    return this._config.colors.background;\n  }\n\n  private _getForegroundColor(glyph: IGlyphIdentifier): IColor {\n    if (glyph.fg === INVERTED_DEFAULT_COLOR) {\n      return this._config.colors.background;\n    } else if (glyph.fg < 256) {\n      // 256 color support\n      return this._getColorFromAnsiIndex(glyph.fg);\n    }\n    return this._config.colors.foreground;\n  }\n\n  // TODO: We do this (or something similar) in multiple places. We should split this off\n  // into a shared function.\n  private _drawToCache(glyph: IGlyphIdentifier, index: number): IGlyphCacheValue {\n    this._drawToCacheCount++;\n\n    this._tmpCtx.save();\n\n    // draw the background\n    const backgroundColor = this._getBackgroundColor(glyph);\n    // Use a 'copy' composite operation to clear any existing glyph out of _tmpCtxWithAlpha, regardless of\n    // transparency in backgroundColor\n    this._tmpCtx.globalCompositeOperation = 'copy';\n    this._tmpCtx.fillStyle = backgroundColor.css;\n    this._tmpCtx.fillRect(0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight);\n    this._tmpCtx.globalCompositeOperation = 'source-over';\n\n    // draw the foreground/glyph\n    const fontWeight = glyph.bold ? this._config.fontWeightBold : this._config.fontWeight;\n    const fontStyle = glyph.italic ? 'italic' : '';\n    this._tmpCtx.font =\n      `${fontStyle} ${fontWeight} ${this._config.fontSize * this._config.devicePixelRatio}px ${this._config.fontFamily}`;\n    this._tmpCtx.textBaseline = 'middle';\n\n    this._tmpCtx.fillStyle = this._getForegroundColor(glyph).css;\n\n    // Apply alpha to dim the character\n    if (glyph.dim) {\n      this._tmpCtx.globalAlpha = DIM_OPACITY;\n    }\n    // Draw the character\n    this._tmpCtx.fillText(glyph.chars, 0, this._config.scaledCharHeight / 2);\n    this._tmpCtx.restore();\n\n    // clear the background from the character to avoid issues with drawing over the previous\n    // character if it extends past it's bounds\n    const imageData = this._tmpCtx.getImageData(\n      0, 0, this._config.scaledCharWidth, this._config.scaledCharHeight\n    );\n    let isEmpty = false;\n    if (!this._config.allowTransparency) {\n      isEmpty = clearColor(imageData, backgroundColor);\n    }\n\n    // copy the data from imageData to _cacheCanvas\n    const x = this._toCoordinateX(index);\n    const y = this._toCoordinateY(index);\n    // putImageData doesn't do any blending, so it will overwrite any existing cache entry for us\n    this._cacheCtx.putImageData(imageData, x, y);\n\n    // Add the glyph and queue it to the bitmap (if the browser supports it)\n    const cacheValue = {\n      index,\n      isEmpty,\n      inBitmap: false\n    };\n    this._addGlyphToBitmap(cacheValue);\n\n    return cacheValue;\n  }\n\n  private _addGlyphToBitmap(cacheValue: IGlyphCacheValue): void {\n    // Support is patchy for createImageBitmap at the moment, pass a canvas back\n    // if support is lacking as drawImage works there too. Firefox is also\n    // included here as ImageBitmap appears both buggy and has horrible\n    // performance (tested on v55).\n    if (!('createImageBitmap' in window) || isFirefox || isSafari) {\n      return;\n    }\n\n    // Add the glyph to the queue\n    this._glyphsWaitingOnBitmap.push(cacheValue);\n\n    // Check if bitmap generation timeout already exists\n    if (this._bitmapCommitTimeout !== null) {\n      return;\n    }\n\n    this._bitmapCommitTimeout = window.setTimeout(() => this._generateBitmap(), GLYPH_BITMAP_COMMIT_DELAY);\n  }\n\n  private _generateBitmap(): void {\n    const glyphsMovingToBitmap = this._glyphsWaitingOnBitmap;\n    this._glyphsWaitingOnBitmap = [];\n    window.createImageBitmap(this._cacheCanvas).then(bitmap => {\n      // Set bitmap\n      this._bitmap = bitmap;\n\n      // Mark all new glyphs as in bitmap, excluding glyphs that came in after\n      // the bitmap was requested\n      for (let i = 0; i < glyphsMovingToBitmap.length; i++) {\n        const value = glyphsMovingToBitmap[i];\n        // It doesn't matter if the value was already evicted, it will be\n        // released from memory after this block if so.\n        value.inBitmap = true;\n      }\n    });\n    this._bitmapCommitTimeout = null;\n  }\n}\n\n// This is used for debugging the renderer, just swap out `new DynamicCharAtlas` with\n// `new NoneCharAtlas`.\nexport class NoneCharAtlas extends BaseCharAtlas {\n  constructor(document: Document, config: ICharAtlasConfig) {\n    super();\n  }\n\n  public draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean {\n    return false;\n  }\n}\n\n/**\n * Makes a partiicular rgb color in an ImageData completely transparent.\n * @returns True if the result is \"empty\", meaning all pixels are fully transparent.\n */\nfunction clearColor(imageData: ImageData, color: IColor): boolean {\n  let isEmpty = true;\n  const r = color.rgba >>> 24;\n  const g = color.rgba >>> 16 & 0xFF;\n  const b = color.rgba >>> 8 & 0xFF;\n  for (let offset = 0; offset < imageData.data.length; offset += 4) {\n    if (imageData.data[offset] === r &&\n        imageData.data[offset + 1] === g &&\n        imageData.data[offset + 2] === b) {\n      imageData.data[offset + 3] = 0;\n    } else {\n      isEmpty = false;\n    }\n  }\n  return isEmpty;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IGlyphIdentifier } from 'browser/renderer/atlas/Types';\nimport { IDisposable } from 'common/Types';\n\nexport abstract class BaseCharAtlas implements IDisposable {\n  private _didWarmUp: boolean = false;\n\n  public dispose(): void { }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. May be called multiple times.\n   * Implement _doWarmUp instead if you only want to get called once.\n   */\n  public warmUp(): void {\n    if (!this._didWarmUp) {\n      this._doWarmUp();\n      this._didWarmUp = true;\n    }\n  }\n\n  /**\n   * Perform any work needed to warm the cache before it can be used. Used by the default\n   * implementation of warmUp(), and will only be called once.\n   */\n  protected _doWarmUp(): void { }\n\n  /**\n   * Called when we start drawing a new frame.\n   *\n   * TODO: We rely on this getting called by TextRenderLayer. This should really be called by\n   * Renderer instead, but we need to make Renderer the source-of-truth for the char atlas, instead\n   * of BaseRenderLayer.\n   */\n  public beginFrame(): void { }\n\n  /**\n   * May be called before warmUp finishes, however it is okay for the implementation to\n   * do nothing and return false in that case.\n   *\n   * @param ctx Where to draw the character onto.\n   * @param glyph Information about what to draw\n   * @param x The position on the context to start drawing at\n   * @param y The position on the context to start drawing at\n   * @returns The success state. True if we drew the character.\n   */\n  public abstract draw(\n    ctx: CanvasRenderingContext2D,\n    glyph: IGlyphIdentifier,\n    x: number,\n    y: number\n  ): boolean;\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ninterface ILinkedListNode<T> {\n  prev: ILinkedListNode<T> | null;\n  next: ILinkedListNode<T> | null;\n  key: number | null;\n  value: T | null;\n}\n\nexport class LRUMap<T> {\n  private _map: { [key: number]: ILinkedListNode<T> } = {};\n  private _head: ILinkedListNode<T> | null = null;\n  private _tail: ILinkedListNode<T> | null = null;\n  private _nodePool: ILinkedListNode<T>[] = [];\n  public size: number = 0;\n\n  constructor(public capacity: number) { }\n\n  private _unlinkNode(node: ILinkedListNode<T>): void {\n    const prev = node.prev;\n    const next = node.next;\n    if (node === this._head) {\n      this._head = next;\n    }\n    if (node === this._tail) {\n      this._tail = prev;\n    }\n    if (prev !== null) {\n      prev.next = next;\n    }\n    if (next !== null) {\n      next.prev = prev;\n    }\n  }\n\n  private _appendNode(node: ILinkedListNode<T>): void {\n    const tail = this._tail;\n    if (tail !== null) {\n      tail.next = node;\n    }\n    node.prev = tail;\n    node.next = null;\n    this._tail = node;\n    if (this._head === null) {\n      this._head = node;\n    }\n  }\n\n  /**\n   * Preallocate a bunch of linked-list nodes. Allocating these nodes ahead of time means that\n   * they're more likely to live next to each other in memory, which seems to improve performance.\n   *\n   * Each empty object only consumes about 60 bytes of memory, so this is pretty cheap, even for\n   * large maps.\n   */\n  public prealloc(count: number): void {\n    const nodePool = this._nodePool;\n    for (let i = 0; i < count; i++) {\n      nodePool.push({\n        prev: null,\n        next: null,\n        key: null,\n        value: null\n      });\n    }\n  }\n\n  public get(key: number): T | null {\n    // This is unsafe: We're assuming our keyspace doesn't overlap with Object.prototype. However,\n    // it's faster than calling hasOwnProperty, and in our case, it would never overlap.\n    const node = this._map[key];\n    if (node !== undefined) {\n      this._unlinkNode(node);\n      this._appendNode(node);\n      return node.value;\n    }\n    return null;\n  }\n\n  /**\n   * Gets a value from a key without marking it as the most recently used item.\n   */\n  public peekValue(key: number): T | null {\n    const node = this._map[key];\n    if (node !== undefined) {\n      return node.value;\n    }\n    return null;\n  }\n\n  public peek(): T | null {\n    const head = this._head;\n    return head === null ? null : head.value;\n  }\n\n  public set(key: number, value: T): void {\n    // This is unsafe: See note above.\n    let node = this._map[key];\n    if (node !== undefined) {\n      // already exists, we just need to mutate it and move it to the end of the list\n      node = this._map[key];\n      this._unlinkNode(node);\n      node.value = value;\n    } else if (this.size >= this.capacity) {\n      // we're out of space: recycle the head node, move it to the tail\n      node = this._head!;\n      this._unlinkNode(node);\n      delete this._map[node.key!];\n      node.key = key;\n      node.value = value;\n      this._map[key] = node;\n    } else {\n      // make a new element\n      const nodePool = this._nodePool;\n      if (nodePool.length > 0) {\n        // use a preallocated node if we can\n        node = nodePool.pop()!;\n        node.key = key;\n        node.value = value;\n      } else {\n        node = {\n          prev: null,\n          next: null,\n          key,\n          value\n        };\n      }\n      this._map[key] = node;\n      this.size++;\n    }\n    this._appendNode(node);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from 'browser/renderer/BaseRenderLayer';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ISelectionState {\n  start?: [number, number];\n  end?: [number, number];\n  columnSelectMode?: boolean;\n  ydisp?: number;\n}\n\nexport class SelectionRenderLayer extends BaseRenderLayer {\n  private _state!: ISelectionState;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'selection', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._clearState();\n  }\n\n  private _clearState(): void {\n    this._state = {\n      start: undefined,\n      end: undefined,\n      columnSelectMode: undefined,\n      ydisp: undefined\n    };\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._clearState();\n  }\n\n  public reset(): void {\n    if (this._state.start && this._state.end) {\n      this._clearState();\n      this._clearAll();\n    }\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Selection has not changed\n    if (!this._didStateChange(start, end, columnSelectMode, this._bufferService.buffer.ydisp)) {\n      return;\n    }\n\n    // Remove all selections\n    this._clearAll();\n\n    // Selection does not exist\n    if (!start || !end) {\n      this._clearState();\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._bufferService.buffer.ydisp;\n    const viewportEndRow = end[1] - this._bufferService.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._bufferService.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._bufferService.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    this._ctx.fillStyle = this._colors.selection.css;\n\n    if (columnSelectMode) {\n      const startCol = start[0];\n      const width = end[0] - startCol;\n      const height = viewportCappedEndRow - viewportCappedStartRow + 1;\n      this._fillCells(startCol, viewportCappedStartRow, width, height);\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const startRowEndCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n      this._fillCells(startCol, viewportCappedStartRow, startRowEndCol - startCol, 1);\n\n      // Draw middle rows\n      const middleRowsCount = Math.max(viewportCappedEndRow - viewportCappedStartRow - 1, 0);\n      this._fillCells(0, viewportCappedStartRow + 1, this._bufferService.cols, middleRowsCount);\n\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewportStartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._bufferService.cols;\n        this._fillCells(0, viewportCappedEndRow, endCol, 1);\n      }\n    }\n\n    // Save state for next render\n    this._state.start = [start[0], start[1]];\n    this._state.end = [end[0], end[1]];\n    this._state.columnSelectMode = columnSelectMode;\n    this._state.ydisp = this._bufferService.buffer.ydisp;\n  }\n\n  private _didStateChange(start: [number, number], end: [number, number], columnSelectMode: boolean, ydisp: number): boolean {\n    return !this._areCoordinatesEqual(start, this._state.start) ||\n      !this._areCoordinatesEqual(end, this._state.end) ||\n      columnSelectMode !== this._state.columnSelectMode ||\n      ydisp !== this._state.ydisp;\n  }\n\n  private _areCoordinatesEqual(coord1: [number, number] | undefined, coord2: [number, number] | undefined): boolean {\n    if (!coord1 || !coord2) {\n      return false;\n    }\n\n    return coord1[0] === coord2[0] && coord1[1] === coord2[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from '../browser/renderer/BaseRenderLayer';\nimport { ITerminal } from '../Types';\nimport { ICellData } from 'common/Types';\nimport { CellData } from 'common/buffer/CellData';\nimport { IColorSet } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\ninterface ICursorState {\n  x: number;\n  y: number;\n  isFocused: boolean;\n  style: string;\n  width: number;\n}\n\n/**\n * The time between cursor blinks.\n */\nconst BLINK_INTERVAL = 600;\n\nexport class CursorRenderLayer extends BaseRenderLayer {\n  private _state: ICursorState;\n  private _cursorRenderers: {[key: string]: (x: number, y: number, cell: ICellData) => void};\n  private _cursorBlinkStateManager: CursorBlinkStateManager;\n  private _cell: ICellData = new CellData();\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    private _terminal: ITerminal,\n    rendererId: number,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'cursor', zIndex, true, colors, rendererId, bufferService, optionsService);\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n    this._cursorRenderers = {\n      'bar': this._renderBarCursor.bind(this),\n      'block': this._renderBlockCursor.bind(this),\n      'underline': this._renderUnderlineCursor.bind(this)\n    };\n    // TODO: Consider initial options? Maybe onOptionsChanged should be called at the end of open?\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = {\n      x: null,\n      y: null,\n      isFocused: null,\n      style: null,\n      width: null\n    };\n  }\n\n  public reset(): void {\n    this._clearCursor();\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.dispose();\n      this._cursorBlinkStateManager = null;\n      this.onOptionsChanged();\n    }\n  }\n\n  public onBlur(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.pause();\n    }\n    this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public onFocus(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.resume();\n    } else {\n      this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n    }\n  }\n\n  public onOptionsChanged(): void {\n    if (this._optionsService.options.cursorBlink) {\n      if (!this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager = new CursorBlinkStateManager(this._terminal.isFocused, () => {\n          this._render(true);\n        });\n      }\n    } else {\n      if (this._cursorBlinkStateManager) {\n        this._cursorBlinkStateManager.dispose();\n        this._cursorBlinkStateManager = null;\n      }\n    }\n    // Request a refresh from the terminal as management of rendering is being\n    // moved back to the terminal\n    this._terminal.refresh(this._bufferService.buffer.y, this._bufferService.buffer.y);\n  }\n\n  public onCursorMove(): void {\n    if (this._cursorBlinkStateManager) {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  public onGridChanged(startRow: number, endRow: number): void {\n    if (!this._cursorBlinkStateManager || this._cursorBlinkStateManager.isPaused) {\n      this._render(false);\n    } else {\n      this._cursorBlinkStateManager.restartBlinkAnimation();\n    }\n  }\n\n  private _render(triggeredByAnimationFrame: boolean): void {\n    // Don't draw the cursor if it's hidden\n    if (!this._terminal.cursorState || this._terminal.cursorHidden) {\n      this._clearCursor();\n      return;\n    }\n\n    const cursorY = this._bufferService.buffer.ybase + this._bufferService.buffer.y;\n    const viewportRelativeCursorY = cursorY - this._bufferService.buffer.ydisp;\n\n    // Don't draw the cursor if it's off-screen\n    if (viewportRelativeCursorY < 0 || viewportRelativeCursorY >= this._bufferService.rows) {\n      this._clearCursor();\n      return;\n    }\n\n    this._bufferService.buffer.lines.get(cursorY).loadCell(this._bufferService.buffer.x, this._cell);\n    if (this._cell.content === undefined) {\n      return;\n    }\n\n    if (!this._terminal.isFocused) {\n      this._clearCursor();\n      this._ctx.save();\n      this._ctx.fillStyle = this._colors.cursor.css;\n      const cursorStyle = this._optionsService.options.cursorStyle;\n      if (cursorStyle && cursorStyle !== 'block') {\n        this._cursorRenderers[cursorStyle](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      } else {\n        this._renderBlurCursor(this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n      }\n      this._ctx.restore();\n      this._state.x = this._bufferService.buffer.x;\n      this._state.y = viewportRelativeCursorY;\n      this._state.isFocused = false;\n      this._state.style = cursorStyle;\n      this._state.width = this._cell.getWidth();\n      return;\n    }\n\n    // Don't draw the cursor if it's blinking\n    if (this._cursorBlinkStateManager && !this._cursorBlinkStateManager.isCursorVisible) {\n      this._clearCursor();\n      return;\n    }\n\n    if (this._state) {\n      // The cursor is already in the correct spot, don't redraw\n      if (this._state.x === this._bufferService.buffer.x &&\n          this._state.y === viewportRelativeCursorY &&\n          this._state.isFocused === this._terminal.isFocused &&\n          this._state.style === this._optionsService.options.cursorStyle &&\n          this._state.width === this._cell.getWidth()) {\n        return;\n      }\n      this._clearCursor();\n    }\n\n    this._ctx.save();\n    this._cursorRenderers[this._optionsService.options.cursorStyle || 'block'](this._bufferService.buffer.x, viewportRelativeCursorY, this._cell);\n    this._ctx.restore();\n\n    this._state.x = this._bufferService.buffer.x;\n    this._state.y = viewportRelativeCursorY;\n    this._state.isFocused = false;\n    this._state.style = this._optionsService.options.cursorStyle;\n    this._state.width = this._cell.getWidth();\n  }\n\n  private _clearCursor(): void {\n    if (this._state) {\n      this._clearCells(this._state.x, this._state.y, this._state.width, 1);\n      this._state = {\n        x: null,\n        y: null,\n        isFocused: null,\n        style: null,\n        width: null\n      };\n    }\n  }\n\n  private _renderBarCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillLeftLineAtCell(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlockCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillCells(x, y, cell.getWidth(), 1);\n    this._ctx.fillStyle = this._colors.cursorAccent.css;\n    this._fillCharTrueColor(cell, x, y);\n    this._ctx.restore();\n  }\n\n  private _renderUnderlineCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.fillStyle = this._colors.cursor.css;\n    this._fillBottomLineAtCells(x, y);\n    this._ctx.restore();\n  }\n\n  private _renderBlurCursor(x: number, y: number, cell: ICellData): void {\n    this._ctx.save();\n    this._ctx.strokeStyle = this._colors.cursor.css;\n    this._strokeRectAtCell(x, y, cell.getWidth(), 1);\n    this._ctx.restore();\n  }\n}\n\nclass CursorBlinkStateManager {\n  public isCursorVisible: boolean;\n\n  private _animationFrame: number;\n  private _blinkStartTimeout: number;\n  private _blinkInterval: number;\n\n  /**\n   * The time at which the animation frame was restarted, this is used on the\n   * next render to restart the timers so they don't need to restart the timers\n   * multiple times over a short period.\n   */\n  private _animationTimeRestarted: number;\n\n  constructor(\n    isFocused: boolean,\n    private _renderCallback: () => void\n  ) {\n    this.isCursorVisible = true;\n    if (isFocused) {\n      this._restartInterval();\n    }\n  }\n\n  public get isPaused(): boolean { return !(this._blinkStartTimeout || this._blinkInterval); }\n\n  public dispose(): void {\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public restartBlinkAnimation(): void {\n    if (this.isPaused) {\n      return;\n    }\n    // Save a timestamp so that the restart can be done on the next interval\n    this._animationTimeRestarted = Date.now();\n    // Force a cursor render to ensure it's visible and in the correct position\n    this.isCursorVisible = true;\n    if (!this._animationFrame) {\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n    }\n  }\n\n  private _restartInterval(timeToStart: number = BLINK_INTERVAL): void {\n    // Clear any existing interval\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n    }\n\n    // Setup the initial timeout which will hide the cursor, this is done before\n    // the regular interval is setup in order to support restarting the blink\n    // animation in a lightweight way (without thrashing clearInterval and\n    // setInterval).\n    this._blinkStartTimeout = <number><any>setTimeout(() => {\n      // Check if another animation restart was requested while this was being\n      // started\n      if (this._animationTimeRestarted) {\n        const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n        this._animationTimeRestarted = null;\n        if (time > 0) {\n          this._restartInterval(time);\n          return;\n        }\n      }\n\n      // Hide the cursor\n      this.isCursorVisible = false;\n      this._animationFrame = window.requestAnimationFrame(() => {\n        this._renderCallback();\n        this._animationFrame = null;\n      });\n\n      // Setup the blink interval\n      this._blinkInterval = <number><any>setInterval(() => {\n        // Adjust the animation time if it was restarted\n        if (this._animationTimeRestarted) {\n          // calc time diff\n          // Make restart interval do a setTimeout initially?\n          const time = BLINK_INTERVAL - (Date.now() - this._animationTimeRestarted);\n          this._animationTimeRestarted = null;\n          this._restartInterval(time);\n          return;\n        }\n\n        // Invert visibility and render\n        this.isCursorVisible = !this.isCursorVisible;\n        this._animationFrame = window.requestAnimationFrame(() => {\n          this._renderCallback();\n          this._animationFrame = null;\n        });\n      }, BLINK_INTERVAL);\n    }, timeToStart);\n  }\n\n  public pause(): void {\n    this.isCursorVisible = true;\n    if (this._blinkInterval) {\n      window.clearInterval(this._blinkInterval);\n      this._blinkInterval = null;\n    }\n    if (this._blinkStartTimeout) {\n      window.clearTimeout(this._blinkStartTimeout);\n      this._blinkStartTimeout = null;\n    }\n    if (this._animationFrame) {\n      window.cancelAnimationFrame(this._animationFrame);\n      this._animationFrame = null;\n    }\n  }\n\n  public resume(): void {\n    this._animationTimeRestarted = null;\n    this._restartInterval();\n    this.restartBlinkAnimation();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderDimensions } from 'browser/renderer/Types';\nimport { BaseRenderLayer } from './BaseRenderLayer';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { is256Color } from 'browser/renderer/atlas/CharAtlasUtils';\nimport { IColorSet, ILinkifierEvent, ILinkifier } from 'browser/Types';\nimport { IBufferService, IOptionsService } from 'common/services/Services';\n\nexport class LinkRenderLayer extends BaseRenderLayer {\n  private _state: ILinkifierEvent | undefined;\n\n  constructor(\n    container: HTMLElement,\n    zIndex: number,\n    colors: IColorSet,\n    rendererId: number,\n    linkifier: ILinkifier,\n    readonly bufferService: IBufferService,\n    readonly optionsService: IOptionsService\n  ) {\n    super(container, 'link', zIndex, true, colors, rendererId, bufferService, optionsService);\n    linkifier.onLinkHover(e => this._onLinkHover(e));\n    linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public resize(dim: IRenderDimensions): void {\n    super.resize(dim);\n    // Resizing the canvas discards the contents of the canvas so clear state\n    this._state = undefined;\n  }\n\n  public reset(): void {\n    this._clearCurrentLink();\n  }\n\n  private _clearCurrentLink(): void {\n    if (this._state) {\n      this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);\n      const middleRowCount = this._state.y2 - this._state.y1 - 1;\n      if (middleRowCount > 0) {\n        this._clearCells(0, this._state.y1 + 1, this._state.cols, middleRowCount);\n      }\n      this._clearCells(0, this._state.y2, this._state.x2, 1);\n      this._state = undefined;\n    }\n  }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    if (e.fg === INVERTED_DEFAULT_COLOR) {\n      this._ctx.fillStyle = this._colors.background.css;\n    } else if (e.fg && is256Color(e.fg)) {\n      // 256 color support\n      this._ctx.fillStyle = this._colors.ansi[e.fg].css;\n    } else {\n      this._ctx.fillStyle = this._colors.foreground.css;\n    }\n\n    if (e.y1 === e.y2) {\n      // Single line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);\n    } else {\n      // Multi-line link\n      this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);\n      for (let y = e.y1 + 1; y < e.y2; y++) {\n        this._fillBottomLineAtCells(0, y, e.cols);\n      }\n      this._fillBottomLineAtCells(0, e.y2, e.x2);\n    }\n    this._state = e;\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._clearCurrentLink();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILinkifierEvent, ILinkMatcher, LinkMatcherHandler, ILinkMatcherOptions, ILinkifier, IMouseZoneManager, IMouseZone, IRegisteredLinkMatcher } from 'browser/Types';\nimport { IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { getStringCellWidth } from 'common/CharWidth';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ILogService, IBufferService } from 'common/services/Services';\n\n/**\n * Limit of the unwrapping line expansion (overscan) at the top and bottom\n * of the actual viewport in ASCII characters.\n * A limit of 2000 should match most sane urls.\n */\nconst OVERSCAN_CHAR_LIMIT = 2000;\n\n/**\n * The Linkifier applies links to rows shortly after they have been refreshed.\n */\nexport class Linkifier implements ILinkifier {\n  /**\n   * The time to wait after a row is changed before it is linkified. This prevents\n   * the costly operation of searching every row multiple times, potentially a\n   * huge amount of times.\n   */\n  protected static _timeBeforeLatency = 200;\n\n  protected _linkMatchers: IRegisteredLinkMatcher[] = [];\n\n  private _mouseZoneManager: IMouseZoneManager | undefined;\n  private _element: HTMLElement | undefined;\n\n  private _rowsTimeoutId: number | undefined;\n  private _nextLinkMatcherId = 0;\n  private _rowsToLinkify: { start: number | undefined, end: number | undefined };\n\n  private _onLinkHover = new EventEmitter<ILinkifierEvent>();\n  public get onLinkHover(): IEvent<ILinkifierEvent> { return this._onLinkHover.event; }\n  private _onLinkLeave = new EventEmitter<ILinkifierEvent>();\n  public get onLinkLeave(): IEvent<ILinkifierEvent> { return this._onLinkLeave.event; }\n  private _onLinkTooltip = new EventEmitter<ILinkifierEvent>();\n  public get onLinkTooltip(): IEvent<ILinkifierEvent> { return this._onLinkTooltip.event; }\n\n  constructor(\n    protected readonly _bufferService: IBufferService,\n    private readonly _logService: ILogService\n  ) {\n    this._rowsToLinkify = {\n      start: undefined,\n      end: undefined\n    };\n  }\n\n  /**\n   * Attaches the linkifier to the DOM, enabling linkification.\n   * @param mouseZoneManager The mouse zone manager to register link zones with.\n   */\n  public attachToDom(element: HTMLElement, mouseZoneManager: IMouseZoneManager): void {\n    this._element = element;\n    this._mouseZoneManager = mouseZoneManager;\n  }\n\n  /**\n   * Queue linkification on a set of rows.\n   * @param start The row to linkify from (inclusive).\n   * @param end The row to linkify to (inclusive).\n   */\n  public linkifyRows(start: number, end: number): void {\n    // Don't attempt linkify if not yet attached to DOM\n    if (!this._mouseZoneManager) {\n      return;\n    }\n\n    // Increase range to linkify\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._rowsToLinkify.start = start;\n      this._rowsToLinkify.end = end;\n    } else {\n      this._rowsToLinkify.start = Math.min(this._rowsToLinkify.start, start);\n      this._rowsToLinkify.end = Math.max(this._rowsToLinkify.end, end);\n    }\n\n    // Clear out any existing links on this row range\n    this._mouseZoneManager.clearAll(start, end);\n\n    // Restart timer\n    if (this._rowsTimeoutId) {\n      clearTimeout(this._rowsTimeoutId);\n    }\n    this._rowsTimeoutId = <number><any>setTimeout(() => this._linkifyRows(), Linkifier._timeBeforeLatency);\n  }\n\n  /**\n   * Linkifies the rows requested.\n   */\n  private _linkifyRows(): void {\n    this._rowsTimeoutId = undefined;\n    const buffer = this._bufferService.buffer;\n\n    if (this._rowsToLinkify.start === undefined || this._rowsToLinkify.end === undefined) {\n      this._logService.debug('_rowToLinkify was unset before _linkifyRows was called');\n      return;\n    }\n\n    // Ensure the start row exists\n    const absoluteRowIndexStart = buffer.ydisp + this._rowsToLinkify.start;\n    if (absoluteRowIndexStart >= buffer.lines.length) {\n      return;\n    }\n\n    // Invalidate bad end row values (if a resize happened)\n    const absoluteRowIndexEnd = buffer.ydisp + Math.min(this._rowsToLinkify.end, this._bufferService.rows) + 1;\n\n    // Iterate over the range of unwrapped content strings within start..end\n    // (excluding).\n    // _doLinkifyRow gets full unwrapped lines with the start row as buffer offset\n    // for every matcher.\n    // The unwrapping is needed to also match content that got wrapped across\n    // several buffer lines. To avoid a worst case scenario where the whole buffer\n    // contains just a single unwrapped string we limit this line expansion beyond\n    // the viewport to +OVERSCAN_CHAR_LIMIT chars (overscan) at top and bottom.\n    // This comes with the tradeoff that matches longer than OVERSCAN_CHAR_LIMIT\n    // chars will not match anymore at the viewport borders.\n    const overscanLineLimit = Math.ceil(OVERSCAN_CHAR_LIMIT / this._bufferService.cols);\n    const iterator = this._bufferService.buffer.iterator(\n      false, absoluteRowIndexStart, absoluteRowIndexEnd, overscanLineLimit, overscanLineLimit);\n    while (iterator.hasNext()) {\n      const lineData: IBufferStringIteratorResult = iterator.next();\n      for (let i = 0; i < this._linkMatchers.length; i++) {\n        this._doLinkifyRow(lineData.range.first, lineData.content, this._linkMatchers[i]);\n      }\n    }\n\n    this._rowsToLinkify.start = undefined;\n    this._rowsToLinkify.end = undefined;\n  }\n\n  /**\n   * Registers a link matcher, allowing custom link patterns to be matched and\n   * handled.\n   * @param regex The regular expression to search for. Specifically, this\n   * searches the textContent of the rows. You will want to use \\s to match a\n   * space ' ' character for example.\n   * @param handler The callback when the link is called.\n   * @param options Options for the link matcher.\n   * @return The ID of the new matcher, this can be used to deregister.\n   */\n  public registerLinkMatcher(regex: RegExp, handler: LinkMatcherHandler, options: ILinkMatcherOptions = {}): number {\n    if (!handler) {\n      throw new Error('handler must be defined');\n    }\n    const matcher: IRegisteredLinkMatcher = {\n      id: this._nextLinkMatcherId++,\n      regex,\n      handler,\n      matchIndex: options.matchIndex,\n      validationCallback: options.validationCallback,\n      hoverTooltipCallback: options.tooltipCallback,\n      hoverLeaveCallback: options.leaveCallback,\n      willLinkActivate: options.willLinkActivate,\n      priority: options.priority || 0\n    };\n    this._addLinkMatcherToList(matcher);\n    return matcher.id;\n  }\n\n  /**\n   * Inserts a link matcher to the list in the correct position based on the\n   * priority of each link matcher. New link matchers of equal priority are\n   * considered after older link matchers.\n   * @param matcher The link matcher to be added.\n   */\n  private _addLinkMatcherToList(matcher: IRegisteredLinkMatcher): void {\n    if (this._linkMatchers.length === 0) {\n      this._linkMatchers.push(matcher);\n      return;\n    }\n\n    for (let i = this._linkMatchers.length - 1; i >= 0; i--) {\n      if (matcher.priority <= this._linkMatchers[i].priority) {\n        this._linkMatchers.splice(i + 1, 0, matcher);\n        return;\n      }\n    }\n\n    this._linkMatchers.splice(0, 0, matcher);\n  }\n\n  /**\n   * Deregisters a link matcher if it has been registered.\n   * @param matcherId The link matcher's ID (returned after register)\n   * @return Whether a link matcher was found and deregistered.\n   */\n  public deregisterLinkMatcher(matcherId: number): boolean {\n    for (let i = 0; i < this._linkMatchers.length; i++) {\n      if (this._linkMatchers[i].id === matcherId) {\n        this._linkMatchers.splice(i, 1);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Linkifies a row given a specific handler.\n   * @param rowIndex The row index to linkify (absolute index).\n   * @param text string content of the unwrapped row.\n   * @param matcher The link matcher for this line.\n   */\n  private _doLinkifyRow(rowIndex: number, text: string, matcher: ILinkMatcher): void {\n    // clone regex to do a global search on text\n    const rex = new RegExp(matcher.regex.source, (matcher.regex.flags || '') + 'g');\n    let match;\n    let stringIndex = -1;\n    while ((match = rex.exec(text)) !== null) {\n      const uri = match[typeof matcher.matchIndex !== 'number' ? 0 : matcher.matchIndex];\n      if (!uri) {\n        // something matched but does not comply with the given matchIndex\n        // since this is most likely a bug the regex itself we simply do nothing here\n        this._logService.debug('match found without corresponding matchIndex', match, matcher);\n        break;\n      }\n\n      // Get index, match.index is for the outer match which includes negated chars\n      // therefore we cannot use match.index directly, instead we search the position\n      // of the match group in text again\n      // also correct regex and string search offsets for the next loop run\n      stringIndex = text.indexOf(uri, stringIndex + 1);\n      rex.lastIndex = stringIndex + uri.length;\n      if (stringIndex < 0) {\n        // invalid stringIndex (should not have happened)\n        break;\n      }\n\n      // get the buffer index as [absolute row, col] for the match\n      const bufferIndex = this._bufferService.buffer.stringIndexToBufferIndex(rowIndex, stringIndex);\n      if (bufferIndex[0] < 0) {\n        // invalid bufferIndex (should not have happened)\n        break;\n      }\n\n      const line = this._bufferService.buffer.lines.get(bufferIndex[0]);\n      if (!line) {\n        break;\n      }\n\n      const attr = line.getFg(bufferIndex[1]);\n      const fg = attr ? (attr >> 9) & 0x1ff : undefined;\n\n      if (matcher.validationCallback) {\n        matcher.validationCallback(uri, isValid => {\n          // Discard link if the line has already changed\n          if (this._rowsTimeoutId) {\n            return;\n          }\n          if (isValid) {\n            this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n          }\n        });\n      } else {\n        this._addLink(bufferIndex[1], bufferIndex[0] - this._bufferService.buffer.ydisp, uri, matcher, fg);\n      }\n    }\n  }\n\n  /**\n   * Registers a link to the mouse zone manager.\n   * @param x The column the link starts.\n   * @param y The row the link is on.\n   * @param uri The URI of the link.\n   * @param matcher The link matcher for the link.\n   * @param fg The link color for hover event.\n   */\n  private _addLink(x: number, y: number, uri: string, matcher: ILinkMatcher, fg: number | undefined): void {\n    if (!this._mouseZoneManager || !this._element) {\n      return;\n    }\n\n    const width = getStringCellWidth(uri);\n    const x1 = x % this._bufferService.cols;\n    const y1 = y + Math.floor(x / this._bufferService.cols);\n    let x2 = (x1 + width) % this._bufferService.cols;\n    let y2 = y1 + Math.floor((x1 + width) / this._bufferService.cols);\n    if (x2 === 0) {\n      x2 = this._bufferService.cols;\n      y2--;\n    }\n\n    this._mouseZoneManager.add(new MouseZone(\n      x1 + 1,\n      y1 + 1,\n      x2 + 1,\n      y2 + 1,\n      e => {\n        if (matcher.handler) {\n          return matcher.handler(e, uri);\n        }\n        window.open(uri, '_blank');\n      },\n      () => {\n        this._onLinkHover.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.add('xterm-cursor-pointer');\n      },\n      e => {\n        this._onLinkTooltip.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        if (matcher.hoverTooltipCallback) {\n          // Note that IViewportRange use 1-based coordinates to align with escape sequences such\n          // as CUP which use 1,1 as the default for row/col\n          matcher.hoverTooltipCallback(e, uri, { start: { x: x1, y: y1 }, end: { x: x2, y: y2 } });\n        }\n      },\n      () => {\n        this._onLinkLeave.fire(this._createLinkHoverEvent(x1, y1, x2, y2, fg));\n        this._element!.classList.remove('xterm-cursor-pointer');\n        if (matcher.hoverLeaveCallback) {\n          matcher.hoverLeaveCallback();\n        }\n      },\n      e => {\n        if (matcher.willLinkActivate) {\n          return matcher.willLinkActivate(e, uri);\n        }\n        return true;\n      }\n    ));\n  }\n\n  private _createLinkHoverEvent(x1: number, y1: number, x2: number, y2: number, fg: number | undefined): ILinkifierEvent {\n    return { x1, y1, x2, y2, cols: this._bufferService.cols, fg };\n  }\n}\n\nexport class MouseZone implements IMouseZone {\n  constructor(\n    public x1: number,\n    public y1: number,\n    public x2: number,\n    public y2: number,\n    public clickCallback: (e: MouseEvent) => any,\n    public hoverCallback: (e: MouseEvent) => any,\n    public tooltipCallback: (e: MouseEvent) => any,\n    public leaveCallback: () => void,\n    public willLinkActivate: (e: MouseEvent) => boolean\n  ) {\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ISelectionRedrawRequestEvent } from 'browser/selection/Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { IBufferLine, IDisposable } from 'common/Types';\nimport * as Browser from 'common/Platform';\nimport { SelectionModel } from 'browser/selection/SelectionModel';\nimport { CellData } from 'common/buffer/CellData';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICharSizeService, IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IBufferService, IOptionsService, ICoreService } from 'common/services/Services';\nimport { getCoordsRelativeToElement } from 'browser/input/Mouse';\nimport { moveToCellSequence } from 'browser/input/MoveToCell';\n\n/**\n * The number of pixels the mouse needs to be above or below the viewport in\n * order to scroll at the maximum speed.\n */\nconst DRAG_SCROLL_MAX_THRESHOLD = 50;\n\n/**\n * The maximum scrolling speed\n */\nconst DRAG_SCROLL_MAX_SPEED = 15;\n\n/**\n * The number of milliseconds between drag scroll updates.\n */\nconst DRAG_SCROLL_INTERVAL = 50;\n\n/**\n * The maximum amount of time that can have elapsed for an alt click to move the\n * cursor.\n */\nconst ALT_CLICK_MOVE_CURSOR_TIME = 500;\n\nconst NON_BREAKING_SPACE_CHAR = String.fromCharCode(160);\nconst ALL_NON_BREAKING_SPACE_REGEX = new RegExp(NON_BREAKING_SPACE_CHAR, 'g');\n\n/**\n * Represents a position of a word on a line.\n */\ninterface IWordPosition {\n  start: number;\n  length: number;\n}\n\n/**\n * A selection mode, this drives how the selection behaves on mouse move.\n */\nexport const enum SelectionMode {\n  NORMAL,\n  WORD,\n  LINE,\n  COLUMN\n}\n\n/**\n * A class that manages the selection of the terminal. With help from\n * SelectionModel, SelectionService handles with all logic associated with\n * dealing with the selection, including handling mouse interaction, wide\n * characters and fetching the actual text within the selection. Rendering is\n * not handled by the SelectionService but the onRedrawRequest event is fired\n * when the selection is ready to be redrawn (on an animation frame).\n */\nexport class SelectionService implements ISelectionService {\n  serviceBrand: any;\n\n  protected _model: SelectionModel;\n\n  /**\n   * The amount to scroll every drag scroll update (depends on how far the mouse\n   * drag is above or below the terminal).\n   */\n  private _dragScrollAmount: number = 0;\n\n  /**\n   * The current selection mode.\n   */\n  protected _activeSelectionMode: SelectionMode;\n\n  /**\n   * A setInterval timer that is active while the mouse is down whose callback\n   * scrolls the viewport when necessary.\n   */\n  private _dragScrollIntervalTimer: number | undefined;\n\n  /**\n   * The animation frame ID used for refreshing the selection.\n   */\n  private _refreshAnimationFrame: number | undefined;\n\n  /**\n   * Whether selection is enabled.\n   */\n  private _enabled = true;\n\n  private _mouseMoveListener: EventListener;\n  private _mouseUpListener: EventListener;\n  private _trimListener: IDisposable;\n  private _workCell: CellData = new CellData();\n\n  private _mouseDownTimeStamp: number = 0;\n\n  private _onLinuxMouseSelection = new EventEmitter<string>();\n  public get onLinuxMouseSelection(): IEvent<string> { return this._onLinuxMouseSelection.event; }\n  private _onRedrawRequest = new EventEmitter<ISelectionRedrawRequestEvent>();\n  public get onRedrawRequest(): IEvent<ISelectionRedrawRequestEvent> { return this._onRedrawRequest.event; }\n  private _onSelectionChange = new EventEmitter<void>();\n  public get onSelectionChange(): IEvent<void> { return this._onSelectionChange.event; }\n\n  constructor(\n    private readonly _scrollLines: (amount: number, suppressEvent: boolean) => void,\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    // Init listeners\n    this._mouseMoveListener = event => this._onMouseMove(<MouseEvent>event);\n    this._mouseUpListener = event => this._onMouseUp(<MouseEvent>event);\n    this._coreService.onUserInput(() => {\n      if (this.hasSelection) {\n        this.clearSelection();\n      }\n    });\n    this._trimListener = this._bufferService.buffer.lines.onTrim(amount => this._onTrim(amount));\n    this._bufferService.buffers.onBufferActivate(e => this._onBufferActivate(e));\n\n    this.enable();\n\n    this._model = new SelectionModel(this._bufferService);\n    this._activeSelectionMode = SelectionMode.NORMAL;\n  }\n\n  public dispose(): void {\n    this._removeMouseDownListeners();\n  }\n\n  public reset(): void {\n    this.clearSelection();\n  }\n\n  /**\n   * Disables the selection manager. This is useful for when terminal mouse\n   * are enabled.\n   */\n  public disable(): void {\n    this.clearSelection();\n    this._enabled = false;\n  }\n\n  /**\n   * Enable the selection manager.\n   */\n  public enable(): void {\n    this._enabled = true;\n  }\n\n  public get selectionStart(): [number, number] | undefined { return this._model.finalSelectionStart; }\n  public get selectionEnd(): [number, number] | undefined { return this._model.finalSelectionEnd; }\n\n  /**\n   * Gets whether there is an active text selection.\n   */\n  public get hasSelection(): boolean {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[0] !== end[0] || start[1] !== end[1];\n  }\n\n  /**\n   * Gets the text currently selected.\n   */\n  public get selectionText(): string {\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n    if (!start || !end) {\n      return '';\n    }\n\n    const buffer = this._bufferService.buffer;\n    const result: string[] = [];\n\n    if (this._activeSelectionMode === SelectionMode.COLUMN) {\n      // Ignore zero width selections\n      if (start[0] === end[0]) {\n        return '';\n      }\n\n      for (let i = start[1]; i <= end[1]; i++) {\n        const lineText = buffer.translateBufferLineToString(i, true, start[0], end[0]);\n        result.push(lineText);\n      }\n    } else {\n      // Get first row\n      const startRowEndCol = start[1] === end[1] ? end[0] : undefined;\n      result.push(buffer.translateBufferLineToString(start[1], true, start[0], startRowEndCol));\n\n      // Get middle rows\n      for (let i = start[1] + 1; i <= end[1] - 1; i++) {\n        const bufferLine = buffer.lines.get(i);\n        const lineText = buffer.translateBufferLineToString(i, true);\n        if (bufferLine && bufferLine.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n\n      // Get final row\n      if (start[1] !== end[1]) {\n        const bufferLine = buffer.lines.get(end[1]);\n        const lineText = buffer.translateBufferLineToString(end[1], true, 0, end[0]);\n        if (bufferLine && bufferLine!.isWrapped) {\n          result[result.length - 1] += lineText;\n        } else {\n          result.push(lineText);\n        }\n      }\n    }\n\n    // Format string by replacing non-breaking space chars with regular spaces\n    // and joining the array into a multi-line string.\n    const formattedResult = result.map(line => {\n      return line.replace(ALL_NON_BREAKING_SPACE_REGEX, ' ');\n    }).join(Browser.isWindows ? '\\r\\n' : '\\n');\n\n    return formattedResult;\n  }\n\n  /**\n   * Clears the current terminal selection.\n   */\n  public clearSelection(): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Queues a refresh, redrawing the selection on the next opportunity.\n   * @param isLinuxMouseSelection Whether the selection should be registered as a new\n   * selection on Linux.\n   */\n  public refresh(isLinuxMouseSelection?: boolean): void {\n    // Queue the refresh for the renderer\n    if (!this._refreshAnimationFrame) {\n      this._refreshAnimationFrame = window.requestAnimationFrame(() => this._refresh());\n    }\n\n    // If the platform is Linux and the refresh call comes from a mouse event,\n    // we need to update the selection for middle click to paste selection.\n    if (Browser.isLinux && isLinuxMouseSelection) {\n      const selectionText = this.selectionText;\n      if (selectionText.length) {\n        this._onLinuxMouseSelection.fire(this.selectionText);\n      }\n    }\n  }\n\n  /**\n   * Fires the refresh event, causing consumers to pick it up and redraw the\n   * selection state.\n   */\n  private _refresh(): void {\n    this._refreshAnimationFrame = undefined;\n    this._onRedrawRequest.fire({\n      start: this._model.finalSelectionStart,\n      end: this._model.finalSelectionEnd,\n      columnSelectMode: this._activeSelectionMode === SelectionMode.COLUMN\n    });\n  }\n\n  /**\n   * Checks if the current click was inside the current selection\n   * @param event The mouse event\n   */\n  public isClickInSelection(event: MouseEvent): boolean {\n    const coords = this._getMouseBufferCoords(event);\n    const start = this._model.finalSelectionStart;\n    const end = this._model.finalSelectionEnd;\n\n    if (!start || !end || !coords) {\n      return false;\n    }\n\n    return this._areCoordsInSelection(coords, start, end);\n  }\n\n  protected _areCoordsInSelection(coords: [number, number], start: [number, number], end: [number, number]): boolean {\n    return (coords[1] > start[1] && coords[1] < end[1]) ||\n        (start[1] === end[1] && coords[1] === start[1] && coords[0] >= start[0] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === end[1] && coords[0] < end[0]) ||\n        (start[1] < end[1] && coords[1] === start[1] && coords[0] >= start[0]);\n  }\n\n  /**\n   * Selects word at the current mouse event coordinates.\n   * @param event The mouse event.\n   */\n  public selectWordAtCursor(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._selectWordAt(coords, false);\n      this._model.selectionEnd = undefined;\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * Selects all text within the terminal.\n   */\n  public selectAll(): void {\n    this._model.isSelectAllActive = true;\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  public selectLines(start: number, end: number): void {\n    this._model.clearSelection();\n    start = Math.max(start, 0);\n    end = Math.min(end, this._bufferService.buffer.lines.length - 1);\n    this._model.selectionStart = [0, start];\n    this._model.selectionEnd = [this._bufferService.cols, end];\n    this.refresh();\n    this._onSelectionChange.fire();\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   */\n  private _onTrim(amount: number): void {\n    const needsRefresh = this._model.onTrim(amount);\n    if (needsRefresh) {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Gets the 0-based [x, y] buffer coordinates of the current mouse event.\n   * @param event The mouse event.\n   */\n  private _getMouseBufferCoords(event: MouseEvent): [number, number] | undefined {\n    const coords = this._mouseService.getCoords(event, this._screenElement, this._bufferService.cols, this._bufferService.rows, true);\n    if (!coords) {\n      return undefined;\n    }\n\n    // Convert to 0-based\n    coords[0]--;\n    coords[1]--;\n\n    // Convert viewport coords to buffer coords\n    coords[1] += this._bufferService.buffer.ydisp;\n    return coords;\n  }\n\n  /**\n   * Gets the amount the viewport should be scrolled based on how far out of the\n   * terminal the mouse is.\n   * @param event The mouse event.\n   */\n  private _getMouseEventScrollAmount(event: MouseEvent): number {\n    let offset = getCoordsRelativeToElement(event, this._screenElement)[1];\n    const terminalHeight = this._bufferService.rows * Math.ceil(this._charSizeService.height * this._optionsService.options.lineHeight);\n    if (offset >= 0 && offset <= terminalHeight) {\n      return 0;\n    }\n    if (offset > terminalHeight) {\n      offset -= terminalHeight;\n    }\n\n    offset = Math.min(Math.max(offset, -DRAG_SCROLL_MAX_THRESHOLD), DRAG_SCROLL_MAX_THRESHOLD);\n    offset /= DRAG_SCROLL_MAX_THRESHOLD;\n    return (offset / Math.abs(offset)) + Math.round(offset * (DRAG_SCROLL_MAX_SPEED - 1));\n  }\n\n  /**\n   * Returns whether the selection manager should force selection, regardless of\n   * whether the terminal is in mouse events mode.\n   * @param event The mouse event.\n   */\n  public shouldForceSelection(event: MouseEvent): boolean {\n    if (Browser.isMac) {\n      return event.altKey && this._optionsService.options.macOptionClickForcesSelection;\n    }\n\n    return event.shiftKey;\n  }\n\n  /**\n   * Handles te mousedown event, setting up for a new selection.\n   * @param event The mousedown event.\n   */\n  public onMouseDown(event: MouseEvent): void {\n    this._mouseDownTimeStamp = event.timeStamp;\n    // If we have selection, we want the context menu on right click even if the\n    // terminal is in mouse mode.\n    if (event.button === 2 && this.hasSelection) {\n      return;\n    }\n\n    // Only action the primary button\n    if (event.button !== 0) {\n      return;\n    }\n\n    // Allow selection when using a specific modifier key, even when disabled\n    if (!this._enabled) {\n      if (!this.shouldForceSelection(event)) {\n        return;\n      }\n\n      // Don't send the mouse down event to the current process, we want to select\n      event.stopPropagation();\n    }\n\n    // Tell the browser not to start a regular selection\n    event.preventDefault();\n\n    // Reset drag scroll state\n    this._dragScrollAmount = 0;\n\n    if (this._enabled && event.shiftKey) {\n      this._onIncrementalClick(event);\n    } else {\n      if (event.detail === 1) {\n        this._onSingleClick(event);\n      } else if (event.detail === 2) {\n        this._onDoubleClick(event);\n      } else if (event.detail === 3) {\n        this._onTripleClick(event);\n      }\n    }\n\n    this._addMouseDownListeners();\n    this.refresh(true);\n  }\n\n  /**\n   * Adds listeners when mousedown is triggered.\n   */\n  private _addMouseDownListeners(): void {\n    // Listen on the document so that dragging outside of viewport works\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.addEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.addEventListener('mouseup', this._mouseUpListener);\n    }\n    this._dragScrollIntervalTimer = window.setInterval(() => this._dragScroll(), DRAG_SCROLL_INTERVAL);\n  }\n\n  /**\n   * Removes the listeners that are registered when mousedown is triggered.\n   */\n  private _removeMouseDownListeners(): void {\n    if (this._screenElement.ownerDocument) {\n      this._screenElement.ownerDocument.removeEventListener('mousemove', this._mouseMoveListener);\n      this._screenElement.ownerDocument.removeEventListener('mouseup', this._mouseUpListener);\n    }\n    clearInterval(this._dragScrollIntervalTimer);\n    this._dragScrollIntervalTimer = undefined;\n  }\n\n  /**\n   * Performs an incremental click, setting the selection end position to the mouse\n   * position.\n   * @param event The mouse event.\n   */\n  private _onIncrementalClick(event: MouseEvent): void {\n    if (this._model.selectionStart) {\n      this._model.selectionEnd = this._getMouseBufferCoords(event);\n    }\n  }\n\n  /**\n   * Performs a single click, resetting relevant state and setting the selection\n   * start position.\n   * @param event The mouse event.\n   */\n  private _onSingleClick(event: MouseEvent): void {\n    this._model.selectionStartLength = 0;\n    this._model.isSelectAllActive = false;\n    this._activeSelectionMode = this.shouldColumnSelect(event) ? SelectionMode.COLUMN : SelectionMode.NORMAL;\n\n    // Initialize the new selection\n    this._model.selectionStart = this._getMouseBufferCoords(event);\n    if (!this._model.selectionStart) {\n      return;\n    }\n    this._model.selectionEnd = undefined;\n\n    // Ensure the line exists\n    const line = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);\n    if (!line) {\n      return;\n    }\n\n    // Return early if the click event is not in the buffer (eg. in scroll bar)\n    if (line.length === this._model.selectionStart[0]) {\n      return;\n    }\n\n    // If the mouse is over the second half of a wide character, adjust the\n    // selection to cover the whole character\n    if (line.hasWidth(this._model.selectionStart[0]) === 0) {\n      this._model.selectionStart[0]++;\n    }\n  }\n\n  /**\n   * Performs a double click, selecting the current work.\n   * @param event The mouse event.\n   */\n  private _onDoubleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.WORD;\n      this._selectWordAt(coords, true);\n    }\n  }\n\n  /**\n   * Performs a triple click, selecting the current line and activating line\n   * select mode.\n   * @param event The mouse event.\n   */\n  private _onTripleClick(event: MouseEvent): void {\n    const coords = this._getMouseBufferCoords(event);\n    if (coords) {\n      this._activeSelectionMode = SelectionMode.LINE;\n      this._selectLineAt(coords[1]);\n    }\n  }\n\n  /**\n   * Returns whether the selection manager should operate in column select mode\n   * @param event the mouse or keyboard event\n   */\n  public shouldColumnSelect(event: KeyboardEvent | MouseEvent): boolean {\n    return event.altKey && !(Browser.isMac && this._optionsService.options.macOptionClickForcesSelection);\n  }\n\n  /**\n   * Handles the mousemove event when the mouse button is down, recording the\n   * end of the selection and refreshing the selection.\n   * @param event The mousemove event.\n   */\n  private _onMouseMove(event: MouseEvent): void {\n    // If the mousemove listener is active it means that a selection is\n    // currently being made, we should stop propagation to prevent mouse events\n    // to be sent to the pty.\n    event.stopImmediatePropagation();\n\n    // Do nothing if there is no selection start, this can happen if the first\n    // click in the terminal is an incremental click\n    if (!this._model.selectionStart) {\n      return;\n    }\n\n    // Record the previous position so we know whether to redraw the selection\n    // at the end.\n    const previousSelectionEnd = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;\n\n    // Set the initial selection end based on the mouse coordinates\n    this._model.selectionEnd = this._getMouseBufferCoords(event);\n    if (!this._model.selectionEnd) {\n      this.refresh(true);\n      return;\n    }\n\n    // Select the entire line if line select mode is active.\n    if (this._activeSelectionMode === SelectionMode.LINE) {\n      if (this._model.selectionEnd[1] < this._model.selectionStart[1]) {\n        this._model.selectionEnd[0] = 0;\n      } else {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      }\n    } else if (this._activeSelectionMode === SelectionMode.WORD) {\n      this._selectToWordAt(this._model.selectionEnd);\n    }\n\n    // Determine the amount of scrolling that will happen.\n    this._dragScrollAmount = this._getMouseEventScrollAmount(event);\n\n    // If the cursor was above or below the viewport, make sure it's at the\n    // start or end of the viewport respectively. This should only happen when\n    // NOT in column select mode.\n    if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n      if (this._dragScrollAmount > 0) {\n        this._model.selectionEnd[0] = this._bufferService.cols;\n      } else if (this._dragScrollAmount < 0) {\n        this._model.selectionEnd[0] = 0;\n      }\n    }\n\n    // If the character is a wide character include the cell to the right in the\n    // selection. Note that selections at the very end of the line will never\n    // have a character.\n    const buffer = this._bufferService.buffer;\n    if (this._model.selectionEnd[1] < buffer.lines.length) {\n      const line = buffer.lines.get(this._model.selectionEnd[1]);\n      if (line && line.hasWidth(this._model.selectionEnd[0]) === 0) {\n        this._model.selectionEnd[0]++;\n      }\n    }\n\n    // Only draw here if the selection changes.\n    if (!previousSelectionEnd ||\n      previousSelectionEnd[0] !== this._model.selectionEnd[0] ||\n      previousSelectionEnd[1] !== this._model.selectionEnd[1]) {\n      this.refresh(true);\n    }\n  }\n\n  /**\n   * The callback that occurs every DRAG_SCROLL_INTERVAL ms that does the\n   * scrolling of the viewport.\n   */\n  private _dragScroll(): void {\n    if (!this._model.selectionEnd || !this._model.selectionStart) {\n      return;\n    }\n    if (this._dragScrollAmount) {\n      this._scrollLines(this._dragScrollAmount, false);\n      // Re-evaluate selection\n      // If the cursor was above or below the viewport, make sure it's at the\n      // start or end of the viewport respectively. This should only happen when\n      // NOT in column select mode.\n      const buffer = this._bufferService.buffer;\n      if (this._dragScrollAmount > 0) {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = this._bufferService.cols;\n        }\n        this._model.selectionEnd[1] = Math.min(buffer.ydisp + this._bufferService.rows, buffer.lines.length - 1);\n      } else {\n        if (this._activeSelectionMode !== SelectionMode.COLUMN) {\n          this._model.selectionEnd[0] = 0;\n        }\n        this._model.selectionEnd[1] = buffer.ydisp;\n      }\n      this.refresh();\n    }\n  }\n\n  /**\n   * Handles the mouseup event, removing the mousedown listeners.\n   * @param event The mouseup event.\n   */\n  private _onMouseUp(event: MouseEvent): void {\n    const timeElapsed = event.timeStamp - this._mouseDownTimeStamp;\n\n    this._removeMouseDownListeners();\n\n    if (this.selectionText.length <= 1 && timeElapsed < ALT_CLICK_MOVE_CURSOR_TIME) {\n      if (event.altKey && this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {\n        const coordinates = this._mouseService.getCoords(\n          event,\n          this._element,\n          this._bufferService.cols,\n          this._bufferService.rows,\n          false\n        );\n        if (coordinates && coordinates[0] !== undefined && coordinates[1] !== undefined) {\n          const sequence = moveToCellSequence(coordinates[0] - 1, coordinates[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);\n          this._coreService.triggerDataEvent(sequence, true);\n        }\n      }\n    } else if (this.hasSelection) {\n      this._onSelectionChange.fire();\n    }\n  }\n\n  private _onBufferActivate(e: {activeBuffer: IBuffer, inactiveBuffer: IBuffer}): void {\n    this.clearSelection();\n    // Only adjust the selection on trim, shiftElements is rarely used (only in\n    // reverseIndex) and delete in a splice is only ever used when the same\n    // number of elements was just added. Given this is could actually be\n    // beneficial to leave the selection as is for these cases.\n    if (this._trimListener) {\n      this._trimListener.dispose();\n    }\n    this._trimListener = e.activeBuffer.lines.onTrim(amount => this._onTrim(amount));\n  }\n\n  /**\n   * Converts a viewport column to the character index on the buffer line, the\n   * latter takes into account wide characters.\n   * @param coords The coordinates to find the 2 index for.\n   */\n  private _convertViewportColToCharacterIndex(bufferLine: IBufferLine, coords: [number, number]): number {\n    let charIndex = coords[0];\n    for (let i = 0; coords[0] >= i; i++) {\n      const length = bufferLine.loadCell(i, this._workCell).getChars().length;\n      if (this._workCell.getWidth() === 0) {\n        // Wide characters aren't included in the line string so decrement the\n        // index so the index is back on the wide character.\n        charIndex--;\n      } else if (length > 1 && coords[0] !== i) {\n        // Emojis take up multiple characters, so adjust accordingly. For these\n        // we don't want ot include the character at the column as we're\n        // returning the start index in the string, not the end index.\n        charIndex += length - 1;\n      }\n    }\n    return charIndex;\n  }\n\n  public setSelection(col: number, row: number, length: number): void {\n    this._model.clearSelection();\n    this._removeMouseDownListeners();\n    this._model.selectionStart = [col, row];\n    this._model.selectionStartLength = length;\n    this.refresh();\n  }\n\n  /**\n   * Gets positional information for the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _getWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean, followWrappedLinesAbove: boolean = true, followWrappedLinesBelow: boolean = true): IWordPosition | undefined {\n    // Ensure coords are within viewport (eg. not within scroll bar)\n    if (coords[0] >= this._bufferService.cols) {\n      return undefined;\n    }\n\n    const buffer = this._bufferService.buffer;\n    const bufferLine = buffer.lines.get(coords[1]);\n    if (!bufferLine) {\n      return undefined;\n    }\n\n    const line = buffer.translateBufferLineToString(coords[1], false);\n\n    // Get actual index, taking into consideration wide characters\n    let startIndex = this._convertViewportColToCharacterIndex(bufferLine, coords);\n    let endIndex = startIndex;\n\n    // Record offset to be used later\n    const charOffset = coords[0] - startIndex;\n    let leftWideCharCount = 0;\n    let rightWideCharCount = 0;\n    let leftLongCharOffset = 0;\n    let rightLongCharOffset = 0;\n\n    if (line.charAt(startIndex) === ' ') {\n      // Expand until non-whitespace is hit\n      while (startIndex > 0 && line.charAt(startIndex - 1) === ' ') {\n        startIndex--;\n      }\n      while (endIndex < line.length && line.charAt(endIndex + 1) === ' ') {\n        endIndex++;\n      }\n    } else {\n      // Expand until whitespace is hit. This algorithm works by scanning left\n      // and right from the starting position, keeping both the index format\n      // (line) and the column format (bufferLine) in sync. When a wide\n      // character is hit, it is recorded and the column index is adjusted.\n      let startCol = coords[0];\n      let endCol = coords[0];\n\n      // Consider the initial position, skip it and increment the wide char\n      // variable\n      if (bufferLine.getWidth(startCol) === 0) {\n        leftWideCharCount++;\n        startCol--;\n      }\n      if (bufferLine.getWidth(endCol) === 2) {\n        rightWideCharCount++;\n        endCol++;\n      }\n\n      // Adjust the end index for characters whose length are > 1 (emojis)\n      const length = bufferLine.getString(endCol).length;\n      if (length > 1) {\n        rightLongCharOffset += length - 1;\n        endIndex += length - 1;\n      }\n\n      // Expand the string in both directions until a space is hit\n      while (startCol > 0 && startIndex > 0 && !this._isCharWordSeparator(bufferLine.loadCell(startCol - 1, this._workCell))) {\n        bufferLine.loadCell(startCol - 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 0) {\n          // If the next character is a wide char, record it and skip the column\n          leftWideCharCount++;\n          startCol--;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          leftLongCharOffset += length - 1;\n          startIndex -= length - 1;\n        }\n        startIndex--;\n        startCol--;\n      }\n      while (endCol < bufferLine.length && endIndex + 1 < line.length && !this._isCharWordSeparator(bufferLine.loadCell(endCol + 1, this._workCell))) {\n        bufferLine.loadCell(endCol + 1, this._workCell);\n        const length = this._workCell.getChars().length;\n        if (this._workCell.getWidth() === 2) {\n          // If the next character is a wide char, record it and skip the column\n          rightWideCharCount++;\n          endCol++;\n        } else if (length > 1) {\n          // If the next character's string is longer than 1 char (eg. emoji),\n          // adjust the index\n          rightLongCharOffset += length - 1;\n          endIndex += length - 1;\n        }\n        endIndex++;\n        endCol++;\n      }\n    }\n\n    // Incremenet the end index so it is at the start of the next character\n    endIndex++;\n\n    // Calculate the start _column_, converting the the string indexes back to\n    // column coordinates.\n    let start =\n        startIndex // The index of the selection's start char in the line string\n        + charOffset // The difference between the initial char's column and index\n        - leftWideCharCount // The number of wide chars left of the initial char\n        + leftLongCharOffset; // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n\n    // Calculate the length in _columns_, converting the the string indexes back\n    // to column coordinates.\n    let length = Math.min(this._bufferService.cols, // Disallow lengths larger than the terminal cols\n        endIndex // The index of the selection's end char in the line string\n        - startIndex // The index of the selection's start char in the line string\n        + leftWideCharCount // The number of wide chars left of the initial char\n        + rightWideCharCount // The number of wide chars right of the initial char (inclusive)\n        - leftLongCharOffset // The number of additional chars left of the initial char added by columns with strings longer than 1 (emojis)\n        - rightLongCharOffset); // The number of additional chars right of the initial char (inclusive) added by columns with strings longer than 1 (emojis)\n\n    if (!allowWhitespaceOnlySelection && line.slice(startIndex, endIndex).trim() === '') {\n      return undefined;\n    }\n\n    // Recurse upwards if the line is wrapped and the word wraps to the above line\n    if (followWrappedLinesAbove) {\n      if (start === 0 && bufferLine.getCodePoint(0) !== 32 /*' '*/) {\n        const previousBufferLine = buffer.lines.get(coords[1] - 1);\n        if (previousBufferLine && bufferLine.isWrapped && previousBufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n          const previousLineWordPosition = this._getWordAt([this._bufferService.cols - 1, coords[1] - 1], false, true, false);\n          if (previousLineWordPosition) {\n            const offset = this._bufferService.cols - previousLineWordPosition.start;\n            start -= offset;\n            length += offset;\n          }\n        }\n      }\n    }\n\n    // Recurse downwards if the line is wrapped and the word wraps to the next line\n    if (followWrappedLinesBelow) {\n      if (start + length === this._bufferService.cols && bufferLine.getCodePoint(this._bufferService.cols - 1) !== 32 /*' '*/) {\n        const nextBufferLine = buffer.lines.get(coords[1] + 1);\n        if (nextBufferLine && nextBufferLine.isWrapped && nextBufferLine.getCodePoint(0) !== 32 /*' '*/) {\n          const nextLineWordPosition = this._getWordAt([0, coords[1] + 1], false, false, true);\n          if (nextLineWordPosition) {\n            length += nextLineWordPosition.length;\n          }\n        }\n      }\n    }\n\n    return { start, length };\n  }\n\n  /**\n   * Selects the word at the coordinates specified.\n   * @param coords The coordinates to get the word at.\n   * @param allowWhitespaceOnlySelection If whitespace should be selected\n   */\n  protected _selectWordAt(coords: [number, number], allowWhitespaceOnlySelection: boolean): void {\n    const wordPosition = this._getWordAt(coords, allowWhitespaceOnlySelection);\n    if (wordPosition) {\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        coords[1]--;\n      }\n      this._model.selectionStart = [wordPosition.start, coords[1]];\n      this._model.selectionStartLength = wordPosition.length;\n    }\n  }\n\n  /**\n   * Sets the selection end to the word at the coordinated specified.\n   * @param coords The coordinates to get the word at.\n   */\n  private _selectToWordAt(coords: [number, number]): void {\n    const wordPosition = this._getWordAt(coords, true);\n    if (wordPosition) {\n      let endRow = coords[1];\n\n      // Adjust negative start value\n      while (wordPosition.start < 0) {\n        wordPosition.start += this._bufferService.cols;\n        endRow--;\n      }\n\n      // Adjust wrapped length value, this only needs to happen when values are reversed as in that\n      // case we're interested in the start of the word, not the end\n      if (!this._model.areSelectionValuesReversed()) {\n        while (wordPosition.start + wordPosition.length > this._bufferService.cols) {\n          wordPosition.length -= this._bufferService.cols;\n          endRow++;\n        }\n      }\n\n      this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? wordPosition.start : wordPosition.start + wordPosition.length, endRow];\n    }\n  }\n\n  /**\n   * Gets whether the character is considered a word separator by the select\n   * word logic.\n   * @param char The character to check.\n   */\n  private _isCharWordSeparator(cell: CellData): boolean {\n    // Zero width characters are never separators as they are always to the\n    // right of wide characters\n    if (cell.getWidth() === 0) {\n      return false;\n    }\n    return this._optionsService.options.wordSeparator.indexOf(cell.getChars()) >= 0;\n  }\n\n  /**\n   * Selects the line specified.\n   * @param line The line index.\n   */\n  protected _selectLineAt(line: number): void {\n    const wrappedRange = this._bufferService.buffer.getWrappedRangeForLine(line);\n    this._model.selectionStart = [0, wrappedRange.first];\n    this._model.selectionEnd = [this._bufferService.cols, wrappedRange.last];\n    this._model.selectionStartLength = 0;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService } from 'common/services/Services';\n\n/**\n * Represents a selection within the buffer. This model only cares about column\n * and row coordinates, not wide characters.\n */\nexport class SelectionModel {\n  /**\n   * Whether select all is currently active.\n   */\n  public isSelectAllActive: boolean = false;\n\n  /**\n   * The minimal length of the selection from the start position. When double\n   * clicking on a word, the word will be selected which makes the selection\n   * start at the start of the word and makes this variable the length.\n   */\n  public selectionStartLength: number = 0;\n\n  /**\n   * The [x, y] position the selection starts at.\n   */\n  public selectionStart: [number, number] | undefined;\n\n  /**\n   * The [x, y] position the selection ends at.\n   */\n  public selectionEnd: [number, number] | undefined;\n\n  constructor(\n    private _bufferService: IBufferService\n  ) {\n  }\n\n  /**\n   * Clears the current selection.\n   */\n  public clearSelection(): void {\n    this.selectionStart = undefined;\n    this.selectionEnd = undefined;\n    this.isSelectAllActive = false;\n    this.selectionStartLength = 0;\n  }\n\n  /**\n   * The final selection start, taking into consideration select all.\n   */\n  public get finalSelectionStart(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [0, 0];\n    }\n\n    if (!this.selectionEnd || !this.selectionStart) {\n      return this.selectionStart;\n    }\n\n    return this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart;\n  }\n\n  /**\n   * The final selection end, taking into consideration select all, double click\n   * word selection and triple click line selection.\n   */\n  public get finalSelectionEnd(): [number, number] | undefined {\n    if (this.isSelectAllActive) {\n      return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];\n    }\n\n    if (!this.selectionStart) {\n      return undefined;\n    }\n\n    // Use the selection start + length if the end doesn't exist or they're reversed\n    if (!this.selectionEnd || this.areSelectionValuesReversed()) {\n      const startPlusLength = this.selectionStart[0] + this.selectionStartLength;\n      if (startPlusLength > this._bufferService.cols) {\n        return [startPlusLength % this._bufferService.cols, this.selectionStart[1] + Math.floor(startPlusLength / this._bufferService.cols)];\n      }\n      return [startPlusLength, this.selectionStart[1]];\n    }\n\n    // Ensure the the word/line is selected after a double/triple click\n    if (this.selectionStartLength) {\n      // Select the larger of the two when start and end are on the same line\n      if (this.selectionEnd[1] === this.selectionStart[1]) {\n        return [Math.max(this.selectionStart[0] + this.selectionStartLength, this.selectionEnd[0]), this.selectionEnd[1]];\n      }\n    }\n    return this.selectionEnd;\n  }\n\n  /**\n   * Returns whether the selection start and end are reversed.\n   */\n  public areSelectionValuesReversed(): boolean {\n    const start = this.selectionStart;\n    const end = this.selectionEnd;\n    if (!start || !end) {\n      return false;\n    }\n    return start[1] > end[1] || (start[1] === end[1] && start[0] > end[0]);\n  }\n\n  /**\n   * Handle the buffer being trimmed, adjust the selection position.\n   * @param amount The amount the buffer is being trimmed.\n   * @return Whether a refresh is necessary.\n   */\n  public onTrim(amount: number): boolean {\n    // Adjust the selection position based on the trimmed amount.\n    if (this.selectionStart) {\n      this.selectionStart[1] -= amount;\n    }\n    if (this.selectionEnd) {\n      this.selectionEnd[1] -= amount;\n    }\n\n    // The selection has moved off the buffer, clear it.\n    if (this.selectionEnd && this.selectionEnd[1] < 0) {\n      this.clearSelection();\n      return true;\n    }\n\n    // If the selection start is trimmed, ensure the start column is 0.\n    if (this.selectionStart && this.selectionStart[1] < 0) {\n      this.selectionStart[1] = 0;\n    }\n    return false;\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { C0 } from 'common/data/EscapeSequences';\nimport { IBufferService } from 'common/services/Services';\n\nconst enum Direction {\n  UP = 'A',\n  DOWN = 'B',\n  RIGHT = 'C',\n  LEFT = 'D'\n}\n\n/**\n * Concatenates all the arrow sequences together.\n * Resets the starting row to an unwrapped row, moves to the requested row,\n * then moves to requested col.\n */\nexport function moveToCellSequence(targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startX = bufferService.buffer.x;\n  const startY = bufferService.buffer.y;\n\n  // The alt buffer should try to navigate between rows\n  if (!bufferService.buffer.hasScrollback) {\n    return resetStartingRow(startX, startY, targetX, targetY, bufferService, applicationCursor) +\n      moveToRequestedRow(startY, targetY, bufferService, applicationCursor) +\n      moveToRequestedCol(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  }\n\n  // Only move horizontally for the normal buffer\n  return moveHorizontallyOnly(startX, startY, targetX, targetY, bufferService, applicationCursor);\n}\n\n/**\n * If the initial position of the cursor is on a row that is wrapped, move the\n * cursor up to the first row that is not wrapped to have accurate vertical\n * positioning.\n */\nfunction resetStartingRow(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length === 0) {\n    return '';\n  }\n  return repeat(bufferLine(\n    startX, startY, startX,\n    startY - wrappedRowsForRow(bufferService, startY), false, bufferService\n  ).length, sequence(Direction.LEFT, applicationCursor));\n}\n\n/**\n * Using the reset starting and ending row, move to the requested row,\n * ignoring wrapped rows\n */\nfunction moveToRequestedRow(startY: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  const rowsToMove = Math.abs(startRow - endRow) - wrappedRowsCount(startY, targetY, bufferService);\n\n  return repeat(rowsToMove, sequence(verticalDirection(startY, targetY), applicationCursor));\n}\n\n/**\n * Move to the requested col on the ending row\n */\nfunction moveToRequestedCol(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  let startRow;\n  if (moveToRequestedRow(startY, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  const endRow = targetY;\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n\n  return repeat(bufferLine(\n    startX, startRow, targetX, endRow,\n    direction === Direction.RIGHT, bufferService\n  ).length, sequence(direction, applicationCursor));\n}\n\nfunction moveHorizontallyOnly(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): string {\n  const direction = horizontalDirection(startX, startY, targetX, targetY, bufferService, applicationCursor);\n  return repeat(Math.abs(startX - targetX), sequence(direction, applicationCursor));\n}\n\n/**\n * Utility functions\n */\n\n/**\n * Calculates the number of wrapped rows between the unwrapped starting and\n * ending rows. These rows need to ignored since the cursor skips over them.\n */\nfunction wrappedRowsCount(startY: number, targetY: number, bufferService: IBufferService): number {\n  let wrappedRows = 0;\n  const startRow = startY - wrappedRowsForRow(bufferService, startY);\n  const endRow = targetY - wrappedRowsForRow(bufferService, targetY);\n\n  for (let i = 0; i < Math.abs(startRow - endRow); i++) {\n    const direction = verticalDirection(startY, targetY) === Direction.UP ? -1 : 1;\n    const line = bufferService.buffer.lines.get(startRow + (direction * i));\n    if (line && line.isWrapped) {\n      wrappedRows++;\n    }\n  }\n\n  return wrappedRows;\n}\n\n/**\n * Calculates the number of wrapped rows that make up a given row.\n * @param currentRow The row to determine how many wrapped rows make it up\n */\nfunction wrappedRowsForRow(bufferService: IBufferService, currentRow: number): number {\n  let rowCount = 0;\n  let line = bufferService.buffer.lines.get(currentRow);\n  let lineWraps = line && line.isWrapped;\n\n  while (lineWraps && currentRow >= 0 && currentRow < bufferService.rows) {\n    rowCount++;\n    line = bufferService.buffer.lines.get(--currentRow);\n    lineWraps = line && line.isWrapped;\n  }\n\n  return rowCount;\n}\n\n/**\n * Direction determiners\n */\n\n/**\n * Determines if the right or left arrow is needed\n */\nfunction horizontalDirection(startX: number, startY: number, targetX: number, targetY: number, bufferService: IBufferService, applicationCursor: boolean): Direction {\n  let startRow;\n  if (moveToRequestedRow(targetX, targetY, bufferService, applicationCursor).length > 0) {\n    startRow = targetY - wrappedRowsForRow(bufferService, targetY);\n  } else {\n    startRow = startY;\n  }\n\n  if ((startX < targetX &&\n    startRow <= targetY) || // down/right or same y/right\n    (startX >= targetX &&\n    startRow < targetY)) {  // down/left or same y/left\n    return Direction.RIGHT;\n  }\n  return Direction.LEFT;\n}\n\n/**\n * Determines if the up or down arrow is needed\n */\nfunction verticalDirection(startY: number, targetY: number): Direction {\n  return startY > targetY ? Direction.UP : Direction.DOWN;\n}\n\n/**\n * Constructs the string of chars in the buffer from a starting row and col\n * to an ending row and col\n * @param startCol The starting column position\n * @param startRow The starting row position\n * @param endCol The ending column position\n * @param endRow The ending row position\n * @param forward Direction to move\n */\nfunction bufferLine(\n  startCol: number,\n  startRow: number,\n  endCol: number,\n  endRow: number,\n  forward: boolean,\n  bufferService: IBufferService\n): string {\n  let currentCol = startCol;\n  let currentRow = startRow;\n  let bufferStr = '';\n\n  while (currentCol !== endCol || currentRow !== endRow) {\n    currentCol += forward ? 1 : -1;\n\n    if (forward && currentCol > bufferService.cols - 1) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, startCol, currentCol\n      );\n      currentCol = 0;\n      startCol = 0;\n      currentRow++;\n    } else if (!forward && currentCol < 0) {\n      bufferStr += bufferService.buffer.translateBufferLineToString(\n        currentRow, false, 0, startCol + 1\n      );\n      currentCol = bufferService.cols - 1;\n      startCol = currentCol;\n      currentRow--;\n    }\n  }\n\n  return bufferStr + bufferService.buffer.translateBufferLineToString(\n    currentRow, false, startCol, currentCol\n  );\n}\n\n/**\n * Constructs the escape sequence for clicking an arrow\n * @param direction The direction to move\n */\nfunction sequence(direction: Direction, applicationCursor: boolean): string {\n  const mod =  applicationCursor ? 'O' : '[';\n  return C0.ESC + mod + direction;\n}\n\n/**\n * Returns a string repeated a given number of times\n * Polyfill from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n * @param count The number of times to repeat the string\n * @param string The string that is to be repeated\n */\nfunction repeat(count: number, str: string): string {\n  count = Math.floor(count);\n  let rpt = '';\n  for (let i = 0; i < count; i++) {\n    rpt += str;\n  }\n  return rpt;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { ISoundService } from 'browser/services/Services';\n\nexport class SoundService implements ISoundService {\n  serviceBrand: any;\n\n  private static _audioContext: AudioContext;\n\n  static get audioContext(): AudioContext | null {\n    if (!SoundService._audioContext) {\n      const audioContextCtor: typeof AudioContext = (<any>window).AudioContext || (<any>window).webkitAudioContext;\n      if (!audioContextCtor) {\n        console.warn('Web Audio API is not supported by this browser. Consider upgrading to the latest version');\n        return null;\n      }\n      SoundService._audioContext = new audioContextCtor();\n    }\n    return SoundService._audioContext;\n  }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n  }\n\n  public playBellSound(): void {\n    const ctx = SoundService.audioContext;\n    if (!ctx) {\n      return;\n    }\n    const bellAudioSource = ctx.createBufferSource();\n    ctx.decodeAudioData(this._base64ToArrayBuffer(this._removeMimeType(this._optionsService.options.bellSound)), (buffer) => {\n      bellAudioSource.buffer = buffer;\n      bellAudioSource.connect(ctx.destination);\n      bellAudioSource.start(0);\n    });\n  }\n\n  private _base64ToArrayBuffer(base64: string): ArrayBuffer {\n    const binaryString = window.atob(base64);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n\n    return bytes.buffer;\n  }\n\n  private _removeMimeType(dataURI: string): string {\n    // Split the input to get the mime-type and the data itself\n    const splitUri = dataURI.split(',');\n\n    // Return only the data\n    return splitUri[1];\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { Disposable } from 'common/Lifecycle';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IMouseService, ISelectionService } from 'browser/services/Services';\nimport { IMouseZoneManager, IMouseZone } from 'browser/Types';\nimport { IBufferService } from 'common/services/Services';\n\nconst HOVER_DURATION = 500;\n\n/**\n * The MouseZoneManager allows components to register zones within the terminal\n * that trigger hover and click callbacks.\n *\n * This class was intentionally made not so robust initially as the only case it\n * needed to support was single-line links which never overlap. Improvements can\n * be made in the future.\n */\nexport class MouseZoneManager extends Disposable implements IMouseZoneManager {\n  private _zones: IMouseZone[] = [];\n\n  private _areZonesActive: boolean = false;\n  private _mouseMoveListener: (e: MouseEvent) => any;\n  private _mouseLeaveListener: (e: MouseEvent) => any;\n  private _clickListener: (e: MouseEvent) => any;\n\n  private _tooltipTimeout: number | undefined;\n  private _currentZone: IMouseZone | undefined;\n  private _lastHoverCoords: [number | undefined, number | undefined] = [undefined, undefined];\n  private _initialSelectionLength: number = 0;\n\n  constructor(\n    private readonly _element: HTMLElement,\n    private readonly _screenElement: HTMLElement,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @IMouseService private readonly _mouseService: IMouseService,\n    @ISelectionService private readonly _selectionService: ISelectionService\n  ) {\n    super();\n\n    this.register(addDisposableDomListener(this._element, 'mousedown', e => this._onMouseDown(e)));\n\n    // These events are expensive, only listen to it when mouse zones are active\n    this._mouseMoveListener = e => this._onMouseMove(e);\n    this._mouseLeaveListener = e => this._onMouseLeave(e);\n    this._clickListener = e => this._onClick(e);\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._deactivate();\n  }\n\n  public add(zone: IMouseZone): void {\n    this._zones.push(zone);\n    if (this._zones.length === 1) {\n      this._activate();\n    }\n  }\n\n  public clearAll(start?: number, end?: number): void {\n    // Exit if there's nothing to clear\n    if (this._zones.length === 0) {\n      return;\n    }\n\n    // Clear all if start/end weren't set\n    if (!start || !end) {\n      start = 0;\n      end = this._bufferService.rows - 1;\n    }\n\n    // Iterate through zones and clear them out if they're within the range\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if ((zone.y1 > start && zone.y1 <= end + 1) ||\n          (zone.y2 > start && zone.y2 <= end + 1) ||\n          (zone.y1 < start && zone.y2 > end + 1)) {\n        if (this._currentZone && this._currentZone === zone) {\n          this._currentZone.leaveCallback();\n          this._currentZone = undefined;\n        }\n        this._zones.splice(i--, 1);\n      }\n    }\n\n    // Deactivate the mouse zone manager if all the zones have been removed\n    if (this._zones.length === 0) {\n      this._deactivate();\n    }\n  }\n\n  private _activate(): void {\n    if (!this._areZonesActive) {\n      this._areZonesActive = true;\n      this._element.addEventListener('mousemove', this._mouseMoveListener);\n      this._element.addEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.addEventListener('click', this._clickListener);\n    }\n  }\n\n  private _deactivate(): void {\n    if (this._areZonesActive) {\n      this._areZonesActive = false;\n      this._element.removeEventListener('mousemove', this._mouseMoveListener);\n      this._element.removeEventListener('mouseleave', this._mouseLeaveListener);\n      this._element.removeEventListener('click', this._clickListener);\n    }\n  }\n\n  private _onMouseMove(e: MouseEvent): void {\n    // TODO: Ideally this would only clear the hover state when the mouse moves\n    // outside of the mouse zone\n    if (this._lastHoverCoords[0] !== e.pageX || this._lastHoverCoords[1] !== e.pageY) {\n      this._onHover(e);\n      // Record the current coordinates\n      this._lastHoverCoords = [e.pageX, e.pageY];\n    }\n  }\n\n  private _onHover(e: MouseEvent): void {\n    const zone = this._findZoneEventAt(e);\n\n    // Do nothing if the zone is the same\n    if (zone === this._currentZone) {\n      return;\n    }\n\n    // Fire the hover end callback and cancel any existing timer if a new zone\n    // is being hovered\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n\n    // Exit if there is not zone\n    if (!zone) {\n      return;\n    }\n    this._currentZone = zone;\n\n    // Trigger the hover callback\n    if (zone.hoverCallback) {\n      zone.hoverCallback(e);\n    }\n\n    // Restart the tooltip timeout\n    this._tooltipTimeout = <number><any>setTimeout(() => this._onTooltip(e), HOVER_DURATION);\n  }\n\n  private _onTooltip(e: MouseEvent): void {\n    this._tooltipTimeout = undefined;\n    const zone = this._findZoneEventAt(e);\n    if (zone && zone.tooltipCallback) {\n      zone.tooltipCallback(e);\n    }\n  }\n\n  private _onMouseDown(e: MouseEvent): void {\n    // Store current terminal selection length, to check if we're performing\n    // a selection operation\n    this._initialSelectionLength = this._getSelectionLength();\n\n    // Ignore the event if there are no zones active\n    if (!this._areZonesActive) {\n      return;\n    }\n\n    // Find the active zone, prevent event propagation if found to prevent other\n    // components from handling the mouse event.\n    const zone = this._findZoneEventAt(e);\n    if (zone) {\n      if (zone.willLinkActivate(e)) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  private _onMouseLeave(e: MouseEvent): void {\n    // Fire the hover end callback and cancel any existing timer if the mouse\n    // leaves the terminal element\n    if (this._currentZone) {\n      this._currentZone.leaveCallback();\n      this._currentZone = undefined;\n      if (this._tooltipTimeout) {\n        clearTimeout(this._tooltipTimeout);\n      }\n    }\n  }\n\n  private _onClick(e: MouseEvent): void {\n    // Find the active zone and click it if found and no selection was\n    // being performed\n    const zone = this._findZoneEventAt(e);\n    const currentSelectionLength = this._getSelectionLength();\n\n    if (zone && currentSelectionLength === this._initialSelectionLength) {\n      zone.clickCallback(e);\n      e.preventDefault();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  private _getSelectionLength(): number {\n    const selectionText = this._selectionService.selectionText;\n    return selectionText ? selectionText.length : 0;\n  }\n\n  private _findZoneEventAt(e: MouseEvent): IMouseZone | undefined {\n    const coords = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows);\n    if (!coords) {\n      return undefined;\n    }\n    const x = coords[0];\n    const y = coords[1];\n    for (let i = 0; i < this._zones.length; i++) {\n      const zone = this._zones[i];\n      if (zone.y1 === zone.y2) {\n        // Single line link\n        if (y === zone.y1 && x >= zone.x1 && x < zone.x2) {\n          return zone;\n        }\n      } else {\n        // Multi-line link\n        if ((y === zone.y1 && x >= zone.x1) ||\n            (y === zone.y2 && x < zone.x2) ||\n            (y > zone.y1 && y < zone.y2)) {\n          return zone;\n        }\n      }\n    }\n    return undefined;\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport * as Strings from './browser/LocalizableStrings';\nimport { ITerminal } from './Types';\nimport { IBuffer } from 'common/buffer/Types';\nimport { isMac } from 'common/Platform';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { IRenderService } from 'browser/services/Services';\n\nconst MAX_ROWS_TO_READ = 20;\n\nconst enum BoundaryPosition {\n  TOP,\n  BOTTOM\n}\n\nexport class AccessibilityManager extends Disposable {\n  private _accessibilityTreeRoot: HTMLElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[];\n  private _liveRegion: HTMLElement;\n  private _liveRegionLineCount: number = 0;\n\n  private _renderRowsDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _topBoundaryFocusListener: (e: FocusEvent) => void;\n  private _bottomBoundaryFocusListener: (e: FocusEvent) => void;\n\n  /**\n   * This queue has a character pushed to it for keys that are pressed, if the\n   * next character added to the terminal is equal to the key char then it is\n   * not announced (added to live region) because it has already been announced\n   * by the textarea event (which cannot be canceled). There are some race\n   * condition cases if there is typing while data is streaming, but this covers\n   * the main case of typing into the prompt and inputting the answer to a\n   * question (Y/N, etc.).\n   */\n  private _charsToConsume: string[] = [];\n\n  private _charsToAnnounce: string = '';\n\n  constructor(\n    private readonly _terminal: ITerminal,\n    private readonly _renderService: IRenderService\n  ) {\n    super();\n    this._accessibilityTreeRoot = document.createElement('div');\n    this._accessibilityTreeRoot.classList.add('xterm-accessibility');\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add('xterm-accessibility-tree');\n    this._rowElements = [];\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n\n    this._topBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.TOP);\n    this._bottomBoundaryFocusListener = e => this._onBoundaryFocus(e, BoundaryPosition.BOTTOM);\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n    this._accessibilityTreeRoot.appendChild(this._rowContainer);\n\n    this._renderRowsDebouncer = new RenderDebouncer(this._renderRows.bind(this));\n    this._refreshRows();\n\n    this._liveRegion = document.createElement('div');\n    this._liveRegion.classList.add('live-region');\n    this._liveRegion.setAttribute('aria-live', 'assertive');\n    this._accessibilityTreeRoot.appendChild(this._liveRegion);\n\n    this._terminal.element.insertAdjacentElement('afterbegin', this._accessibilityTreeRoot);\n\n    this.register(this._renderRowsDebouncer);\n    this.register(this._terminal.onResize(e => this._onResize(e.rows)));\n    this.register(this._terminal.onRender(e => this._refreshRows(e.start, e.end)));\n    this.register(this._terminal.onScroll(() => this._refreshRows()));\n    // Line feed is an issue as the prompt won't be read out after a command is run\n    this.register(this._terminal.onA11yChar(char => this._onChar(char)));\n    this.register(this._terminal.onLineFeed(() => this._onChar('\\n')));\n    this.register(this._terminal.onA11yTab(spaceCount => this._onTab(spaceCount)));\n    this.register(this._terminal.onKey(e => this._onKey(e.key)));\n    this.register(this._terminal.onBlur(() => this._clearLiveRegion()));\n    this.register(this._renderService.onDimensionsChange(() => this._refreshRowsDimensions()));\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this.register(this._screenDprMonitor);\n    this._screenDprMonitor.setListener(() => this._refreshRowsDimensions());\n    // This shouldn't be needed on modern browsers but is present in case the\n    // media query that drives the ScreenDprMonitor isn't supported\n    this.register(addDisposableDomListener(window, 'resize', () => this._refreshRowsDimensions()));\n  }\n\n  public dispose(): void {\n    super.dispose();\n    this._terminal.element.removeChild(this._accessibilityTreeRoot);\n    this._rowElements.length = 0;\n  }\n\n  private _onBoundaryFocus(e: FocusEvent, position: BoundaryPosition): void {\n    const boundaryElement = <HTMLElement>e.target;\n    const beforeBoundaryElement = this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2];\n\n    // Don't scroll if the buffer top has reached the end in that direction\n    const posInSet = boundaryElement.getAttribute('aria-posinset');\n    const lastRowPos = position === BoundaryPosition.TOP ? '1' : `${this._terminal.buffer.lines.length}`;\n    if (posInSet === lastRowPos) {\n      return;\n    }\n\n    // Don't scroll when the last focused item was not the second row (focus is going the other\n    // direction)\n    if (e.relatedTarget !== beforeBoundaryElement) {\n      return;\n    }\n\n    // Remove old boundary element from array\n    let topBoundaryElement: HTMLElement;\n    let bottomBoundaryElement: HTMLElement;\n    if (position === BoundaryPosition.TOP) {\n      topBoundaryElement = boundaryElement;\n      bottomBoundaryElement = this._rowElements.pop()!;\n      this._rowContainer.removeChild(bottomBoundaryElement);\n    } else {\n      topBoundaryElement = this._rowElements.shift()!;\n      bottomBoundaryElement = boundaryElement;\n      this._rowContainer.removeChild(topBoundaryElement);\n    }\n\n    // Remove listeners from old boundary elements\n    topBoundaryElement.removeEventListener('focus', this._topBoundaryFocusListener);\n    bottomBoundaryElement.removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Add new element to array/DOM\n    if (position === BoundaryPosition.TOP) {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.unshift(newElement);\n      this._rowContainer.insertAdjacentElement('afterbegin', newElement);\n    } else {\n      const newElement = this._createAccessibilityTreeNode();\n      this._rowElements.push(newElement);\n      this._rowContainer.appendChild(newElement);\n    }\n\n    // Add listeners to new boundary elements\n    this._rowElements[0].addEventListener('focus', this._topBoundaryFocusListener);\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Scroll up\n    this._terminal.scrollLines(position === BoundaryPosition.TOP ? -1 : 1);\n\n    // Focus new boundary before element\n    this._rowElements[position === BoundaryPosition.TOP ? 1 : this._rowElements.length - 2].focus();\n\n    // Prevent the standard behavior\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  private _onResize(rows: number): void {\n    // Remove bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].removeEventListener('focus', this._bottomBoundaryFocusListener);\n\n    // Grow rows as required\n    for (let i = this._rowContainer.children.length; i < this._terminal.rows; i++) {\n      this._rowElements[i] = this._createAccessibilityTreeNode();\n      this._rowContainer.appendChild(this._rowElements[i]);\n    }\n    // Shrink rows as required\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop()!);\n    }\n\n    // Add bottom boundary listener\n    this._rowElements[this._rowElements.length - 1].addEventListener('focus', this._bottomBoundaryFocusListener);\n\n    this._refreshRowsDimensions();\n  }\n\n  private _createAccessibilityTreeNode(): HTMLElement {\n    const element = document.createElement('div');\n    element.setAttribute('role', 'listitem');\n    element.tabIndex = -1;\n    this._refreshRowDimensions(element);\n    return element;\n  }\n\n  private _onTab(spaceCount: number): void {\n    for (let i = 0; i < spaceCount; i++) {\n      this._onChar(' ');\n    }\n  }\n\n  private _onChar(char: string): void {\n    if (this._liveRegionLineCount < MAX_ROWS_TO_READ + 1) {\n      if (this._charsToConsume.length > 0) {\n        // Have the screen reader ignore the char if it was just input\n        const shiftedChar = this._charsToConsume.shift();\n        if (shiftedChar !== char) {\n          this._charsToAnnounce += char;\n        }\n      } else {\n        this._charsToAnnounce += char;\n      }\n\n      if (char === '\\n') {\n        this._liveRegionLineCount++;\n        if (this._liveRegionLineCount === MAX_ROWS_TO_READ + 1) {\n          this._liveRegion.textContent += Strings.tooMuchOutput;\n        }\n      }\n\n      // Only detach/attach on mac as otherwise messages can go unaccounced\n      if (isMac) {\n        if (this._liveRegion.textContent && this._liveRegion.textContent.length > 0 && !this._liveRegion.parentNode) {\n          setTimeout(() => {\n            this._accessibilityTreeRoot.appendChild(this._liveRegion);\n          }, 0);\n        }\n      }\n    }\n  }\n\n  private _clearLiveRegion(): void {\n    this._liveRegion.textContent = '';\n    this._liveRegionLineCount = 0;\n\n    // Only detach/attach on mac as otherwise messages can go unaccounced\n    if (isMac) {\n      if (this._liveRegion.parentNode) {\n        this._accessibilityTreeRoot.removeChild(this._liveRegion);\n      }\n    }\n  }\n\n  private _onKey(keyChar: string): void {\n    this._clearLiveRegion();\n    this._charsToConsume.push(keyChar);\n  }\n\n  private _refreshRows(start?: number, end?: number): void {\n    this._renderRowsDebouncer.refresh(start, end, this._terminal.rows);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    const buffer: IBuffer = this._terminal.buffer;\n    const setSize = buffer.lines.length.toString();\n    for (let i = start; i <= end; i++) {\n      const lineData = buffer.translateBufferLineToString(buffer.ydisp + i, true);\n      const posInSet = (buffer.ydisp + i + 1).toString();\n      const element = this._rowElements[i];\n      if (element) {\n        if (lineData.length === 0) {\n          element.innerHTML = '&nbsp;';\n        } else {\n          element.textContent = lineData;\n        }\n        element.setAttribute('aria-posinset', posInSet);\n        element.setAttribute('aria-setsize', setSize);\n      }\n    }\n    this._announceCharacters();\n  }\n\n  private _refreshRowsDimensions(): void {\n    if (!this._renderService.dimensions.actualCellHeight) {\n      return;\n    }\n    if (this._rowElements.length !== this._terminal.rows) {\n      this._onResize(this._terminal.rows);\n    }\n    for (let i = 0; i < this._terminal.rows; i++) {\n      this._refreshRowDimensions(this._rowElements[i]);\n    }\n  }\n\n  private _refreshRowDimensions(element: HTMLElement): void {\n    element.style.height = `${this._renderService.dimensions.actualCellHeight}px`;\n  }\n\n  private _announceCharacters(): void {\n    if (this._charsToAnnounce.length === 0) {\n      return;\n    }\n    this._liveRegion.textContent += this._charsToAnnounce;\n    this._charsToAnnounce = '';\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { ITerminal } from '../../Types';\nimport { BOLD_CLASS, ITALIC_CLASS, CURSOR_CLASS, CURSOR_STYLE_BLOCK_CLASS, CURSOR_BLINK_CLASS, CURSOR_STYLE_BAR_CLASS, CURSOR_STYLE_UNDERLINE_CLASS, DomRendererRowFactory } from 'browser/renderer/dom/DomRendererRowFactory';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { Disposable } from 'common/Lifecycle';\nimport { IColorSet, ILinkifierEvent } from 'browser/Types';\nimport { ICharSizeService } from 'browser/services/Services';\nimport { IOptionsService } from 'common/services/Services';\n\nconst TERMINAL_CLASS_PREFIX = 'xterm-dom-renderer-owner-';\nconst ROW_CONTAINER_CLASS = 'xterm-rows';\nconst FG_CLASS_PREFIX = 'xterm-fg-';\nconst BG_CLASS_PREFIX = 'xterm-bg-';\nconst FOCUS_CLASS = 'xterm-focus';\nconst SELECTION_CLASS = 'xterm-selection';\n\nlet nextTerminalId = 1;\n\n/**\n * A fallback renderer for when canvas is slow. This is not meant to be\n * particularly fast or feature complete, more just stable and usable for when\n * canvas is not an option.\n */\nexport class DomRenderer extends Disposable implements IRenderer {\n  private _rowFactory: DomRendererRowFactory;\n  private _terminalClass: number = nextTerminalId++;\n\n  private _themeStyleElement: HTMLStyleElement;\n  private _dimensionsStyleElement: HTMLStyleElement;\n  private _rowContainer: HTMLElement;\n  private _rowElements: HTMLElement[] = [];\n  private _selectionContainer: HTMLElement;\n\n  public dimensions: IRenderDimensions;\n\n  constructor(\n    private _terminal: ITerminal,\n    private _colors: IColorSet,\n    private _charSizeService: ICharSizeService,\n    private _optionsService: IOptionsService\n  ) {\n    super();\n\n    this._rowContainer = document.createElement('div');\n    this._rowContainer.classList.add(ROW_CONTAINER_CLASS);\n    this._rowContainer.style.lineHeight = 'normal';\n    this._rowContainer.setAttribute('aria-hidden', 'true');\n    this._refreshRowElements(this._terminal.cols, this._terminal.rows);\n    this._selectionContainer = document.createElement('div');\n    this._selectionContainer.classList.add(SELECTION_CLASS);\n    this._selectionContainer.setAttribute('aria-hidden', 'true');\n\n    this.dimensions = {\n      scaledCharWidth: null,\n      scaledCharHeight: null,\n      scaledCellWidth: null,\n      scaledCellHeight: null,\n      scaledCharLeft: null,\n      scaledCharTop: null,\n      scaledCanvasWidth: null,\n      scaledCanvasHeight: null,\n      canvasWidth: null,\n      canvasHeight: null,\n      actualCellWidth: null,\n      actualCellHeight: null\n    };\n    this._updateDimensions();\n    this._injectCss();\n\n    this._rowFactory = new DomRendererRowFactory(document, this._optionsService);\n\n    this._terminal.element.classList.add(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.appendChild(this._rowContainer);\n    this._terminal.screenElement.appendChild(this._selectionContainer);\n\n    this._terminal.linkifier.onLinkHover(e => this._onLinkHover(e));\n    this._terminal.linkifier.onLinkLeave(e => this._onLinkLeave(e));\n  }\n\n  public dispose(): void {\n    this._terminal.element.classList.remove(TERMINAL_CLASS_PREFIX + this._terminalClass);\n    this._terminal.screenElement.removeChild(this._rowContainer);\n    this._terminal.screenElement.removeChild(this._selectionContainer);\n    this._terminal.screenElement.removeChild(this._themeStyleElement);\n    this._terminal.screenElement.removeChild(this._dimensionsStyleElement);\n    super.dispose();\n  }\n\n  private _updateDimensions(): void {\n    this.dimensions.scaledCharWidth = this._charSizeService.width * window.devicePixelRatio;\n    this.dimensions.scaledCharHeight = Math.ceil(this._charSizeService.height * window.devicePixelRatio);\n    this.dimensions.scaledCellWidth = this.dimensions.scaledCharWidth + Math.round(this._terminal.options.letterSpacing);\n    this.dimensions.scaledCellHeight = Math.floor(this.dimensions.scaledCharHeight * this._terminal.options.lineHeight);\n    this.dimensions.scaledCharLeft = 0;\n    this.dimensions.scaledCharTop = 0;\n    this.dimensions.scaledCanvasWidth = this.dimensions.scaledCellWidth * this._terminal.cols;\n    this.dimensions.scaledCanvasHeight = this.dimensions.scaledCellHeight * this._terminal.rows;\n    this.dimensions.canvasWidth = Math.round(this.dimensions.scaledCanvasWidth / window.devicePixelRatio);\n    this.dimensions.canvasHeight = Math.round(this.dimensions.scaledCanvasHeight / window.devicePixelRatio);\n    this.dimensions.actualCellWidth = this.dimensions.canvasWidth / this._terminal.cols;\n    this.dimensions.actualCellHeight = this.dimensions.canvasHeight / this._terminal.rows;\n\n    this._rowElements.forEach(element => {\n      element.style.width = `${this.dimensions.canvasWidth}px`;\n      element.style.height = `${this.dimensions.actualCellHeight}px`;\n      element.style.lineHeight = `${this.dimensions.actualCellHeight}px`;\n      // Make sure rows don't overflow onto following row\n      element.style.overflow = 'hidden';\n    });\n\n    if (!this._dimensionsStyleElement) {\n      this._dimensionsStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._dimensionsStyleElement);\n    }\n\n    const styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} span {` +\n        ` display: inline-block;` +\n        ` height: 100%;` +\n        ` vertical-align: top;` +\n        ` width: ${this.dimensions.actualCellWidth}px` +\n        `}`;\n\n    this._dimensionsStyleElement.innerHTML = styles;\n\n    this._selectionContainer.style.height = (<any>this._terminal)._viewportElement.style.height;\n    this._terminal.screenElement.style.width = `${this.dimensions.canvasWidth}px`;\n    this._terminal.screenElement.style.height = `${this.dimensions.canvasHeight}px`;\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._colors = colors;\n    this._injectCss();\n  }\n\n  private _injectCss(): void {\n    if (!this._themeStyleElement) {\n      this._themeStyleElement = document.createElement('style');\n      this._terminal.screenElement.appendChild(this._themeStyleElement);\n    }\n\n    // Base CSS\n    let styles =\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} {` +\n        ` color: ${this._colors.foreground.css};` +\n        ` background-color: ${this._colors.background.css};` +\n        ` font-family: ${this._terminal.options.fontFamily};` +\n        ` font-size: ${this._terminal.options.fontSize}px;` +\n        `}`;\n    // Text styles\n    styles +=\n        `${this._terminalSelector} span:not(.${BOLD_CLASS}) {` +\n        ` font-weight: ${this._terminal.options.fontWeight};` +\n        `}` +\n        `${this._terminalSelector} span.${BOLD_CLASS} {` +\n        ` font-weight: ${this._terminal.options.fontWeightBold};` +\n        `}` +\n        `${this._terminalSelector} span.${ITALIC_CLASS} {` +\n        ` font-style: italic;` +\n        `}`;\n    // Blink animation\n    styles +=\n        `@keyframes blink_box_shadow {` +\n        ` 50% {` +\n        `  box-shadow: none;` +\n        ` }` +\n        `}`;\n    styles +=\n        `@keyframes blink_block {` +\n        ` 0% {` +\n        `  background-color: ${this._colors.cursor.css};` +\n        `  color: ${this._colors.cursorAccent.css};` +\n        ` }` +\n        ` 50% {` +\n        `  background-color: ${this._colors.cursorAccent.css};` +\n        `  color: ${this._colors.cursor.css};` +\n        ` }` +\n        `}`;\n    // Cursor\n    styles +=\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}:not(.${FOCUS_CLASS}) .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` outline: 1px solid ${this._colors.cursor.css};` +\n        ` outline-offset: -1px;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}:not(.${CURSOR_STYLE_BLOCK_CLASS}) {` +\n        ` animation: blink_box_shadow 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_BLINK_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` animation: blink_block 1s step-end infinite;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS}.${FOCUS_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BLOCK_CLASS} {` +\n        ` background-color: ${this._colors.cursor.css};` +\n        ` color: ${this._colors.cursorAccent.css};` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_BAR_CLASS} {` +\n        ` box-shadow: 1px 0 0 ${this._colors.cursor.css} inset;` +\n        `}` +\n        `${this._terminalSelector} .${ROW_CONTAINER_CLASS} .${CURSOR_CLASS}.${CURSOR_STYLE_UNDERLINE_CLASS} {` +\n        ` box-shadow: 0 -1px 0 ${this._colors.cursor.css} inset;` +\n        `}`;\n    // Selection\n    styles +=\n        `${this._terminalSelector} .${SELECTION_CLASS} {` +\n        ` position: absolute;` +\n        ` top: 0;` +\n        ` left: 0;` +\n        ` z-index: 1;` +\n        ` pointer-events: none;` +\n        `}` +\n        `${this._terminalSelector} .${SELECTION_CLASS} div {` +\n        ` position: absolute;` +\n        ` background-color: ${this._colors.selection.css};` +\n        `}`;\n    // Colors\n    this._colors.ansi.forEach((c, i) => {\n      styles +=\n          `${this._terminalSelector} .${FG_CLASS_PREFIX}${i} { color: ${c.css}; }` +\n          `${this._terminalSelector} .${BG_CLASS_PREFIX}${i} { background-color: ${c.css}; }`;\n    });\n    styles +=\n        `${this._terminalSelector} .${FG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { color: ${this._colors.background.css}; }` +\n        `${this._terminalSelector} .${BG_CLASS_PREFIX}${INVERTED_DEFAULT_COLOR} { background-color: ${this._colors.foreground.css}; }`;\n\n    this._themeStyleElement.innerHTML = styles;\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._updateDimensions();\n  }\n\n  private _refreshRowElements(cols: number, rows: number): void {\n    // Add missing elements\n    for (let i = this._rowElements.length; i <= rows; i++) {\n      const row = document.createElement('div');\n      this._rowContainer.appendChild(row);\n      this._rowElements.push(row);\n    }\n    // Remove excess elements\n    while (this._rowElements.length > rows) {\n      this._rowContainer.removeChild(this._rowElements.pop());\n    }\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._refreshRowElements(cols, rows);\n    this._updateDimensions();\n  }\n\n  public onCharSizeChanged(): void {\n    this._updateDimensions();\n  }\n\n  public onBlur(): void {\n    this._rowContainer.classList.remove(FOCUS_CLASS);\n  }\n\n  public onFocus(): void {\n    this._rowContainer.classList.add(FOCUS_CLASS);\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    // Remove all selections\n    while (this._selectionContainer.children.length) {\n      this._selectionContainer.removeChild(this._selectionContainer.children[0]);\n    }\n\n    // Selection does not exist\n    if (!start || !end) {\n      return;\n    }\n\n    // Translate from buffer position to viewport position\n    const viewportStartRow = start[1] - this._terminal.buffer.ydisp;\n    const viewportEndRow = end[1] - this._terminal.buffer.ydisp;\n    const viewportCappedStartRow = Math.max(viewportStartRow, 0);\n    const viewportCappedEndRow = Math.min(viewportEndRow, this._terminal.rows - 1);\n\n    // No need to draw the selection\n    if (viewportCappedStartRow >= this._terminal.rows || viewportCappedEndRow < 0) {\n      return;\n    }\n\n    // Create the selections\n    const documentFragment = document.createDocumentFragment();\n\n    if (columnSelectMode) {\n      documentFragment.appendChild(\n        this._createSelectionElement(viewportCappedStartRow, start[0], end[0], viewportCappedEndRow - viewportCappedStartRow + 1)\n      );\n    } else {\n      // Draw first row\n      const startCol = viewportStartRow === viewportCappedStartRow ? start[0] : 0;\n      const endCol = viewportCappedStartRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow, startCol, endCol));\n      // Draw middle rows\n      const middleRowsCount = viewportCappedEndRow - viewportCappedStartRow - 1;\n      documentFragment.appendChild(this._createSelectionElement(viewportCappedStartRow + 1, 0, this._terminal.cols, middleRowsCount));\n      // Draw final row\n      if (viewportCappedStartRow !== viewportCappedEndRow) {\n        // Only draw viewportEndRow if it's not the same as viewporttartRow\n        const endCol = viewportEndRow === viewportCappedEndRow ? end[0] : this._terminal.cols;\n        documentFragment.appendChild(this._createSelectionElement(viewportCappedEndRow, 0, endCol));\n      }\n    }\n    this._selectionContainer.appendChild(documentFragment);\n  }\n\n  /**\n   * Creates a selection element at the specified position.\n   * @param row The row of the selection.\n   * @param colStart The start column.\n   * @param colEnd The end columns.\n   */\n  private _createSelectionElement(row: number, colStart: number, colEnd: number, rowCount: number = 1): HTMLElement {\n    const element = document.createElement('div');\n    element.style.height = `${rowCount * this.dimensions.actualCellHeight}px`;\n    element.style.top = `${row * this.dimensions.actualCellHeight}px`;\n    element.style.left = `${colStart * this.dimensions.actualCellWidth}px`;\n    element.style.width = `${this.dimensions.actualCellWidth * (colEnd - colStart)}px`;\n    return element;\n  }\n\n  public onCursorMove(): void {\n    // No-op, the cursor is drawn when rows are drawn\n  }\n\n  public onOptionsChanged(): void {\n    // Force a refresh\n    this._updateDimensions();\n    this._injectCss();\n    this._terminal.refresh(0, this._terminal.rows - 1);\n  }\n\n  public clear(): void {\n    this._rowElements.forEach(e => e.innerHTML = '');\n  }\n\n  public renderRows(start: number, end: number): void {\n    const terminal = this._terminal;\n\n    const cursorAbsoluteY = terminal.buffer.ybase + terminal.buffer.y;\n    const cursorX = this._terminal.buffer.x;\n    const cursorBlink = this._terminal.options.cursorBlink;\n\n    for (let y = start; y <= end; y++) {\n      const rowElement = this._rowElements[y];\n      rowElement.innerHTML = '';\n\n      const row = y + terminal.buffer.ydisp;\n      const lineData = terminal.buffer.lines.get(row);\n      const cursorStyle = terminal.options.cursorStyle;\n      rowElement.appendChild(this._rowFactory.createRow(lineData, row === cursorAbsoluteY, cursorStyle, cursorX, cursorBlink, this.dimensions.actualCellWidth, terminal.cols));\n    }\n  }\n\n  private get _terminalSelector(): string {\n    return `.${TERMINAL_CLASS_PREFIX}${this._terminalClass}`;\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number { return -1; }\n  public deregisterCharacterJoiner(joinerId: number): boolean { return false; }\n\n  private _onLinkHover(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, true);\n  }\n\n  private _onLinkLeave(e: ILinkifierEvent): void {\n    this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, false);\n  }\n\n  private _setCellUnderline(x: number, x2: number, y: number, y2: number, cols: number, enabled: boolean): void {\n    while (x !== x2 || y !== y2) {\n      const row = this._rowElements[y];\n      if (!row) {\n        return;\n      }\n      const span = <HTMLElement>row.children[x];\n      if (span) {\n        span.style.textDecoration = enabled ? 'underline' : 'none';\n      }\n      if (++x >= cols) {\n        x = 0;\n        y++;\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferLine } from 'common/Types';\nimport { INVERTED_DEFAULT_COLOR } from 'browser/renderer/atlas/Constants';\nimport { AttributeData } from 'common/buffer/AttributeData';\nimport { NULL_CELL_CODE, WHITESPACE_CELL_CHAR } from 'common/buffer/Constants';\nimport { CellData } from 'common/buffer/CellData';\nimport { IOptionsService } from 'common/services/Services';\n\nexport const BOLD_CLASS = 'xterm-bold';\nexport const DIM_CLASS = 'xterm-dim';\nexport const ITALIC_CLASS = 'xterm-italic';\nexport const UNDERLINE_CLASS = 'xterm-underline';\nexport const CURSOR_CLASS = 'xterm-cursor';\nexport const CURSOR_BLINK_CLASS = 'xterm-cursor-blink';\nexport const CURSOR_STYLE_BLOCK_CLASS = 'xterm-cursor-block';\nexport const CURSOR_STYLE_BAR_CLASS = 'xterm-cursor-bar';\nexport const CURSOR_STYLE_UNDERLINE_CLASS = 'xterm-cursor-underline';\n\nexport class DomRendererRowFactory {\n  private _workCell: CellData = new CellData();\n\n  constructor(\n    private _document: Document,\n    private _optionsService: IOptionsService\n  ) {\n  }\n\n  public createRow(lineData: IBufferLine, isCursorRow: boolean, cursorStyle: string | undefined, cursorX: number, cursorBlink: boolean, cellWidth: number, cols: number): DocumentFragment {\n    const fragment = this._document.createDocumentFragment();\n\n    // Find the line length first, this prevents the need to output a bunch of\n    // empty cells at the end. This cannot easily be integrated into the main\n    // loop below because of the colCount feature (which can be removed after we\n    // properly support reflow and disallow data to go beyond the right-side of\n    // the viewport).\n    let lineLength = 0;\n    for (let x = Math.min(lineData.length, cols) - 1; x >= 0; x--) {\n      if (lineData.loadCell(x, this._workCell).getCode() !== NULL_CELL_CODE || (isCursorRow && x === cursorX)) {\n        lineLength = x + 1;\n        break;\n      }\n    }\n\n    for (let x = 0; x < lineLength; x++) {\n      lineData.loadCell(x, this._workCell);\n      const width = this._workCell.getWidth();\n\n      // The character to the left is a wide character, drawing is owned by the char at x-1\n      if (width === 0) {\n        continue;\n      }\n\n      const charElement = this._document.createElement('span');\n      if (width > 1) {\n        charElement.style.width = `${cellWidth * width}px`;\n      }\n\n      if (isCursorRow && x === cursorX) {\n        charElement.classList.add(CURSOR_CLASS);\n\n        if (cursorBlink) {\n          charElement.classList.add(CURSOR_BLINK_CLASS);\n        }\n\n        switch (cursorStyle) {\n          case 'bar':\n            charElement.classList.add(CURSOR_STYLE_BAR_CLASS);\n            break;\n          case 'underline':\n            charElement.classList.add(CURSOR_STYLE_UNDERLINE_CLASS);\n            break;\n          default:\n            charElement.classList.add(CURSOR_STYLE_BLOCK_CLASS);\n            break;\n        }\n      }\n\n      if (this._workCell.isBold()) {\n        charElement.classList.add(BOLD_CLASS);\n      }\n\n      if (this._workCell.isItalic()) {\n        charElement.classList.add(ITALIC_CLASS);\n      }\n\n      if (this._workCell.isDim()) {\n        charElement.classList.add(DIM_CLASS);\n      }\n\n      if (this._workCell.isUnderline()) {\n        charElement.classList.add(UNDERLINE_CLASS);\n      }\n\n      charElement.textContent = this._workCell.getChars() || WHITESPACE_CELL_CHAR;\n\n      const swapColor = this._workCell.isInverse();\n\n      // fg\n      if (this._workCell.isFgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? 'background-' : ''}color:rgb(${(AttributeData.toColorRGB(this._workCell.getFgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isFgPalette()) {\n        let fg = this._workCell.getFgColor();\n        if (this._workCell.isBold() && fg < 8 && !swapColor && this._optionsService.options.drawBoldTextInBrightColors) {\n          fg += 8;\n        }\n        charElement.classList.add(`xterm-${swapColor ? 'b' : 'f'}g-${fg}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-bg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      // bg\n      if (this._workCell.isBgRGB()) {\n        let style = charElement.getAttribute('style') || '';\n        style += `${swapColor ? '' : 'background-'}color:rgb(${(AttributeData.toColorRGB(this._workCell.getBgColor())).join(',')});`;\n        charElement.setAttribute('style', style);\n      } else if (this._workCell.isBgPalette()) {\n        charElement.classList.add(`xterm-${swapColor ? 'f' : 'b'}g-${this._workCell.getBgColor()}`);\n      } else if (swapColor) {\n        charElement.classList.add(`xterm-fg-${INVERTED_DEFAULT_COLOR}`);\n      }\n\n      fragment.appendChild(charElement);\n    }\n    return fragment;\n  }\n}\n","/**\n * Copyright (c) 2014 The xterm.js authors. All rights reserved.\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * @license MIT\n */\n\nimport { IKeyboardEvent, IKeyboardResult, KeyboardResultType } from 'common/Types';\nimport { C0 } from 'common/data/EscapeSequences';\n\n// reg + shift key mappings for digits and special chars\nconst KEYCODE_KEY_MAPPINGS: { [key: number]: [string, string]} = {\n  // digits 0-9\n  48: ['0', ')'],\n  49: ['1', '!'],\n  50: ['2', '@'],\n  51: ['3', '#'],\n  52: ['4', '$'],\n  53: ['5', '%'],\n  54: ['6', '^'],\n  55: ['7', '&'],\n  56: ['8', '*'],\n  57: ['9', '('],\n\n  // special chars\n  186: [';', ':'],\n  187: ['=', '+'],\n  188: [',', '<'],\n  189: ['-', '_'],\n  190: ['.', '>'],\n  191: ['/', '?'],\n  192: ['`', '~'],\n  219: ['[', '{'],\n  220: ['\\\\', '|'],\n  221: [']', '}'],\n  222: ['\\'', '\"']\n};\n\nexport function evaluateKeyboardEvent(\n  ev: IKeyboardEvent,\n  applicationCursorMode: boolean,\n  isMac: boolean,\n  macOptionIsMeta: boolean\n): IKeyboardResult {\n  const result: IKeyboardResult = {\n    type: KeyboardResultType.SEND_KEY,\n    // Whether to cancel event propagation (NOTE: this may not be needed since the event is\n    // canceled at the end of keyDown\n    cancel: false,\n    // The new key even to emit\n    key: undefined\n  };\n  const modifiers = (ev.shiftKey ? 1 : 0) | (ev.altKey ? 2 : 0) | (ev.ctrlKey ? 4 : 0) | (ev.metaKey ? 8 : 0);\n  switch (ev.keyCode) {\n    case 0:\n      if (ev.key === 'UIKeyInputUpArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OA';\n        } else {\n          result.key = C0.ESC + '[A';\n        }\n      }\n      else if (ev.key === 'UIKeyInputLeftArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OD';\n        } else {\n          result.key = C0.ESC + '[D';\n        }\n      }\n      else if (ev.key === 'UIKeyInputRightArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OC';\n        } else {\n          result.key = C0.ESC + '[C';\n        }\n      }\n      else if (ev.key === 'UIKeyInputDownArrow') {\n        if (applicationCursorMode) {\n          result.key = C0.ESC + 'OB';\n        } else {\n          result.key = C0.ESC + '[B';\n        }\n      }\n      break;\n    case 8:\n      // backspace\n      if (ev.shiftKey) {\n        result.key = C0.BS; // ^H\n        break;\n      } else if (ev.altKey) {\n        result.key = C0.ESC + C0.DEL; // \\e ^?\n        break;\n      }\n      result.key = C0.DEL; // ^?\n      break;\n    case 9:\n      // tab\n      if (ev.shiftKey) {\n        result.key = C0.ESC + '[Z';\n        break;\n      }\n      result.key = C0.HT;\n      result.cancel = true;\n      break;\n    case 13:\n      // return/enter\n      result.key = C0.CR;\n      result.cancel = true;\n      break;\n    case 27:\n      // escape\n      result.key = C0.ESC;\n      result.cancel = true;\n      break;\n    case 37:\n      // left-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'D';\n        // HACK: Make Alt + left-arrow behave like Ctrl + left-arrow: move one word backwards\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3D') {\n          result.key = C0.ESC + (isMac ? 'b' : '[1;5D');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OD';\n      } else {\n        result.key = C0.ESC + '[D';\n      }\n      break;\n    case 39:\n      // right-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'C';\n        // HACK: Make Alt + right-arrow behave like Ctrl + right-arrow: move one word forward\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (result.key === C0.ESC + '[1;3C') {\n          result.key = C0.ESC + (isMac ? 'f' : '[1;5C');\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OC';\n      } else {\n        result.key = C0.ESC + '[C';\n      }\n      break;\n    case 38:\n      // up-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'A';\n        // HACK: Make Alt + up-arrow behave like Ctrl + up-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3A') {\n          result.key = C0.ESC + '[1;5A';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OA';\n      } else {\n        result.key = C0.ESC + '[A';\n      }\n      break;\n    case 40:\n      // down-arrow\n      if (ev.metaKey) {\n        break;\n      }\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'B';\n        // HACK: Make Alt + down-arrow behave like Ctrl + down-arrow\n        // http://unix.stackexchange.com/a/108106\n        // macOS uses different escape sequences than linux\n        if (!isMac && result.key === C0.ESC + '[1;3B') {\n          result.key = C0.ESC + '[1;5B';\n        }\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OB';\n      } else {\n        result.key = C0.ESC + '[B';\n      }\n      break;\n    case 45:\n      // insert\n      if (!ev.shiftKey && !ev.ctrlKey) {\n        // <Ctrl> or <Shift> + <Insert> are used to\n        // copy-paste on some systems.\n        result.key = C0.ESC + '[2~';\n      }\n      break;\n    case 46:\n      // delete\n      if (modifiers) {\n        result.key = C0.ESC + '[3;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[3~';\n      }\n      break;\n    case 36:\n      // home\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'H';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OH';\n      } else {\n        result.key = C0.ESC + '[H';\n      }\n      break;\n    case 35:\n      // end\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'F';\n      } else if (applicationCursorMode) {\n        result.key = C0.ESC + 'OF';\n      } else {\n        result.key = C0.ESC + '[F';\n      }\n      break;\n    case 33:\n      // page up\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_UP;\n      } else {\n        result.key = C0.ESC + '[5~';\n      }\n      break;\n    case 34:\n      // page down\n      if (ev.shiftKey) {\n        result.type = KeyboardResultType.PAGE_DOWN;\n      } else {\n        result.key = C0.ESC + '[6~';\n      }\n      break;\n    case 112:\n      // F1-F12\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'P';\n      } else {\n        result.key = C0.ESC + 'OP';\n      }\n      break;\n    case 113:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'Q';\n      } else {\n        result.key = C0.ESC + 'OQ';\n      }\n      break;\n    case 114:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'R';\n      } else {\n        result.key = C0.ESC + 'OR';\n      }\n      break;\n    case 115:\n      if (modifiers) {\n        result.key = C0.ESC + '[1;' + (modifiers + 1) + 'S';\n      } else {\n        result.key = C0.ESC + 'OS';\n      }\n      break;\n    case 116:\n      if (modifiers) {\n        result.key = C0.ESC + '[15;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[15~';\n      }\n      break;\n    case 117:\n      if (modifiers) {\n        result.key = C0.ESC + '[17;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[17~';\n      }\n      break;\n    case 118:\n      if (modifiers) {\n        result.key = C0.ESC + '[18;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[18~';\n      }\n      break;\n    case 119:\n      if (modifiers) {\n        result.key = C0.ESC + '[19;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[19~';\n      }\n      break;\n    case 120:\n      if (modifiers) {\n        result.key = C0.ESC + '[20;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[20~';\n      }\n      break;\n    case 121:\n      if (modifiers) {\n        result.key = C0.ESC + '[21;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[21~';\n      }\n      break;\n    case 122:\n      if (modifiers) {\n        result.key = C0.ESC + '[23;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[23~';\n      }\n      break;\n    case 123:\n      if (modifiers) {\n        result.key = C0.ESC + '[24;' + (modifiers + 1) + '~';\n      } else {\n        result.key = C0.ESC + '[24~';\n      }\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey && !ev.shiftKey && !ev.altKey && !ev.metaKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          result.key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          result.key = C0.NUL;\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          result.key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          result.key = C0.DEL;\n        } else if (ev.keyCode === 219) {\n          result.key = C0.ESC;\n        } else if (ev.keyCode === 220) {\n          result.key = C0.FS;\n        } else if (ev.keyCode === 221) {\n          result.key = C0.GS;\n        }\n      } else if ((!isMac || macOptionIsMeta) && ev.altKey && !ev.metaKey) {\n        // On macOS this is a third level shift when !macOptionIsMeta. Use <Esc> instead.\n        const keyMapping = KEYCODE_KEY_MAPPINGS[ev.keyCode];\n        const key = keyMapping && keyMapping[!ev.shiftKey ? 0 : 1];\n        if (key) {\n          result.key = C0.ESC + key;\n        } else if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          const keyCode = ev.ctrlKey ? ev.keyCode - 64 : ev.keyCode + 32;\n          result.key = C0.ESC + String.fromCharCode(keyCode);\n        }\n      } else if (isMac && !ev.altKey && !ev.ctrlKey && ev.metaKey) {\n        if (ev.keyCode === 65) { // cmd + a\n          result.type = KeyboardResultType.SELECT_ALL;\n        }\n      } else if (ev.key && !ev.ctrlKey && !ev.altKey && !ev.metaKey && ev.keyCode >= 48 && ev.key.length === 1) {\n        // Include only keys that that result in a _single_ character; don't include num lock, volume up, etc.\n        result.key = ev.key;\n      } else if (ev.key && ev.ctrlKey) {\n        if (ev.key === '_') { // ^_\n          result.key = C0.US;\n        }\n      }\n      break;\n  }\n\n  return result;\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IDisposable } from 'xterm';\nimport { ITerminal } from './Types';\nimport { CHAR_DATA_CODE_INDEX, NULL_CELL_CODE, WHITESPACE_CELL_CODE } from 'common/buffer/Constants';\n\nexport function applyWindowsMode(terminal: ITerminal): IDisposable {\n  // Winpty does not support wraparound mode which means that lines will never\n  // be marked as wrapped. This causes issues for things like copying a line\n  // retaining the wrapped new line characters or if consumers are listening\n  // in on the data stream.\n  //\n  // The workaround for this is to listen to every incoming line feed and mark\n  // the line as wrapped if the last character in the previous line is not a\n  // space. This is certainly not without its problems, but generally on\n  // Windows when text reaches the end of the terminal it's likely going to be\n  // wrapped.\n  return terminal.onLineFeed(() => {\n    const line = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y - 1);\n    const lastChar = line.get(terminal.cols - 1);\n\n    const nextLine = terminal.buffer.lines.get(terminal.buffer.ybase + terminal.buffer.y);\n    nextLine.isWrapped = (lastChar[CHAR_DATA_CODE_INDEX] !== NULL_CELL_CODE && lastChar[CHAR_DATA_CODE_INDEX] !== WHITESPACE_CELL_CODE);\n  });\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IRenderer, IRenderDimensions, CharacterJoinerHandler } from 'browser/renderer/Types';\nimport { RenderDebouncer } from 'browser/RenderDebouncer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { ScreenDprMonitor } from 'browser/ScreenDprMonitor';\nimport { addDisposableDomListener } from 'browser/Lifecycle';\nimport { IColorSet } from 'browser/Types';\nimport { IOptionsService } from 'common/services/Services';\nimport { ICharSizeService, IRenderService } from 'browser/services/Services';\n\nexport class RenderService extends Disposable implements IRenderService {\n  serviceBrand: any;\n\n  private _renderDebouncer: RenderDebouncer;\n  private _screenDprMonitor: ScreenDprMonitor;\n\n  private _isPaused: boolean = false;\n  private _needsFullRefresh: boolean = false;\n  private _canvasWidth: number = 0;\n  private _canvasHeight: number = 0;\n\n  private _onDimensionsChange = new EventEmitter<IRenderDimensions>();\n  public get onDimensionsChange(): IEvent<IRenderDimensions> { return this._onDimensionsChange.event; }\n  private _onRender = new EventEmitter<{ start: number, end: number }>();\n  public get onRender(): IEvent<{ start: number, end: number }> { return this._onRender.event; }\n  private _onRefreshRequest = new EventEmitter<{ start: number, end: number }>();\n  public get onRefreshRequest(): IEvent<{ start: number, end: number }> { return this._onRefreshRequest.event; }\n\n  public get dimensions(): IRenderDimensions { return this._renderer.dimensions; }\n\n  constructor(\n    private _renderer: IRenderer,\n    private _rowCount: number,\n    readonly screenElement: HTMLElement,\n    @IOptionsService readonly optionsService: IOptionsService,\n    @ICharSizeService readonly charSizeService: ICharSizeService\n  ) {\n    super();\n    this._renderDebouncer = new RenderDebouncer((start, end) => this._renderRows(start, end));\n    this.register(this._renderDebouncer);\n\n    this._screenDprMonitor = new ScreenDprMonitor();\n    this._screenDprMonitor.setListener(() => this.onDevicePixelRatioChange());\n    this.register(this._screenDprMonitor);\n\n    this.register(optionsService.onOptionChange(() => this._renderer.onOptionsChanged()));\n    this.register(charSizeService.onCharSizeChange(() => this.onCharSizeChanged()));\n\n    // dprchange should handle this case, we need this as well for browsers that don't support the\n    // matchMedia query.\n    this.register(addDisposableDomListener(window, 'resize', () => this.onDevicePixelRatioChange()));\n\n    // Detect whether IntersectionObserver is detected and enable renderer pause\n    // and resume based on terminal visibility if so\n    if ('IntersectionObserver' in window) {\n      const observer = new IntersectionObserver(e => this._onIntersectionChange(e[e.length - 1]), { threshold: 0 });\n      observer.observe(screenElement);\n      this.register({ dispose: () => observer.disconnect() });\n    }\n  }\n\n  private _onIntersectionChange(entry: IntersectionObserverEntry): void {\n    this._isPaused = entry.intersectionRatio === 0;\n    if (!this._isPaused && this._needsFullRefresh) {\n      this.refreshRows(0, this._rowCount - 1);\n      this._needsFullRefresh = false;\n    }\n  }\n\n  public refreshRows(start: number, end: number): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n      return;\n    }\n    this._renderDebouncer.refresh(start, end, this._rowCount);\n  }\n\n  private _renderRows(start: number, end: number): void {\n    this._renderer.renderRows(start, end);\n    this._onRender.fire({ start, end });\n  }\n\n  public resize(cols: number, rows: number): void {\n    this._rowCount = rows;\n    this._fireOnCanvasResize();\n  }\n\n  public changeOptions(): void {\n    this._renderer.onOptionsChanged();\n    this._fireOnCanvasResize();\n  }\n\n  private _fireOnCanvasResize(): void {\n    // Don't fire the event if the dimensions haven't changed\n    if (this._renderer.dimensions.canvasWidth === this._canvasWidth && this._renderer.dimensions.canvasHeight === this._canvasHeight) {\n      return;\n    }\n    this._onDimensionsChange.fire(this._renderer.dimensions);\n  }\n\n  public dispose(): void {\n    this._renderer.dispose();\n  }\n\n  public setRenderer(renderer: IRenderer): void {\n    // TODO: RenderService should be the only one to dispose the renderer\n    this._renderer.dispose();\n    this._renderer = renderer;\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  private _fullRefresh(): void {\n    if (this._isPaused) {\n      this._needsFullRefresh = true;\n    } else {\n      this.refreshRows(0, this._rowCount - 1);\n    }\n  }\n\n  public setColors(colors: IColorSet): void {\n    this._renderer.setColors(colors);\n    this._fullRefresh();\n  }\n\n  public onDevicePixelRatioChange(): void {\n    this._renderer.onDevicePixelRatioChange();\n    this.refreshRows(0, this._rowCount - 1);\n  }\n\n  public onResize(cols: number, rows: number): void {\n    this._renderer.onResize(cols, rows);\n    this._fullRefresh();\n  }\n\n  // TODO: Is this useful when we have onResize?\n  public onCharSizeChanged(): void {\n    this._renderer.onCharSizeChanged();\n  }\n\n  public onBlur(): void {\n    this._renderer.onBlur();\n  }\n\n  public onFocus(): void {\n    this._renderer.onFocus();\n  }\n\n  public onSelectionChanged(start: [number, number], end: [number, number], columnSelectMode: boolean): void {\n    this._renderer.onSelectionChanged(start, end, columnSelectMode);\n  }\n\n  public onCursorMove(): void {\n    this._renderer.onCursorMove();\n  }\n\n  public clear(): void {\n    this._renderer.clear();\n  }\n\n  public registerCharacterJoiner(handler: CharacterJoinerHandler): number {\n    return this._renderer.registerCharacterJoiner(handler);\n  }\n\n  public deregisterCharacterJoiner(joinerId: number): boolean {\n    return this._renderer.deregisterCharacterJoiner(joinerId);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService, ITerminalOptions, IPartialTerminalOptions } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { isMac } from 'common/Platform';\nimport { clone } from 'common/Clone';\n\n// Source: https://freesound.org/people/altemark/sounds/45759/\n// This sound is released under the Creative Commons Attribution 3.0 Unported\n// (CC BY 3.0) license. It was created by 'altemark'. No modifications have been\n// made, apart from the conversion to base64.\nexport const DEFAULT_BELL_SOUND = 'data:audio/mp3;base64,SUQzBAAAAAAAI1RTU0UAAAAPAAADTGF2ZjU4LjMyLjEwNAAAAAAAAAAAAAAA//tQxAADB8AhSmxhIIEVCSiJrDCQBTcu3UrAIwUdkRgQbFAZC1CQEwTJ9mjRvBA4UOLD8nKVOWfh+UlK3z/177OXrfOdKl7pyn3Xf//WreyTRUoAWgBgkOAGbZHBgG1OF6zM82DWbZaUmMBptgQhGjsyYqc9ae9XFz280948NMBWInljyzsNRFLPWdnZGWrddDsjK1unuSrVN9jJsK8KuQtQCtMBjCEtImISdNKJOopIpBFpNSMbIHCSRpRR5iakjTiyzLhchUUBwCgyKiweBv/7UsQbg8isVNoMPMjAAAA0gAAABEVFGmgqK////9bP/6XCykxBTUUzLjEwMKqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq';\n\n// TODO: Freeze?\nexport const DEFAULT_OPTIONS: ITerminalOptions = Object.freeze({\n  cols: 80,\n  rows: 24,\n  cursorBlink: false,\n  cursorStyle: 'block',\n  bellSound:  DEFAULT_BELL_SOUND,\n  bellStyle: 'none',\n  drawBoldTextInBrightColors: true,\n  fastScrollModifier: 'alt',\n  fastScrollSensitivity: 5,\n  fontFamily: 'courier-new, courier, monospace',\n  fontSize: 15,\n  fontWeight: 'normal',\n  fontWeightBold: 'bold',\n  lineHeight: 1.0,\n  letterSpacing: 0,\n  logLevel: 'info',\n  scrollback: 1000,\n  scrollSensitivity: 1,\n  screenReaderMode: false,\n  macOptionIsMeta: false,\n  macOptionClickForcesSelection: false,\n  disableStdin: false,\n  allowTransparency: false,\n  tabStopWidth: 8,\n  theme: {},\n  rightClickSelectsWord: isMac,\n  rendererType: 'canvas',\n  windowsMode: false,\n\n  convertEol: false,\n  termName: 'xterm',\n  screenKeys: false,\n  cancelEvents: false,\n  useFlowControl: false,\n  wordSeparator: ' ()[]{}\\',:;\"'\n});\n\n/**\n * The set of options that only have an effect when set in the Terminal constructor.\n */\nconst CONSTRUCTOR_ONLY_OPTIONS = ['cols', 'rows'];\n\nexport class OptionsService implements IOptionsService {\n  serviceBrand: any;\n\n  public options: ITerminalOptions;\n\n  private _onOptionChange = new EventEmitter<string>();\n  public get onOptionChange(): IEvent<string> { return this._onOptionChange.event; }\n\n  constructor(options: IPartialTerminalOptions) {\n    this.options = clone(DEFAULT_OPTIONS);\n    Object.keys(options).forEach(k => {\n      if (k in this.options) {\n        const newValue = options[k as keyof IPartialTerminalOptions] as any;\n        this.options[k] = newValue;\n      }\n    });\n  }\n\n  public setOption(key: string, value: any): void {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error('No option with key \"' + key + '\"');\n    }\n    if (CONSTRUCTOR_ONLY_OPTIONS.indexOf(key) !== -1) {\n      throw new Error(`Option \"${key}\" can only be set in the constructor`);\n    }\n    if (this.options[key] === value) {\n      return;\n    }\n\n    value = this._sanitizeAndValidateOption(key, value);\n\n    // Don't fire an option change event if they didn't change\n    if (this.options[key] === value) {\n      return;\n    }\n\n    this.options[key] = value;\n    this._onOptionChange.fire(key);\n  }\n\n  private _sanitizeAndValidateOption(key: string, value: any): any {\n    switch (key) {\n      case 'bellStyle':\n      case 'cursorStyle':\n      case 'fontWeight':\n      case 'fontWeightBold':\n      case 'rendererType':\n      case 'wordSeparator':\n        if (!value) {\n          value = DEFAULT_OPTIONS[key];\n        }\n        break;\n      case 'lineHeight':\n      case 'tabStopWidth':\n        if (value < 1) {\n          throw new Error(`${key} cannot be less than 1, value: ${value}`);\n        }\n        break;\n      case 'scrollback':\n        value = Math.min(value, 4294967295);\n        if (value < 0) {\n          throw new Error(`${key} cannot be less than 0, value: ${value}`);\n        }\n        break;\n      case 'fastScrollSensitivity':\n      case 'scrollSensitivity':\n        if (value <= 0) {\n          throw new Error(`${key} cannot be less than or equal to 0, value: ${value}`);\n        }\n        break;\n    }\n    return value;\n  }\n\n  public getOption(key: string): any {\n    if (!(key in DEFAULT_OPTIONS)) {\n      throw new Error(`No option with key \"${key}\"`);\n    }\n    return this.options[key];\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IOptionsService } from 'common/services/Services';\nimport { IEvent, EventEmitter } from 'common/EventEmitter';\nimport { ICharSizeService } from 'browser/services/Services';\n\nexport class CharSizeService implements ICharSizeService {\n  serviceBrand: any;\n\n  public width: number = 0;\n  public height: number = 0;\n  private _measureStrategy: IMeasureStrategy;\n\n  public get hasValidSize(): boolean { return this.width > 0 && this.height > 0; }\n\n  private _onCharSizeChange = new EventEmitter<void>();\n  public get onCharSizeChange(): IEvent<void> { return this._onCharSizeChange.event; }\n\n  constructor(\n    readonly document: Document,\n    readonly parentElement: HTMLElement,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._measureStrategy = new DomMeasureStrategy(document, parentElement, this._optionsService);\n  }\n\n  public measure(): void {\n    const result = this._measureStrategy.measure();\n    if (result.width !== this.width || result.height !== this.height) {\n      this.width = result.width;\n      this.height = result.height;\n      this._onCharSizeChange.fire();\n    }\n  }\n}\n\ninterface IMeasureStrategy {\n  measure(): IReadonlyMeasureResult;\n}\n\ninterface IReadonlyMeasureResult {\n  readonly width: number;\n  readonly height: number;\n}\n\ninterface IMeasureResult {\n  width: number;\n  height: number;\n}\n\n// TODO: For supporting browsers we should also provide a CanvasCharDimensionsProvider that uses ctx.measureText\nclass DomMeasureStrategy implements IMeasureStrategy {\n  private _result: IMeasureResult = { width: 0, height: 0 };\n  private _measureElement: HTMLElement;\n\n  constructor(\n    private _document: Document,\n    private _parentElement: HTMLElement,\n    private _optionsService: IOptionsService\n  ) {\n    this._measureElement = this._document.createElement('span');\n    this._measureElement.classList.add('xterm-char-measure-element');\n    this._measureElement.textContent = 'W';\n    this._measureElement.setAttribute('aria-hidden', 'true');\n    this._parentElement.appendChild(this._measureElement);\n  }\n\n  public measure(): IReadonlyMeasureResult {\n    this._measureElement.style.fontFamily = this._optionsService.options.fontFamily;\n    this._measureElement.style.fontSize = `${this._optionsService.options.fontSize}px`;\n\n    // Note that this triggers a synchronous layout\n    const geometry = this._measureElement.getBoundingClientRect();\n\n    // If values are 0 then the element is likely currently display:none, in which case we should\n    // retain the previous value.\n    if (geometry.width !== 0 && geometry.height !== 0) {\n      this._result.width = geometry.width;\n      this._result.height = Math.ceil(geometry.height);\n    }\n\n    return this._result;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IOptionsService } from 'common/services/Services';\nimport { BufferSet } from 'common/buffer/BufferSet';\nimport { IBufferSet, IBuffer } from 'common/buffer/Types';\n\nexport const MINIMUM_COLS = 2; // Less than 2 can mess with wide chars\nexport const MINIMUM_ROWS = 1;\n\nexport class BufferService implements IBufferService {\n  serviceBrand: any;\n\n  public cols: number;\n  public rows: number;\n  public buffers: IBufferSet;\n\n  public get buffer(): IBuffer { return this.buffers.active; }\n\n  constructor(\n    @IOptionsService private _optionsService: IOptionsService\n  ) {\n    this.cols = Math.max(_optionsService.options.cols, MINIMUM_COLS);\n    this.rows = Math.max(_optionsService.options.rows, MINIMUM_ROWS);\n    this.buffers = new BufferSet(_optionsService, this);\n  }\n\n  public resize(cols: number, rows: number): void {\n    this.cols = cols;\n    this.rows = rows;\n  }\n\n  public reset(): void {\n    this.buffers = new BufferSet(this._optionsService, this);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBuffer, IBufferSet } from 'common/buffer/Types';\nimport { IAttributeData } from 'common/Types';\nimport { Buffer } from 'common/buffer/Buffer';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\n\n/**\n * The BufferSet represents the set of two buffers used by xterm terminals (normal and alt) and\n * provides also utilities for working with them.\n */\nexport class BufferSet implements IBufferSet {\n  private _normal: Buffer;\n  private _alt: Buffer;\n  private _activeBuffer: Buffer;\n\n\n  private _onBufferActivate = new EventEmitter<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}>();\n  public get onBufferActivate(): IEvent<{activeBuffer: IBuffer, inactiveBuffer: IBuffer}> { return this._onBufferActivate.event; }\n\n  /**\n   * Create a new BufferSet for the given terminal.\n   * @param _terminal - The terminal the BufferSet will belong to\n   */\n  constructor(\n    readonly optionsService: IOptionsService,\n    readonly bufferService: IBufferService\n  ) {\n    this._normal = new Buffer(true, optionsService, bufferService);\n    this._normal.fillViewportRows();\n\n    // The alt buffer should never have scrollback.\n    // See http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#h2-The-Alternate-Screen-Buffer\n    this._alt = new Buffer(false, optionsService, bufferService);\n    this._activeBuffer = this._normal;\n\n    this.setupTabStops();\n  }\n\n  /**\n   * Returns the alt Buffer of the BufferSet\n   */\n  public get alt(): Buffer {\n    return this._alt;\n  }\n\n  /**\n   * Returns the normal Buffer of the BufferSet\n   */\n  public get active(): Buffer {\n    return this._activeBuffer;\n  }\n\n  /**\n   * Returns the currently active Buffer of the BufferSet\n   */\n  public get normal(): Buffer {\n    return this._normal;\n  }\n\n  /**\n   * Sets the normal Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateNormalBuffer(): void {\n    if (this._activeBuffer === this._normal) {\n      return;\n    }\n    this._normal.x = this._alt.x;\n    this._normal.y = this._alt.y;\n    // The alt buffer should always be cleared when we switch to the normal\n    // buffer. This frees up memory since the alt buffer should always be new\n    // when activated.\n    this._alt.clear();\n    this._activeBuffer = this._normal;\n    this._onBufferActivate.fire({\n      activeBuffer: this._normal,\n      inactiveBuffer: this._alt\n    });\n  }\n\n  /**\n   * Sets the alt Buffer of the BufferSet as its currently active Buffer\n   */\n  public activateAltBuffer(fillAttr?: IAttributeData): void {\n    if (this._activeBuffer === this._alt) {\n      return;\n    }\n    // Since the alt buffer is always cleared when the normal buffer is\n    // activated, we want to fill it when switching to it.\n    this._alt.fillViewportRows(fillAttr);\n    this._alt.x = this._normal.x;\n    this._alt.y = this._normal.y;\n    this._activeBuffer = this._alt;\n    this._onBufferActivate.fire({\n      activeBuffer: this._alt,\n      inactiveBuffer: this._normal\n    });\n  }\n\n  /**\n   * Resizes both normal and alt buffers, adjusting their data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    this._normal.resize(newCols, newRows);\n    this._alt.resize(newCols, newRows);\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    this._normal.setupTabStops(i);\n    this._alt.setupTabStops(i);\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { CircularList, IInsertEvent } from 'common/CircularList';\nimport { IBuffer, BufferIndex, IBufferStringIterator, IBufferStringIteratorResult } from 'common/buffer/Types';\nimport { IBufferLine, ICellData, IAttributeData, ICharset } from 'common/Types';\nimport { BufferLine, DEFAULT_ATTR_DATA } from 'common/buffer/BufferLine';\nimport { CellData } from 'common/buffer/CellData';\nimport { NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE, CHAR_DATA_WIDTH_INDEX, CHAR_DATA_CHAR_INDEX } from 'common/buffer/Constants';\nimport { reflowLargerApplyNewLayout, reflowLargerCreateNewLayout, reflowLargerGetLinesToRemove, reflowSmallerGetNewLineLengths, getWrappedLineTrimmedLength } from 'common/buffer/BufferReflow';\nimport { Marker } from 'common/buffer/Marker';\nimport { IOptionsService, IBufferService } from 'common/services/Services';\nimport { DEFAULT_CHARSET } from 'common/data/Charsets';\n\nexport const MAX_BUFFER_SIZE = 4294967295; // 2^32 - 1\n\n/**\n * This class represents a terminal buffer (an internal state of the terminal), where the\n * following information is stored (in high-level):\n *   - text content of this particular buffer\n *   - cursor position\n *   - scroll position\n */\nexport class Buffer implements IBuffer {\n  public lines: CircularList<IBufferLine>;\n  public ydisp: number = 0;\n  public ybase: number = 0;\n  public y: number = 0;\n  public x: number = 0;\n  public scrollBottom: number;\n  public scrollTop: number;\n  // TODO: Type me\n  public tabs: any;\n  public savedY: number = 0;\n  public savedX: number = 0;\n  public savedCurAttrData = DEFAULT_ATTR_DATA.clone();\n  public savedCharset: ICharset | null = DEFAULT_CHARSET;\n  public markers: Marker[] = [];\n  private _nullCell: ICellData = CellData.fromCharData([0, NULL_CELL_CHAR, NULL_CELL_WIDTH, NULL_CELL_CODE]);\n  private _whitespaceCell: ICellData = CellData.fromCharData([0, WHITESPACE_CELL_CHAR, WHITESPACE_CELL_WIDTH, WHITESPACE_CELL_CODE]);\n  private _cols: number;\n  private _rows: number;\n\n  constructor(\n    private _hasScrollback: boolean,\n    private _optionsService: IOptionsService,\n    private _bufferService: IBufferService\n  ) {\n    this._cols = this._bufferService.cols;\n    this._rows = this._bufferService.rows;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  public getNullCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._nullCell.fg = attr.fg;\n      this._nullCell.bg = attr.bg;\n    } else {\n      this._nullCell.fg = 0;\n      this._nullCell.bg = 0;\n    }\n    return this._nullCell;\n  }\n\n  public getWhitespaceCell(attr?: IAttributeData): ICellData {\n    if (attr) {\n      this._whitespaceCell.fg = attr.fg;\n      this._whitespaceCell.bg = attr.bg;\n    } else {\n      this._whitespaceCell.fg = 0;\n      this._whitespaceCell.bg = 0;\n    }\n    return this._whitespaceCell;\n  }\n\n  public getBlankLine(attr: IAttributeData, isWrapped?: boolean): IBufferLine {\n    return new BufferLine(this._bufferService.cols, this.getNullCell(attr), isWrapped);\n  }\n\n  public get hasScrollback(): boolean {\n    return this._hasScrollback && this.lines.maxLength > this._rows;\n  }\n\n  public get isCursorInViewport(): boolean {\n    const absoluteY = this.ybase + this.y;\n    const relativeY = absoluteY - this.ydisp;\n    return (relativeY >= 0 && relativeY < this._rows);\n  }\n\n  /**\n   * Gets the correct buffer length based on the rows provided, the terminal's\n   * scrollback and whether this buffer is flagged to have scrollback or not.\n   * @param rows The terminal rows to use in the calculation.\n   */\n  private _getCorrectBufferLength(rows: number): number {\n    if (!this._hasScrollback) {\n      return rows;\n    }\n\n    const correctBufferLength = rows + this._optionsService.options.scrollback;\n\n    return correctBufferLength > MAX_BUFFER_SIZE ? MAX_BUFFER_SIZE : correctBufferLength;\n  }\n\n  /**\n   * Fills the buffer's viewport with blank lines.\n   */\n  public fillViewportRows(fillAttr?: IAttributeData): void {\n    if (this.lines.length === 0) {\n      if (fillAttr === undefined) {\n        fillAttr = DEFAULT_ATTR_DATA;\n      }\n      let i = this._rows;\n      while (i--) {\n        this.lines.push(this.getBlankLine(fillAttr));\n      }\n    }\n  }\n\n  /**\n   * Clears the buffer to it's initial state, discarding all previous data.\n   */\n  public clear(): void {\n    this.ydisp = 0;\n    this.ybase = 0;\n    this.y = 0;\n    this.x = 0;\n    this.lines = new CircularList<IBufferLine>(this._getCorrectBufferLength(this._rows));\n    this.scrollTop = 0;\n    this.scrollBottom = this._rows - 1;\n    this.setupTabStops();\n  }\n\n  /**\n   * Resizes the buffer, adjusting its data accordingly.\n   * @param newCols The new number of columns.\n   * @param newRows The new number of rows.\n   */\n  public resize(newCols: number, newRows: number): void {\n    // store reference to null cell with default attrs\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n\n    // Increase max length if needed before adjustments to allow space to fill\n    // as required.\n    const newMaxLength = this._getCorrectBufferLength(newRows);\n    if (newMaxLength > this.lines.maxLength) {\n      this.lines.maxLength = newMaxLength;\n    }\n\n    // The following adjustments should only happen if the buffer has been\n    // initialized/filled.\n    if (this.lines.length > 0) {\n      // Deal with columns increasing (reducing needs to happen after reflow)\n      if (this._cols < newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n\n      // Resize rows in both directions as needed\n      let addToY = 0;\n      if (this._rows < newRows) {\n        for (let y = this._rows; y < newRows; y++) {\n          if (this.lines.length < newRows + this.ybase) {\n            if (this._optionsService.options.windowsMode) {\n              // Just add the new missing rows on Windows as conpty reprints the screen with it's\n              // view of the world. Once a line enters scrollback for conpty it remains there\n              this.lines.push(new BufferLine(newCols, nullCell));\n            } else {\n              if (this.ybase > 0 && this.lines.length <= this.ybase + this.y + addToY + 1) {\n                // There is room above the buffer and there are no empty elements below the line,\n                // scroll up\n                this.ybase--;\n                addToY++;\n                if (this.ydisp > 0) {\n                  // Viewport is at the top of the buffer, must increase downwards\n                  this.ydisp--;\n                }\n              } else {\n                // Add a blank line if there is no buffer left at the top to scroll to, or if there\n                // are blank lines after the cursor\n                this.lines.push(new BufferLine(newCols, nullCell));\n              }\n            }\n          }\n        }\n      } else { // (this._rows >= newRows)\n        for (let y = this._rows; y > newRows; y--) {\n          if (this.lines.length > newRows + this.ybase) {\n            if (this.lines.length > this.ybase + this.y + 1) {\n              // The line is a blank line below the cursor, remove it\n              this.lines.pop();\n            } else {\n              // The line is the cursor, scroll down\n              this.ybase++;\n              this.ydisp++;\n            }\n          }\n        }\n      }\n\n      // Reduce max length if needed after adjustments, this is done after as it\n      // would otherwise cut data from the bottom of the buffer.\n      if (newMaxLength < this.lines.maxLength) {\n        // Trim from the top of the buffer and adjust ybase and ydisp.\n        const amountToTrim = this.lines.length - newMaxLength;\n        if (amountToTrim > 0) {\n          this.lines.trimStart(amountToTrim);\n          this.ybase = Math.max(this.ybase - amountToTrim, 0);\n          this.ydisp = Math.max(this.ydisp - amountToTrim, 0);\n          this.savedY = Math.max(this.savedY - amountToTrim, 0);\n        }\n        this.lines.maxLength = newMaxLength;\n      }\n\n      // Make sure that the cursor stays on screen\n      this.x = Math.min(this.x, newCols - 1);\n      this.y = Math.min(this.y, newRows - 1);\n      if (addToY) {\n        this.y += addToY;\n      }\n      this.savedX = Math.min(this.savedX, newCols - 1);\n\n      this.scrollTop = 0;\n    }\n\n    this.scrollBottom = newRows - 1;\n\n    if (this._isReflowEnabled) {\n      this._reflow(newCols, newRows);\n\n      // Trim the end of the line off if cols shrunk\n      if (this._cols > newCols) {\n        for (let i = 0; i < this.lines.length; i++) {\n          this.lines.get(i)!.resize(newCols, nullCell);\n        }\n      }\n    }\n\n    this._cols = newCols;\n    this._rows = newRows;\n  }\n\n  private get _isReflowEnabled(): boolean {\n    return this._hasScrollback && !this._optionsService.options.windowsMode;\n  }\n\n  private _reflow(newCols: number, newRows: number): void {\n    if (this._cols === newCols) {\n      return;\n    }\n\n    // Iterate through rows, ignore the last one as it cannot be wrapped\n    if (newCols > this._cols) {\n      this._reflowLarger(newCols, newRows);\n    } else {\n      this._reflowSmaller(newCols, newRows);\n    }\n  }\n\n  private _reflowLarger(newCols: number, newRows: number): void {\n    const toRemove: number[] = reflowLargerGetLinesToRemove(this.lines, this._cols, newCols, this.ybase + this.y, this.getNullCell(DEFAULT_ATTR_DATA));\n    if (toRemove.length > 0) {\n      const newLayoutResult = reflowLargerCreateNewLayout(this.lines, toRemove);\n      reflowLargerApplyNewLayout(this.lines, newLayoutResult.layout);\n      this._reflowLargerAdjustViewport(newCols, newRows, newLayoutResult.countRemoved);\n    }\n  }\n\n  private _reflowLargerAdjustViewport(newCols: number, newRows: number, countRemoved: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Adjust viewport based on number of items removed\n    let viewportAdjustments = countRemoved;\n    while (viewportAdjustments-- > 0) {\n      if (this.ybase === 0) {\n        if (this.y > 0) {\n          this.y--;\n        }\n        if (this.lines.length < newRows) {\n          // Add an extra row at the bottom of the viewport\n          this.lines.push(new BufferLine(newCols, nullCell));\n        }\n      } else {\n        if (this.ydisp === this.ybase) {\n          this.ydisp--;\n        }\n        this.ybase--;\n      }\n    }\n    this.savedY = Math.max(this.savedY - countRemoved, 0);\n  }\n\n  private _reflowSmaller(newCols: number, newRows: number): void {\n    const nullCell = this.getNullCell(DEFAULT_ATTR_DATA);\n    // Gather all BufferLines that need to be inserted into the Buffer here so that they can be\n    // batched up and only committed once\n    const toInsert = [];\n    let countToInsert = 0;\n    // Go backwards as many lines may be trimmed and this will avoid considering them\n    for (let y = this.lines.length - 1; y >= 0; y--) {\n      // Check whether this line is a problem\n      let nextLine = this.lines.get(y) as BufferLine;\n      if (!nextLine || !nextLine.isWrapped && nextLine.getTrimmedLength() <= newCols) {\n        continue;\n      }\n\n      // Gather wrapped lines and adjust y to be the starting line\n      const wrappedLines: BufferLine[] = [nextLine];\n      while (nextLine.isWrapped && y > 0) {\n        nextLine = this.lines.get(--y) as BufferLine;\n        wrappedLines.unshift(nextLine);\n      }\n\n      // If these lines contain the cursor don't touch them, the program will handle fixing up\n      // wrapped lines with the cursor\n      const absoluteY = this.ybase + this.y;\n      if (absoluteY >= y && absoluteY < y + wrappedLines.length) {\n        continue;\n      }\n\n      const lastLineLength = wrappedLines[wrappedLines.length - 1].getTrimmedLength();\n      const destLineLengths = reflowSmallerGetNewLineLengths(wrappedLines, this._cols, newCols);\n      const linesToAdd = destLineLengths.length - wrappedLines.length;\n      let trimmedLines: number;\n      if (this.ybase === 0 && this.y !== this.lines.length - 1) {\n        // If the top section of the buffer is not yet filled\n        trimmedLines = Math.max(0, this.y - this.lines.maxLength + linesToAdd);\n      } else {\n        trimmedLines = Math.max(0, this.lines.length - this.lines.maxLength + linesToAdd);\n      }\n\n      // Add the new lines\n      const newLines: BufferLine[] = [];\n      for (let i = 0; i < linesToAdd; i++) {\n        const newLine = this.getBlankLine(DEFAULT_ATTR_DATA, true) as BufferLine;\n        newLines.push(newLine);\n      }\n      if (newLines.length > 0) {\n        toInsert.push({\n          // countToInsert here gets the actual index, taking into account other inserted items.\n          // using this we can iterate through the list forwards\n          start: y + wrappedLines.length + countToInsert,\n          newLines\n        });\n        countToInsert += newLines.length;\n      }\n      wrappedLines.push(...newLines);\n\n      // Copy buffer data to new locations, this needs to happen backwards to do in-place\n      let destLineIndex = destLineLengths.length - 1; // Math.floor(cellsNeeded / newCols);\n      let destCol = destLineLengths[destLineIndex]; // cellsNeeded % newCols;\n      if (destCol === 0) {\n        destLineIndex--;\n        destCol = destLineLengths[destLineIndex];\n      }\n      let srcLineIndex = wrappedLines.length - linesToAdd - 1;\n      let srcCol = lastLineLength;\n      while (srcLineIndex >= 0) {\n        const cellsToCopy = Math.min(srcCol, destCol);\n        wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol - cellsToCopy, destCol - cellsToCopy, cellsToCopy, true);\n        destCol -= cellsToCopy;\n        if (destCol === 0) {\n          destLineIndex--;\n          destCol = destLineLengths[destLineIndex];\n        }\n        srcCol -= cellsToCopy;\n        if (srcCol === 0) {\n          srcLineIndex--;\n          const wrappedLinesIndex = Math.max(srcLineIndex, 0);\n          srcCol = getWrappedLineTrimmedLength(wrappedLines, wrappedLinesIndex, this._cols);\n        }\n      }\n\n      // Null out the end of the line ends if a wide character wrapped to the following line\n      for (let i = 0; i < wrappedLines.length; i++) {\n        if (destLineLengths[i] < newCols) {\n          wrappedLines[i].setCell(destLineLengths[i], nullCell);\n        }\n      }\n\n      // Adjust viewport as needed\n      let viewportAdjustments = linesToAdd - trimmedLines;\n      while (viewportAdjustments-- > 0) {\n        if (this.ybase === 0) {\n          if (this.y < newRows - 1) {\n            this.y++;\n            this.lines.pop();\n          } else {\n            this.ybase++;\n            this.ydisp++;\n          }\n        } else {\n          // Ensure ybase does not exceed its maximum value\n          if (this.ybase < Math.min(this.lines.maxLength, this.lines.length + countToInsert) - newRows) {\n            if (this.ybase === this.ydisp) {\n              this.ydisp++;\n            }\n            this.ybase++;\n          }\n        }\n      }\n      this.savedY = Math.min(this.savedY + linesToAdd, this.ybase + newRows - 1);\n    }\n\n    // Rearrange lines in the buffer if there are any insertions, this is done at the end rather\n    // than earlier so that it's a single O(n) pass through the buffer, instead of O(n^2) from many\n    // costly calls to CircularList.splice.\n    if (toInsert.length > 0) {\n      // Record buffer insert events and then play them back backwards so that the indexes are\n      // correct\n      const insertEvents: IInsertEvent[] = [];\n\n      // Record original lines so they don't get overridden when we rearrange the list\n      const originalLines: BufferLine[] = [];\n      for (let i = 0; i < this.lines.length; i++) {\n        originalLines.push(this.lines.get(i) as BufferLine);\n      }\n      const originalLinesLength = this.lines.length;\n\n      let originalLineIndex = originalLinesLength - 1;\n      let nextToInsertIndex = 0;\n      let nextToInsert = toInsert[nextToInsertIndex];\n      this.lines.length = Math.min(this.lines.maxLength, this.lines.length + countToInsert);\n      let countInsertedSoFar = 0;\n      for (let i = Math.min(this.lines.maxLength - 1, originalLinesLength + countToInsert - 1); i >= 0; i--) {\n        if (nextToInsert && nextToInsert.start > originalLineIndex + countInsertedSoFar) {\n          // Insert extra lines here, adjusting i as needed\n          for (let nextI = nextToInsert.newLines.length - 1; nextI >= 0; nextI--) {\n            this.lines.set(i--, nextToInsert.newLines[nextI]);\n          }\n          i++;\n\n          // Create insert events for later\n          insertEvents.push({\n            index: originalLineIndex + 1,\n            amount: nextToInsert.newLines.length\n          });\n\n          countInsertedSoFar += nextToInsert.newLines.length;\n          nextToInsert = toInsert[++nextToInsertIndex];\n        } else {\n          this.lines.set(i, originalLines[originalLineIndex--]);\n        }\n      }\n\n      // Update markers\n      let insertCountEmitted = 0;\n      for (let i = insertEvents.length - 1; i >= 0; i--) {\n        insertEvents[i].index += insertCountEmitted;\n        this.lines.onInsertEmitter.fire(insertEvents[i]);\n        insertCountEmitted += insertEvents[i].amount;\n      }\n      const amountToTrim = Math.max(0, originalLinesLength + countToInsert - this.lines.maxLength);\n      if (amountToTrim > 0) {\n        this.lines.onTrimEmitter.fire(amountToTrim);\n      }\n    }\n  }\n\n  // private _reflowSmallerGetLinesNeeded()\n\n  /**\n   * Translates a string index back to a BufferIndex.\n   * To get the correct buffer position the string must start at `startCol` 0\n   * (default in translateBufferLineToString).\n   * The method also works on wrapped line strings given rows were not trimmed.\n   * The method operates on the CharData string length, there are no\n   * additional content or boundary checks. Therefore the string and the buffer\n   * should not be altered in between.\n   * TODO: respect trim flag after fixing #1685\n   * @param lineIndex line index the string was retrieved from\n   * @param stringIndex index within the string\n   * @param startCol column offset the string was retrieved from\n   */\n  public stringIndexToBufferIndex(lineIndex: number, stringIndex: number, trimRight: boolean = false): BufferIndex {\n    while (stringIndex) {\n      const line = this.lines.get(lineIndex);\n      if (!line) {\n        return [-1, -1];\n      }\n      const length = (trimRight) ? line.getTrimmedLength() : line.length;\n      for (let i = 0; i < length; ++i) {\n        if (line.get(i)[CHAR_DATA_WIDTH_INDEX]) {\n          // empty cells report a string length of 0, but get replaced\n          // with a whitespace in translateToString, thus replace with 1\n          stringIndex -= line.get(i)[CHAR_DATA_CHAR_INDEX].length || 1;\n        }\n        if (stringIndex < 0) {\n          return [lineIndex, i];\n        }\n      }\n      lineIndex++;\n    }\n    return [lineIndex, 0];\n  }\n\n  /**\n   * Translates a buffer line to a string, with optional start and end columns.\n   * Wide characters will count as two columns in the resulting string. This\n   * function is useful for getting the actual text underneath the raw selection\n   * position.\n   * @param line The line being translated.\n   * @param trimRight Whether to trim whitespace to the right.\n   * @param startCol The column to start at.\n   * @param endCol The column to end at.\n   */\n  public translateBufferLineToString(lineIndex: number, trimRight: boolean, startCol: number = 0, endCol?: number): string {\n    const line = this.lines.get(lineIndex);\n    if (!line) {\n      return '';\n    }\n    return line.translateToString(trimRight, startCol, endCol);\n  }\n\n  public getWrappedRangeForLine(y: number): { first: number, last: number } {\n    let first = y;\n    let last = y;\n    // Scan upwards for wrapped lines\n    while (first > 0 && this.lines.get(first)!.isWrapped) {\n      first--;\n    }\n    // Scan downwards for wrapped lines\n    while (last + 1 < this.lines.length && this.lines.get(last + 1)!.isWrapped) {\n      last++;\n    }\n    return { first, last };\n  }\n\n  /**\n   * Setup the tab stops.\n   * @param i The index to start setting up tab stops from.\n   */\n  public setupTabStops(i?: number): void {\n    if (i !== null && i !== undefined) {\n      if (!this.tabs[i]) {\n        i = this.prevStop(i);\n      }\n    } else {\n      this.tabs = {};\n      i = 0;\n    }\n\n    for (; i < this._cols; i += this._optionsService.options.tabStopWidth) {\n      this.tabs[i] = true;\n    }\n  }\n\n  /**\n   * Move the cursor to the previous tab stop from the given position (default is current).\n   * @param x The position to move the cursor to the previous tab stop.\n   */\n  public prevStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[--x] && x > 0);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  /**\n   * Move the cursor one tab stop forward from the given position (default is current).\n   * @param x The position to move the cursor one tab stop forward.\n   */\n  public nextStop(x?: number): number {\n    if (x === null || x === undefined) {\n      x = this.x;\n    }\n    while (!this.tabs[++x] && x < this._cols);\n    return x >= this._cols ? this._cols - 1 : x < 0 ? 0 : x;\n  }\n\n  public addMarker(y: number): Marker {\n    const marker = new Marker(y);\n    this.markers.push(marker);\n    marker.register(this.lines.onTrim(amount => {\n      marker.line -= amount;\n      // The marker should be disposed when the line is trimmed from the buffer\n      if (marker.line < 0) {\n        marker.dispose();\n      }\n    }));\n    marker.register(this.lines.onInsert(event => {\n      if (marker.line >= event.index) {\n        marker.line += event.amount;\n      }\n    }));\n    marker.register(this.lines.onDelete(event => {\n      // Delete the marker if it's within the range\n      if (marker.line >= event.index && marker.line < event.index + event.amount) {\n        marker.dispose();\n      }\n\n      // Shift the marker if it's after the deleted range\n      if (marker.line > event.index) {\n        marker.line -= event.amount;\n      }\n    }));\n    marker.register(marker.onDispose(() => this._removeMarker(marker)));\n    return marker;\n  }\n\n  private _removeMarker(marker: Marker): void {\n    this.markers.splice(this.markers.indexOf(marker), 1);\n  }\n\n  public iterator(trimRight: boolean, startIndex?: number, endIndex?: number, startOverscan?: number, endOverscan?: number): IBufferStringIterator {\n    return new BufferStringIterator(this, trimRight, startIndex, endIndex, startOverscan, endOverscan);\n  }\n}\n\n/**\n * Iterator to get unwrapped content strings from the buffer.\n * The iterator returns at least the string data between the borders\n * `startIndex` and `endIndex` (exclusive) and will expand the lines\n * by `startOverscan` to the top and by `endOverscan` to the bottom,\n * if no new line was found in between.\n * It will never read/return string data beyond `startIndex - startOverscan`\n * or `endIndex + endOverscan`. Therefore the first and last line might be truncated.\n * It is possible to always get the full string for the first and last line as well\n * by setting the overscan values to the actual buffer length. This not recommended\n * since it might return the whole buffer within a single string in a worst case scenario.\n */\nexport class BufferStringIterator implements IBufferStringIterator {\n  private _current: number;\n\n  constructor (\n    private _buffer: IBuffer,\n    private _trimRight: boolean,\n    private _startIndex: number = 0,\n    private _endIndex: number = _buffer.lines.length,\n    private _startOverscan: number = 0,\n    private _endOverscan: number = 0\n  ) {\n    if (this._startIndex < 0) {\n      this._startIndex = 0;\n    }\n    if (this._endIndex > this._buffer.lines.length) {\n      this._endIndex = this._buffer.lines.length;\n    }\n    this._current = this._startIndex;\n  }\n\n  public hasNext(): boolean {\n    return this._current < this._endIndex;\n  }\n\n  public next(): IBufferStringIteratorResult {\n    const range = this._buffer.getWrappedRangeForLine(this._current);\n    // limit search window to overscan value at both borders\n    if (range.first < this._startIndex - this._startOverscan) {\n      range.first = this._startIndex - this._startOverscan;\n    }\n    if (range.last > this._endIndex + this._endOverscan) {\n      range.last = this._endIndex + this._endOverscan;\n    }\n    // limit to current buffer length\n    range.first = Math.max(range.first, 0);\n    range.last = Math.min(range.last, this._buffer.lines.length);\n    let result = '';\n    for (let i = range.first; i <= range.last; ++i) {\n      result += this._buffer.translateBufferLineToString(i, this._trimRight);\n    }\n    this._current = range.last + 1;\n    return {range: range, content: result};\n  }\n}\n","/**\n * Copyright (c) 2016 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICircularList } from 'common/Types';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\n\nexport interface IInsertEvent {\n  index: number;\n  amount: number;\n}\n\nexport interface IDeleteEvent {\n  index: number;\n  amount: number;\n}\n\n/**\n * Represents a circular list; a list with a maximum size that wraps around when push is called,\n * overriding values at the start of the list.\n */\nexport class CircularList<T> implements ICircularList<T> {\n  protected _array: (T | undefined)[];\n  private _startIndex: number;\n  private _length: number;\n\n  public onDeleteEmitter = new EventEmitter<IDeleteEvent>();\n  public get onDelete(): IEvent<IDeleteEvent> { return this.onDeleteEmitter.event; }\n  public onInsertEmitter = new EventEmitter<IInsertEvent>();\n  public get onInsert(): IEvent<IInsertEvent> { return this.onInsertEmitter.event; }\n  public onTrimEmitter = new EventEmitter<number>();\n  public get onTrim(): IEvent<number> { return this.onTrimEmitter.event; }\n\n  constructor(\n    private _maxLength: number\n  ) {\n    this._array = new Array<T>(this._maxLength);\n    this._startIndex = 0;\n    this._length = 0;\n  }\n\n  public get maxLength(): number {\n    return this._maxLength;\n  }\n\n  public set maxLength(newMaxLength: number) {\n    // There was no change in maxLength, return early.\n    if (this._maxLength === newMaxLength) {\n      return;\n    }\n\n    // Reconstruct array, starting at index 0. Only transfer values from the\n    // indexes 0 to length.\n    const newArray = new Array<T | undefined>(newMaxLength);\n    for (let i = 0; i < Math.min(newMaxLength, this.length); i++) {\n      newArray[i] = this._array[this._getCyclicIndex(i)];\n    }\n    this._array = newArray;\n    this._maxLength = newMaxLength;\n    this._startIndex = 0;\n  }\n\n  public get length(): number {\n    return this._length;\n  }\n\n  public set length(newLength: number) {\n    if (newLength > this._length) {\n      for (let i = this._length; i < newLength; i++) {\n        this._array[i] = undefined;\n      }\n    }\n    this._length = newLength;\n  }\n\n  /**\n   * Gets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index of the value to get.\n   * @return The value corresponding to the index.\n   */\n  public get(index: number): T | undefined {\n    return this._array[this._getCyclicIndex(index)];\n  }\n\n  /**\n   * Sets the value at an index.\n   *\n   * Note that for performance reasons there is no bounds checking here, the index reference is\n   * circular so this should always return a value and never throw.\n   * @param index The index to set.\n   * @param value The value to set.\n   */\n  public set(index: number, value: T | undefined): void {\n    this._array[this._getCyclicIndex(index)] = value;\n  }\n\n  /**\n   * Pushes a new value onto the list, wrapping around to the start of the array, overriding index 0\n   * if the maximum length is reached.\n   * @param value The value to push onto the list.\n   */\n  public push(value: T): void {\n    this._array[this._getCyclicIndex(this._length)] = value;\n    if (this._length === this._maxLength) {\n      this._startIndex = ++this._startIndex % this._maxLength;\n      this.onTrimEmitter.fire(1);\n    } else {\n      this._length++;\n    }\n  }\n\n  /**\n   * Advance ringbuffer index and return current element for recycling.\n   * Note: The buffer must be full for this method to work.\n   * @throws When the buffer is not full.\n   */\n  public recycle(): T {\n    if (this._length !== this._maxLength) {\n      throw new Error('Can only recycle when the buffer is full');\n    }\n    this._startIndex = ++this._startIndex % this._maxLength;\n    this.onTrimEmitter.fire(1);\n    return this._array[this._getCyclicIndex(this._length - 1)]!;\n  }\n\n  /**\n   * Ringbuffer is at max length.\n   */\n  public get isFull(): boolean {\n    return this._length === this._maxLength;\n  }\n\n  /**\n   * Removes and returns the last value on the list.\n   * @return The popped value.\n   */\n  public pop(): T | undefined {\n    return this._array[this._getCyclicIndex(this._length-- - 1)];\n  }\n\n  /**\n   * Deletes and/or inserts items at a particular index (in that order). Unlike\n   * Array.prototype.splice, this operation does not return the deleted items as a new array in\n   * order to save creating a new array. Note that this operation may shift all values in the list\n   * in the worst case.\n   * @param start The index to delete and/or insert.\n   * @param deleteCount The number of elements to delete.\n   * @param items The items to insert.\n   */\n  public splice(start: number, deleteCount: number, ...items: T[]): void {\n    // Delete items\n    if (deleteCount) {\n      for (let i = start; i < this._length - deleteCount; i++) {\n        this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + deleteCount)];\n      }\n      this._length -= deleteCount;\n    }\n\n    // Add items\n    for (let i = this._length - 1; i >= start; i--) {\n      this._array[this._getCyclicIndex(i + items.length)] = this._array[this._getCyclicIndex(i)];\n    }\n    for (let i = 0; i < items.length; i++) {\n      this._array[this._getCyclicIndex(start + i)] = items[i];\n    }\n\n    // Adjust length as needed\n    if (this._length + items.length > this._maxLength) {\n      const countToTrim = (this._length + items.length) - this._maxLength;\n      this._startIndex += countToTrim;\n      this._length = this._maxLength;\n      this.onTrimEmitter.fire(countToTrim);\n    } else {\n      this._length += items.length;\n    }\n  }\n\n  /**\n   * Trims a number of items from the start of the list.\n   * @param count The number of items to remove.\n   */\n  public trimStart(count: number): void {\n    if (count > this._length) {\n      count = this._length;\n    }\n    this._startIndex += count;\n    this._length -= count;\n    this.onTrimEmitter.fire(count);\n  }\n\n  public shiftElements(start: number, count: number, offset: number): void {\n    if (count <= 0) {\n      return;\n    }\n    if (start < 0 || start >= this._length) {\n      throw new Error('start argument out of range');\n    }\n    if (start + offset < 0) {\n      throw new Error('Cannot shift elements in list beyond index 0');\n    }\n\n    if (offset > 0) {\n      for (let i = count - 1; i >= 0; i--) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n      const expandListBy = (start + count + offset) - this._length;\n      if (expandListBy > 0) {\n        this._length += expandListBy;\n        while (this._length > this._maxLength) {\n          this._length--;\n          this._startIndex++;\n          this.onTrimEmitter.fire(1);\n        }\n      }\n    } else {\n      for (let i = 0; i < count; i++) {\n        this.set(start + i + offset, this.get(start + i));\n      }\n    }\n  }\n\n  /**\n   * Gets the cyclic index for the specified regular index. The cyclic index can then be used on the\n   * backing array to get the element associated with the regular index.\n   * @param index The regular index.\n   * @returns The cyclic index.\n   */\n  private _getCyclicIndex(index: number): number {\n    return (this._startIndex + index) % this._maxLength;\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { BufferLine } from 'common/buffer/BufferLine';\nimport { CircularList } from 'common/CircularList';\nimport { IBufferLine, ICellData } from 'common/Types';\n\nexport interface INewLayoutResult {\n  layout: number[];\n  countRemoved: number;\n}\n\n/**\n * Evaluates and returns indexes to be removed after a reflow larger occurs. Lines will be removed\n * when a wrapped line unwraps.\n * @param lines The buffer lines.\n * @param newCols The columns after resize.\n */\nexport function reflowLargerGetLinesToRemove(lines: CircularList<IBufferLine>, oldCols: number, newCols: number, bufferAbsoluteY: number, nullCell: ICellData): number[] {\n  // Gather all BufferLines that need to be removed from the Buffer here so that they can be\n  // batched up and only committed once\n  const toRemove: number[] = [];\n\n  for (let y = 0; y < lines.length - 1; y++) {\n    // Check if this row is wrapped\n    let i = y;\n    let nextLine = lines.get(++i) as BufferLine;\n    if (!nextLine.isWrapped) {\n      continue;\n    }\n\n    // Check how many lines it's wrapped for\n    const wrappedLines: BufferLine[] = [lines.get(y) as BufferLine];\n    while (i < lines.length && nextLine.isWrapped) {\n      wrappedLines.push(nextLine);\n      nextLine = lines.get(++i) as BufferLine;\n    }\n\n    // If these lines contain the cursor don't touch them, the program will handle fixing up wrapped\n    // lines with the cursor\n    if (bufferAbsoluteY >= y && bufferAbsoluteY < i) {\n      y += wrappedLines.length - 1;\n      continue;\n    }\n\n    // Copy buffer data to new locations\n    let destLineIndex = 0;\n    let destCol = getWrappedLineTrimmedLength(wrappedLines, destLineIndex, oldCols);\n    let srcLineIndex = 1;\n    let srcCol = 0;\n    while (srcLineIndex < wrappedLines.length) {\n      const srcTrimmedTineLength = getWrappedLineTrimmedLength(wrappedLines, srcLineIndex, oldCols);\n      const srcRemainingCells = srcTrimmedTineLength - srcCol;\n      const destRemainingCells = newCols - destCol;\n      const cellsToCopy = Math.min(srcRemainingCells, destRemainingCells);\n\n      wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[srcLineIndex], srcCol, destCol, cellsToCopy, false);\n\n      destCol += cellsToCopy;\n      if (destCol === newCols) {\n        destLineIndex++;\n        destCol = 0;\n      }\n      srcCol += cellsToCopy;\n      if (srcCol === srcTrimmedTineLength) {\n        srcLineIndex++;\n        srcCol = 0;\n      }\n\n      // Make sure the last cell isn't wide, if it is copy it to the current dest\n      if (destCol === 0 && destLineIndex !== 0) {\n        if (wrappedLines[destLineIndex - 1].getWidth(newCols - 1) === 2) {\n          wrappedLines[destLineIndex].copyCellsFrom(wrappedLines[destLineIndex - 1], newCols - 1, destCol++, 1, false);\n          // Null out the end of the last row\n          wrappedLines[destLineIndex - 1].setCell(newCols - 1, nullCell);\n        }\n      }\n    }\n\n    // Clear out remaining cells or fragments could remain;\n    wrappedLines[destLineIndex].replaceCells(destCol, newCols, nullCell);\n\n    // Work backwards and remove any rows at the end that only contain null cells\n    let countToRemove = 0;\n    for (let i = wrappedLines.length - 1; i > 0; i--) {\n      if (i > destLineIndex || wrappedLines[i].getTrimmedLength() === 0) {\n        countToRemove++;\n      } else {\n        break;\n      }\n    }\n\n    if (countToRemove > 0) {\n      toRemove.push(y + wrappedLines.length - countToRemove); // index\n      toRemove.push(countToRemove);\n    }\n\n    y += wrappedLines.length - 1;\n  }\n  return toRemove;\n}\n\n/**\n * Creates and return the new layout for lines given an array of indexes to be removed.\n * @param lines The buffer lines.\n * @param toRemove The indexes to remove.\n */\nexport function reflowLargerCreateNewLayout(lines: CircularList<IBufferLine>, toRemove: number[]): INewLayoutResult {\n  const layout: number[] = [];\n  // First iterate through the list and get the actual indexes to use for rows\n  let nextToRemoveIndex = 0;\n  let nextToRemoveStart = toRemove[nextToRemoveIndex];\n  let countRemovedSoFar = 0;\n  for (let i = 0; i < lines.length; i++) {\n    if (nextToRemoveStart === i) {\n      const countToRemove = toRemove[++nextToRemoveIndex];\n\n      // Tell markers that there was a deletion\n      lines.onDeleteEmitter.fire({\n        index: i - countRemovedSoFar,\n        amount: countToRemove\n      });\n\n      i += countToRemove - 1;\n      countRemovedSoFar += countToRemove;\n      nextToRemoveStart = toRemove[++nextToRemoveIndex];\n    } else {\n      layout.push(i);\n    }\n  }\n  return {\n    layout,\n    countRemoved: countRemovedSoFar\n  };\n}\n\n/**\n * Applies a new layout to the buffer. This essentially does the same as many splice calls but it's\n * done all at once in a single iteration through the list since splice is very expensive.\n * @param lines The buffer lines.\n * @param newLayout The new layout to apply.\n */\nexport function reflowLargerApplyNewLayout(lines: CircularList<IBufferLine>, newLayout: number[]): void {\n  // Record original lines so they don't get overridden when we rearrange the list\n  const newLayoutLines: BufferLine[] = [];\n  for (let i = 0; i < newLayout.length; i++) {\n    newLayoutLines.push(lines.get(newLayout[i]) as BufferLine);\n  }\n\n  // Rearrange the list\n  for (let i = 0; i < newLayoutLines.length; i++) {\n    lines.set(i, newLayoutLines[i]);\n  }\n  lines.length = newLayout.length;\n}\n\n/**\n * Gets the new line lengths for a given wrapped line. The purpose of this function it to pre-\n * compute the wrapping points since wide characters may need to be wrapped onto the following line.\n * This function will return an array of numbers of where each line wraps to, the resulting array\n * will only contain the values `newCols` (when the line does not end with a wide character) and\n * `newCols - 1` (when the line does end with a wide character), except for the last value which\n * will contain the remaining items to fill the line.\n *\n * Calling this with a `newCols` value of `1` will lock up.\n *\n * @param wrappedLines The wrapped lines to evaluate.\n * @param oldCols The columns before resize.\n * @param newCols The columns after resize.\n */\nexport function reflowSmallerGetNewLineLengths(wrappedLines: BufferLine[], oldCols: number, newCols: number): number[] {\n  const newLineLengths: number[] = [];\n  const cellsNeeded = wrappedLines.map((l, i) => getWrappedLineTrimmedLength(wrappedLines, i, oldCols)).reduce((p, c) => p + c);\n\n  // Use srcCol and srcLine to find the new wrapping point, use that to get the cellsAvailable and\n  // linesNeeded\n  let srcCol = 0;\n  let srcLine = 0;\n  let cellsAvailable = 0;\n  while (cellsAvailable < cellsNeeded) {\n    if (cellsNeeded - cellsAvailable < newCols) {\n      // Add the final line and exit the loop\n      newLineLengths.push(cellsNeeded - cellsAvailable);\n      break;\n    }\n    srcCol += newCols;\n    const oldTrimmedLength = getWrappedLineTrimmedLength(wrappedLines, srcLine, oldCols);\n    if (srcCol > oldTrimmedLength) {\n      srcCol -= oldTrimmedLength;\n      srcLine++;\n    }\n    const endsWithWide = wrappedLines[srcLine].getWidth(srcCol - 1) === 2;\n    if (endsWithWide) {\n      srcCol--;\n    }\n    const lineLength = endsWithWide ? newCols - 1 : newCols;\n    newLineLengths.push(lineLength);\n    cellsAvailable += lineLength;\n  }\n\n  return newLineLengths;\n}\n\nexport function getWrappedLineTrimmedLength(lines: BufferLine[], i: number, cols: number): number {\n  // If this is the last row in the wrapped line, get the actual trimmed length\n  if (i === lines.length - 1) {\n    return lines[i].getTrimmedLength();\n  }\n  // Detect whether the following line starts with a wide character and the end of the current line\n  // is null, if so then we can be pretty sure the null character should be excluded from the line\n  // length]\n  const endsInNull = !(lines[i].hasContent(cols - 1)) && lines[i].getWidth(cols - 1) === 1;\n  const followingLineStartsWithWide = lines[i + 1].getWidth(0) === 2;\n  if (endsInNull && followingLineStartsWithWide) {\n    return cols - 1;\n  }\n  return cols;\n}\n","/**\n * Copyright (c) 2018 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { Disposable } from 'common/Lifecycle';\nimport { IMarker } from 'common/Types';\n\nexport class Marker extends Disposable implements IMarker {\n  private static _nextId = 1;\n\n  private _id: number = Marker._nextId++;\n  public isDisposed: boolean = false;\n\n  public get id(): number { return this._id; }\n\n  private _onDispose = new EventEmitter<void>();\n  public get onDispose(): IEvent<void> { return this._onDispose.event; }\n\n  constructor(\n    public line: number\n  ) {\n    super();\n  }\n\n  public dispose(): void {\n    if (this.isDisposed) {\n      return;\n    }\n    this.isDisposed = true;\n    this.line = -1;\n    // Emit before super.dispose such that dispose listeners get a change to react\n    this._onDispose.fire();\n  }\n}\n","/**\n * Copyright (c) 2017 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICharSizeService, IRenderService, IMouseService } from './Services';\nimport { getCoords, getRawByteCoords } from 'browser/input/Mouse';\n\nexport class MouseService implements IMouseService {\n  serviceBrand: any;\n\n  constructor(\n    @IRenderService private readonly _renderService: IRenderService,\n    @ICharSizeService private readonly _charSizeService: ICharSizeService\n  ) {\n  }\n\n  public getCoords(event: {clientX: number, clientY: number}, element: HTMLElement, colCount: number, rowCount: number, isSelection?: boolean): [number, number] | undefined {\n    return getCoords(\n      event,\n      element,\n      colCount,\n      rowCount,\n      this._charSizeService.hasValidSize,\n      this._renderService.dimensions.actualCellWidth,\n      this._renderService.dimensions.actualCellHeight,\n      isSelection\n    );\n  }\n\n  public getRawByteCoords(event: MouseEvent, element: HTMLElement, colCount: number, rowCount: number): { x: number, y: number } | undefined {\n    const coords = this.getCoords(event, element, colCount, rowCount);\n    return getRawByteCoords(coords);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ICoreService, ILogService, IOptionsService, IBufferService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { IDecPrivateModes } from 'common/Types';\nimport { clone } from 'common/Clone';\n\nconst DEFAULT_DEC_PRIVATE_MODES: IDecPrivateModes = Object.freeze({\n  applicationCursorKeys: false\n});\n\nexport class CoreService implements ICoreService {\n  serviceBrand: any;\n\n  public decPrivateModes: IDecPrivateModes;\n\n  private _onData = new EventEmitter<string>();\n  public get onData(): IEvent<string> { return this._onData.event; }\n  private _onUserInput = new EventEmitter<void>();\n  public get onUserInput(): IEvent<void> { return this._onUserInput.event; }\n\n  constructor(\n    // TODO: Move this into a service\n    private readonly _scrollToBottom: () => void,\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ILogService private readonly _logService: ILogService,\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public reset(): void {\n    this.decPrivateModes = clone(DEFAULT_DEC_PRIVATE_MODES);\n  }\n\n  public triggerDataEvent(data: string, wasUserInput: boolean = false): void {\n    // Prevents all events to pty process if stdin is disabled\n    if (this._optionsService.options.disableStdin) {\n      return;\n    }\n\n    // Input is being sent to the terminal, the terminal should focus the prompt.\n    const buffer = this._bufferService.buffer;\n    if (buffer.ybase !== buffer.ydisp) {\n      this._scrollToBottom();\n    }\n\n    // Fire onUserInput so listeners can react as well (eg. clear selection)\n    if (wasUserInput) {\n      this._onUserInput.fire();\n    }\n\n    // Fire onData API\n    this._logService.debug(`sending data \"${data}\"`, () => data.split('').map(e => e.charCodeAt(0)));\n    this._onData.fire(data);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ILogService, IOptionsService } from 'common/services/Services';\n\ntype LogType = (message?: any, ...optionalParams: any[]) => void;\n\ninterface IConsole {\n  log: LogType;\n  error: LogType;\n  info: LogType;\n  trace: LogType;\n  warn: LogType;\n}\n\n// console is available on both node.js and browser contexts but the common\n// module doesn't depend on them so we need to explicitly declare it.\ndeclare const console: IConsole;\n\n\nexport enum LogLevel {\n  DEBUG = 0,\n  INFO = 1,\n  WARN = 2,\n  ERROR = 3,\n  OFF = 4\n}\n\nconst optionsKeyToLogLevel: { [key: string]: LogLevel } = {\n  debug: LogLevel.DEBUG,\n  info: LogLevel.INFO,\n  warn: LogLevel.WARN,\n  error: LogLevel.ERROR,\n  off: LogLevel.OFF\n};\n\nconst LOG_PREFIX = 'xterm.js: ';\n\nexport class LogService implements ILogService {\n  serviceBrand: any;\n\n  private _logLevel!: LogLevel;\n\n  constructor(\n    @IOptionsService private readonly _optionsService: IOptionsService\n  ) {\n    this._updateLogLevel();\n    this._optionsService.onOptionChange(key => {\n      if (key === 'logLevel') {\n        this._updateLogLevel();\n      }\n    });\n  }\n\n  private _updateLogLevel(): void {\n    this._logLevel = optionsKeyToLogLevel[this._optionsService.options.logLevel];\n  }\n\n  private _evalLazyOptionalParams(optionalParams: any[]): void {\n    for (let i = 0; i < optionalParams.length; i++) {\n      if (typeof optionalParams[i] === 'function') {\n        optionalParams[i] = optionalParams[i]();\n      }\n    }\n  }\n\n  private _log(type: LogType, message: string, optionalParams: any[]): void {\n    this._evalLazyOptionalParams(optionalParams);\n    type.call(console, LOG_PREFIX + message, ...optionalParams);\n  }\n\n  debug(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.DEBUG) {\n      this._log(console.log, message, optionalParams);\n    }\n  }\n\n  info(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.INFO) {\n      this._log(console.info, message, optionalParams);\n    }\n  }\n\n  warn(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.WARN) {\n      this._log(console.warn, message, optionalParams);\n    }\n  }\n\n  error(message: string, ...optionalParams: any[]): void {\n    if (this._logLevel <= LogLevel.ERROR) {\n      this._log(console.error, message, optionalParams);\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { IBufferService, IDirtyRowService } from 'common/services/Services';\n\nexport class DirtyRowService implements IDirtyRowService {\n  serviceBrand: any;\n\n  private _start!: number;\n  private _end!: number;\n\n  public get start(): number { return this._start; }\n  public get end(): number { return this._end; }\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService\n  ) {\n    this.clearRange();\n  }\n\n  public clearRange(): void {\n    this._start = this._bufferService.buffer.y;\n    this._end = this._bufferService.buffer.y;\n  }\n\n  public markDirty(y: number): void {\n    if (y < this._start) {\n      this._start = y;\n    } else if (y > this._end) {\n      this._end = y;\n    }\n  }\n\n  public markRangeDirty(y1: number, y2: number): void {\n    if (y1 > y2) {\n      const temp = y1;\n      y1 = y2;\n      y2 = temp;\n    }\n    if (y1 < this._start) {\n      this._start = y1;\n    }\n    if (y2 > this._end) {\n      this._end = y2;\n    }\n  }\n\n  public markAllDirty(): void {\n    this.markRangeDirty(0, this._bufferService.rows - 1);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n *\n * This was heavily inspired from microsoft/vscode's dependency injection system (MIT).\n */\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IInstantiationService, IServiceIdentifier } from 'common/services/Services';\nimport { getServiceDependencies } from 'common/services/ServiceRegistry';\n\nexport class ServiceCollection {\n\n  private _entries = new Map<IServiceIdentifier<any>, any>();\n\n  constructor(...entries: [IServiceIdentifier<any>, any][]) {\n    for (const [id, service] of entries) {\n      this.set(id, service);\n    }\n  }\n\n  set<T>(id: IServiceIdentifier<T>, instance: T): T {\n    const result = this._entries.get(id);\n    this._entries.set(id, instance);\n    return result;\n  }\n\n  forEach(callback: (id: IServiceIdentifier<any>, instance: any) => any): void {\n    this._entries.forEach((value, key) => callback(key, value));\n  }\n\n  has(id: IServiceIdentifier<any>): boolean {\n    return this._entries.has(id);\n  }\n\n  get<T>(id: IServiceIdentifier<T>): T {\n    return this._entries.get(id);\n  }\n}\n\nexport class InstantiationService implements IInstantiationService {\n  private readonly _services: ServiceCollection = new ServiceCollection();\n\n  constructor() {\n    this._services.set(IInstantiationService, this);\n  }\n\n  public setService<T>(id: IServiceIdentifier<T>, instance: T): void {\n    this._services.set(id, instance);\n  }\n\n  public createInstance<T>(ctor: any, ...args: any[]): any {\n    const serviceDependencies = getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n\n    const serviceArgs: any[] = [];\n    for (const dependency of serviceDependencies) {\n      const service = this._services.get(dependency.id);\n      if (!service) {\n        throw new Error(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`);\n      }\n      serviceArgs.push(service);\n    }\n\n    const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n\n    // check for argument mismatches, adjust static args if needed\n    if (args.length !== firstServiceArgPos) {\n      throw new Error(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n    }\n\n    // now create the instance\n    return <T>new ctor(...[...args, ...serviceArgs]);\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\nimport { IBufferService, ICoreService, ICoreMouseService } from 'common/services/Services';\nimport { EventEmitter, IEvent } from 'common/EventEmitter';\nimport { ICoreMouseProtocol, ICoreMouseEvent, CoreMouseEncoding, CoreMouseEventType, CoreMouseButton, CoreMouseAction } from 'common/Types';\n\n/**\n * Supported default protocols.\n */\nconst DEFAULT_PROTOCOLS: {[key: string]: ICoreMouseProtocol} = {\n  /**\n   * NONE\n   * Events: none\n   * Modifiers: none\n   */\n  NONE: {\n    events: CoreMouseEventType.NONE,\n    restrict: () => false\n  },\n  /**\n   * X10\n   * Events: mousedown\n   * Modifiers: none\n   */\n  X10: {\n    events: CoreMouseEventType.DOWN,\n    restrict: (e: ICoreMouseEvent) => {\n      // no wheel, no move, no up\n      if (e.button === CoreMouseButton.WHEEL || e.action !== CoreMouseAction.DOWN) {\n        return false;\n      }\n      // no modifiers\n      e.ctrl = false;\n      e.alt = false;\n      e.shift = false;\n      return true;\n    }\n  },\n  /**\n   * VT200\n   * Events: mousedown / mouseup / wheel\n   * Modifiers: all\n   */\n  VT200: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move\n      if (e.action === CoreMouseAction.MOVE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * DRAG\n   * Events: mousedown / mouseup / wheel / mousedrag\n   * Modifiers: all\n   */\n  DRAG: {\n    events: CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL | CoreMouseEventType.DRAG,\n    restrict: (e: ICoreMouseEvent) => {\n      // no move without button\n      if (e.action === CoreMouseAction.MOVE && e.button === CoreMouseButton.NONE) {\n        return false;\n      }\n      return true;\n    }\n  },\n  /**\n   * ANY\n   * Events: all mouse related events\n   * Modifiers: all\n   */\n  ANY: {\n    events:\n      CoreMouseEventType.DOWN | CoreMouseEventType.UP | CoreMouseEventType.WHEEL\n      | CoreMouseEventType.DRAG | CoreMouseEventType.MOVE,\n    restrict: (e: ICoreMouseEvent) => true\n  }\n};\n\nconst enum Modifiers {\n  SHIFT = 4,\n  ALT = 8,\n  CTRL = 16\n}\n\n// helper for default encoders to generate the event code.\nfunction eventCode(e: ICoreMouseEvent, isSGR: boolean): number {\n  let code = (e.ctrl ? Modifiers.CTRL : 0) | (e.shift ? Modifiers.SHIFT : 0) | (e.alt ? Modifiers.ALT : 0);\n  if (e.button === CoreMouseButton.WHEEL) {\n    code |= 64;\n    code |= e.action;\n  } else {\n    code |= e.button & 3;\n    if (e.button & 4) {\n      code |= 64;\n    }\n    if (e.button & 8) {\n      code |= 128;\n    }\n    if (e.action === CoreMouseAction.MOVE) {\n      code |= CoreMouseAction.MOVE;\n    } else if (e.action === CoreMouseAction.UP && !isSGR) {\n      // special case - only SGR can report button on release\n      // all others have to go with NONE\n      code |= CoreMouseButton.NONE;\n    }\n  }\n  return code;\n}\n\nconst S = String.fromCharCode;\n\n/**\n * Supported default encodings.\n */\nconst DEFAULT_ENCODINGS: {[key: string]: CoreMouseEncoding} = {\n  /**\n   * DEFAULT - CSI M Pb Px Py\n   * Single byte encoding for coords and event code.\n   * Can encode values up to 223. The Encoding of higher\n   * values is not UTF-8 compatible (and currently limited\n   * to 95 in xterm.js).\n   */\n  DEFAULT: (e: ICoreMouseEvent) => {\n    let params = [eventCode(e, false) + 32, e.col + 32, e.row + 32];\n    // FIXME: we are currently limited to ASCII range\n    params = params.map(v => (v > 127) ? 127 : v);\n    // FIXED: params = params.map(v => (v > 255) ? 0 : value);\n    return `\\x1b[M${S(params[0])}${S(params[1])}${S(params[2])}`;\n  },\n  /**\n   * SGR - CSI < Pb ; Px ; Py M|m\n   * No encoding limitation.\n   * Can report button on release and works with a well formed sequence.\n   */\n  SGR: (e: ICoreMouseEvent) => {\n    const final = (e.action === CoreMouseAction.UP && e.button !== CoreMouseButton.WHEEL) ? 'm' : 'M';\n    return `\\x1b[<${eventCode(e, true)};${e.col};${e.row}${final}`;\n  }\n};\n\n/**\n * CoreMouseService\n *\n * Provides mouse tracking reports with different protocols and encodings.\n *  - protocols: NONE (default), X10, VT200, DRAG, ANY\n *  - encodings: DEFAULT, SGR (UTF8, URXVT removed in #2507)\n *\n * Custom protocols/encodings can be added by `addProtocol` / `addEncoding`.\n * To activate a protocol/encoding, set `activeProtocol` / `activeEncoding`.\n * Switching a protocol will send a notification event `onProtocolChange`\n * with a list of needed events to track.\n *\n * The service handles the mouse tracking state and decides whether to send\n * a tracking report to the backend based on protocol and encoding limitations.\n * To send a mouse event call `triggerMouseEvent`.\n */\nexport class CoreMouseService implements ICoreMouseService {\n  private _protocols: {[name: string]: ICoreMouseProtocol} = {};\n  private _encodings: {[name: string]: CoreMouseEncoding} = {};\n  private _activeProtocol: string = '';\n  private _activeEncoding: string = '';\n  private _onProtocolChange = new EventEmitter<CoreMouseEventType>();\n  private _lastEvent: ICoreMouseEvent | null = null;\n\n  constructor(\n    @IBufferService private readonly _bufferService: IBufferService,\n    @ICoreService private readonly _coreService: ICoreService\n  ) {\n    // register default protocols and encodings\n    Object.keys(DEFAULT_PROTOCOLS).forEach(name => this.addProtocol(name, DEFAULT_PROTOCOLS[name]));\n    Object.keys(DEFAULT_ENCODINGS).forEach(name => this.addEncoding(name, DEFAULT_ENCODINGS[name]));\n    // call reset to set defaults\n    this.reset();\n  }\n\n  public addProtocol(name: string, protocol: ICoreMouseProtocol): void {\n    this._protocols[name] = protocol;\n  }\n\n  public addEncoding(name: string, encoding: CoreMouseEncoding): void {\n    this._encodings[name] = encoding;\n  }\n\n  public get activeProtocol(): string {\n    return this._activeProtocol;\n  }\n\n  public set activeProtocol(name: string) {\n    if (!this._protocols[name]) {\n      throw new Error(`unknown protocol \"${name}\"`);\n    }\n    this._activeProtocol = name;\n    this._onProtocolChange.fire(this._protocols[name].events);\n  }\n\n  public get activeEncoding(): string {\n    return this._activeEncoding;\n  }\n\n  public set activeEncoding(name: string) {\n    if (!this._encodings[name]) {\n      throw new Error(`unknown encoding \"${name}\"`);\n    }\n    this._activeEncoding = name;\n  }\n\n  public reset(): void {\n    this.activeProtocol = 'NONE';\n    this.activeEncoding = 'DEFAULT';\n    this._lastEvent = null;\n  }\n\n  /**\n   * Event to announce changes in mouse tracking.\n   */\n  public get onProtocolChange(): IEvent<CoreMouseEventType> {\n    return this._onProtocolChange.event;\n  }\n\n  /**\n   * Triggers a mouse event to be sent.\n   *\n   * Returns true if the event passed all protocol restrictions and a report\n   * was sent, otherwise false. The return value may be used to decide whether\n   * the default event action in the bowser component should be omitted.\n   *\n   * Note: The method will change values of the given event object\n   * to fullfill protocol and encoding restrictions.\n   */\n  public triggerMouseEvent(e: ICoreMouseEvent): boolean {\n    // range check for col/row\n    if (e.col < 0 || e.col >= this._bufferService.cols\n        || e.row < 0 || e.row >= this._bufferService.rows) {\n      return false;\n    }\n\n    // filter nonsense combinations of button + action\n    if (e.button === CoreMouseButton.WHEEL && e.action === CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button === CoreMouseButton.NONE && e.action !== CoreMouseAction.MOVE) {\n      return false;\n    }\n    if (e.button !== CoreMouseButton.WHEEL && (e.action === CoreMouseAction.LEFT || e.action === CoreMouseAction.RIGHT)) {\n      return false;\n    }\n\n    // report 1-based coords\n    e.col++;\n    e.row++;\n\n    // debounce move at grid level\n    if (e.action === CoreMouseAction.MOVE && this._lastEvent && this._compareEvents(this._lastEvent, e)) {\n      return false;\n    }\n\n    // apply protocol restrictions\n    if (!this._protocols[this._activeProtocol].restrict(e)) {\n      return false;\n    }\n\n    // encode report and send\n    const report = this._encodings[this._activeEncoding](e);\n    this._coreService.triggerDataEvent(report, true);\n\n    this._lastEvent = e;\n\n    return true;\n  }\n\n  public explainEvents(events: CoreMouseEventType): {[event: string]: boolean} {\n    return {\n      DOWN: !!(events & CoreMouseEventType.DOWN),\n      UP: !!(events & CoreMouseEventType.UP),\n      DRAG: !!(events & CoreMouseEventType.DRAG),\n      MOVE: !!(events & CoreMouseEventType.MOVE),\n      WHEEL: !!(events & CoreMouseEventType.WHEEL)\n    };\n  }\n\n  private _compareEvents(e1: ICoreMouseEvent, e2: ICoreMouseEvent): boolean {\n    if (e1.col !== e2.col) return false;\n    if (e1.row !== e2.row) return false;\n    if (e1.button !== e2.button) return false;\n    if (e1.action !== e2.action) return false;\n    if (e1.ctrl !== e2.ctrl) return false;\n    if (e1.alt !== e2.alt) return false;\n    if (e1.shift !== e2.shift) return false;\n    return true;\n  }\n}\n","\n/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\ndeclare const setTimeout: (handler: () => void, timeout?: number) => void;\n\n/**\n * Safety watermark to avoid memory exhaustion and browser engine crash on fast data input.\n * Enable flow control to avoid this limit and make sure that your backend correctly\n * propagates this to the underlying pty. (see docs for further instructions)\n * Since this limit is meant as a safety parachute to prevent browser crashs,\n * it is set to a very high number. Typically xterm.js gets unresponsive with\n * a 100 times lower number (>500 kB).\n */\nconst DISCARD_WATERMARK = 50000000; // ~50 MB\n\n/**\n * The max number of ms to spend on writes before allowing the renderer to\n * catch up with a 0ms setTimeout. A value of < 33 to keep us close to\n * 30fps, and a value of < 16 to try to run at 60fps. Of course, the real FPS\n * depends on the time it takes for the renderer to draw the frame.\n */\nconst WRITE_TIMEOUT_MS = 12;\n\n/**\n * Threshold of max held chunks in the write buffer, that were already processed.\n * This is a tradeoff between extensive write buffer shifts (bad runtime) and high\n * memory consumption by data thats not used anymore.\n */\nconst WRITE_BUFFER_LENGTH_THRESHOLD = 50;\n\nexport class WriteBuffer {\n  private _writeBuffer: (string | Uint8Array)[] = [];\n  private _callbacks: ((() => void) | undefined)[] = [];\n  private _pendingData = 0;\n  private _bufferOffset = 0;\n\n  constructor(private _action: (data: string | Uint8Array) => void) { }\n\n  public writeSync(data: string | Uint8Array): void {\n    // force sync processing on pending data chunks to avoid in-band data scrambling\n    // does the same as innerWrite but without event loop\n    if (this._writeBuffer.length) {\n      for (let i = this._bufferOffset; i < this._writeBuffer.length; ++i) {\n        const data = this._writeBuffer[i];\n        const cb = this._callbacks[i];\n        this._action(data);\n        if (cb) cb();\n      }\n      // reset all to avoid reprocessing of chunks with scheduled innerWrite call\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      // stop scheduled innerWrite by offset > length condition\n      this._bufferOffset = 0x7FFFFFFF;\n    }\n    // handle current data chunk\n    this._action(data);\n  }\n\n  public write(data: string | Uint8Array, callback?: () => void): void {\n    if (this._pendingData > DISCARD_WATERMARK) {\n      throw new Error('write data discarded, use flow control to avoid losing data');\n    }\n\n    // schedule chunk processing for next event loop run\n    if (!this._writeBuffer.length) {\n      this._bufferOffset = 0;\n      setTimeout(() => this._innerWrite());\n    }\n\n    this._pendingData += data.length;\n    this._writeBuffer.push(data);\n    this._callbacks.push(callback);\n  }\n\n  protected _innerWrite(): void {\n    const startTime = Date.now();\n    while (this._writeBuffer.length > this._bufferOffset) {\n      const data = this._writeBuffer[this._bufferOffset];\n      const cb = this._callbacks[this._bufferOffset];\n      this._bufferOffset++;\n\n      this._action(data);\n      this._pendingData -= data.length;\n      if (cb) cb();\n\n      if (Date.now() - startTime >= WRITE_TIMEOUT_MS) {\n        break;\n      }\n    }\n    if (this._writeBuffer.length > this._bufferOffset) {\n      // Allow renderer to catch up before processing the next batch\n      // trim already processed chunks if we are above threshold\n      if (this._bufferOffset > WRITE_BUFFER_LENGTH_THRESHOLD) {\n        this._writeBuffer = this._writeBuffer.slice(this._bufferOffset);\n        this._callbacks = this._callbacks.slice(this._bufferOffset);\n        this._bufferOffset = 0;\n      }\n      setTimeout(() => this._innerWrite(), 0);\n    } else {\n      this._writeBuffer = [];\n      this._callbacks = [];\n      this._pendingData = 0;\n      this._bufferOffset = 0;\n    }\n  }\n}\n","/**\n * Copyright (c) 2019 The xterm.js authors. All rights reserved.\n * @license MIT\n */\n\nimport { ITerminalAddon, IDisposable, Terminal } from 'xterm';\n\nexport interface ILoadedAddon {\n  instance: ITerminalAddon;\n  dispose: () => void;\n  isDisposed: boolean;\n}\n\nexport class AddonManager implements IDisposable {\n  protected _addons: ILoadedAddon[] = [];\n\n  constructor() {\n  }\n\n  public dispose(): void {\n    for (let i = this._addons.length - 1; i >= 0; i--) {\n      this._addons[i].instance.dispose();\n    }\n  }\n\n  public loadAddon(terminal: Terminal, instance: ITerminalAddon): void {\n    const loadedAddon: ILoadedAddon = {\n      instance,\n      dispose: instance.dispose,\n      isDisposed: false\n    };\n    this._addons.push(loadedAddon);\n    instance.dispose = () => this._wrappedAddonDispose(loadedAddon);\n    instance.activate(<any>terminal);\n  }\n\n  private _wrappedAddonDispose(loadedAddon: ILoadedAddon): void {\n    if (loadedAddon.isDisposed) {\n      // Do nothing if already disposed\n      return;\n    }\n    let index = -1;\n    for (let i = 0; i < this._addons.length; i++) {\n      if (this._addons[i] === loadedAddon) {\n        index = i;\n        break;\n      }\n    }\n    if (index === -1) {\n      throw new Error('Could not dispose an addon that has not been loaded');\n    }\n    loadedAddon.isDisposed = true;\n    loadedAddon.dispose.apply(loadedAddon.instance);\n    this._addons.splice(index, 1);\n  }\n}\n","import { Terminal } from \"xterm\";\nimport \"xterm/css/xterm.css\";\n\nclass TerminalUI {\n  constructor(socket) {\n    this.terminal = new Terminal();\n    this.terminal.setOption(\"theme\", {\n      background: \"#202B33\",\n      foreground: \"#F5F8FA\"\n    });\n    this.socket = socket;\n  }\n\n  startListening = () => {\n    this.terminal.onData((data) => this.sendInput(data));\n    this.socket.on('output', data => {\n      this.write(data);\n    });\n  }\n\n  write = text => this.terminal.write(text)\n\n  prompt = () => this.terminal.write(`\\r\\n$ `) /* Utility function to print new line on terminal */ \n\n  sendInput = input => this.socket.emit('input', input)\n\n  attachTo = (container) => {\n    this.terminal.open(container);\n    this.terminal.write(\"Terminal Connected\");\n    this.terminal.write(\"\");\n    this.prompt();\n  }\n\n  clear = () => this.terminal.clear()\n}\n\nexport default TerminalUI;\n","import io from \"socket.io-client\";\n\nimport TerminalUI from \"./TerminalUI\";\n\nconst serverAddress = \"http://localhost:8080\"; /* SERVER ADDRESS */\n\nconst startTerminal = container => (socket) => {\n  const terminal = new TerminalUI(socket);\n  terminal.attachTo(container);\n  terminal.startListening();\n}\n\nconst connectToSocket = serverAddress => new Promise((res) => {\n  const socket = io(serverAddress);\n  res(socket);\n});\n\n/** START THE PROCESS */\n(() => {\n  const container = document.getElementById('terminal-container');\n  connectToSocket(serverAddress)\n    .then(startTerminal(container));\n})();\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}